{
  "openapi": "3.0.1",
  "info": {
    "description": "## Introduction\n\nAll API calls are GET and POST HTTP requests to your account domain (except for requests to the authorization server) at the URL / api / v1\n\nTo authenticate each request, you must pass a server API key (parameter api\\_key).\n<br>\n```\nhttps://{{your_company}}.flowlu.com/api/v1/module/{{module_name}}/{{entity_name}}/{{method}}?api_key=dDhlTUtENmp4OFBGQkN0N2hUMUNUQ0FFeGI5N2JRZ0VfMQ\n```\n\nData transfer must be in FORM URLEncoded format.\n\n## Limits\nTotal limits - 100 requests per minute for an account.\nIn case of blocking, the method returns HTTP 429 Too Many Requests response.\n\n\n## Common structure\n\n* https://{{your\\_company}}.flowlu.com/ — Your account URL, where your account code should be specified instead of your\\_company\n* /api/v1/ - API address and version (v1)\n* /module/{{module\\_name}}/ — points to module\n* /{{entity\\_name}}/ —points to an entity\n* /{{method}} — points to a method (create, get, list, delete, update)\n* ?api\\_key=\\* — your personal API key\n\nThe response to the request will be returned in JSON format with HTTP code 200. A successful request contains a response object.\n\n## API key\n\nAPI key management is available in the System Settings <span class=\"colour\" style=\"color:rgb(77, 81, 86)\">→ </span>API Settings.\n\nYou can create and delete keys, as well as configure access rights to individual modules of each key.\n\nRemoving the key will permanently deactivate it.\n\nFor authentication using an API key, it is required to pass it with each request to the server the api\\_key parameter.\n\nExample:\n<br>\n```\nhttps://{{your_company}}.flowlu.com/api/v1/module/crm/lead/list?api_key=dDhlTUtENmp4OFBGQkN0N2hUMUNUQ0FFeGI5N2JRZ0VfMQ\n```\n\n## Basic methods\n\n### GET\n\n* /{{module\\_name}}/{{entity\\_name}}/get/{id} - getting a record by id\n\nAn example of getting a record with id = 42:\n<br>\n```\nGET https://{{your_company}}.flowlu.com/api/v1/module/crm/lead/get/42\n```\n\nRecord requests can return an error of the data received in the request\n<br>\n```\n{\n  \"error\": {\n    \"error_code\": 20,\n    \"error_msg\": \"not found\"\n  }\n}\n```\n\n### CREATE\n\n* /{{module\\_name}}/{{entity\\_name}}/create - creating a record\n\nAn example of creating a record:\n<br>\n```\nPOST https://{{your_company}}.flowlu.com/api/v1/module/crm/lead/create\n```\n\nThe response contains the id field with the identifier of the new record\n<br>\n```\n{\n  \"response\": {\n    \"id\": 5,\n    \"_resultMessage\": \"Your application is accepted. Application number # 5\"\n  }\n}\n```\n\nA request to create a record may return a validation error for the data received in the request\n<br>\n```\n{\n  \"error\": \"validation\",\n  \"description\": \"Form filling error\",\n  \"details\": {\n    \"name\": \"name cannot be empty\"\n  }\n}\n```\n\n### UPDATE\n\n<span class=\"colour\" style=\"color:rgb(0, 0, 0)\">/{{module\\_name}}/{{entity\\_name}}/update/{ID} — </span>update record by id\n\nAn example of updating a record with id = 42\n<br>\n```\nPOST https://{{your_company}}.flowlu.com/api/v1/module/crm/lead/update/42\n```\n\nThe response contains all the fields in the updated record.\n\nRecord update requests may return an error on the data received in the request\n<br>\n```\n{\n  \"error\": {\n    \"error_code\": 20,\n    \"error_msg\": \"not found\"\n  }\n}\n```\n\n### DELETE\n\n<span class=\"colour\" style=\"color:rgb(0, 0, 0)\">/DELETE/{ID} </span>—deleting a record by id.\n\nExample of deleting a deal with id = 42\n<br>\n```\nGET https://{{your_company}}.flowlu.com/api/v1/module/crm/lead/delete/42\n```\n\nThe response contains an id field with the identifier of the deleted record\n<br>\n```\n{\n  \"response\": {\n    \"id\": \"42\"\n  }\n}\n```\n\n### LIST\n\n<span class=\"colour\" style=\"color:rgb(0, 0, 0)\">/LIST </span>—<span class=\"colour\" style=\"color:rgb(0, 0, 0)\"> </span>getting a list of records with the ability to filter.\n<br>\n```\nGET https://{{your_company}}.flowlu.com/api/v1/module/crm/lead/list\n```\n\n```\nGET https://{{your_company}}.flowlu.com/api/v1/module/crm/account/list?search=flowlu&page=3\n```\n\nAvailable query parameters:\n<br>\n* limit - the maximum number of records given per request. The default is 50, the maximum is 100.\n* page - page number of the query result. The default is 1.\n* filter - an array of parameters for filtering the resulting list of records.\n* search - search query.\n\n| Field | Description |\n| ----- | ----------- |\n| total | total number of records, excluding the current search query and applied filters |\n| total\\_result | total number of records, including the current search query and applied filters |\n| page | page number |\n| count | number of records in response |\n| items | array of objects of received records |\n\n```\n{\n  \"response\": {\n    \"total\": 3,\n    \"page\": 1,\n    \"count\": 3,\n    \"items\": [\n      {\n        \"id\": 5,\n        \"active\": 1,\n        \"name\": \"company5\",\n      },\n      {\n        \"id\": 4,\n        \"active\": 1,\n        \"name\": \"company4\",\n        ...\n      },\n      ...\n\n    ]\n  }\n}\n```\n\n## Filter\n\nTo filter the received records, you need to pass the filter parameter, which is an array, in which the key is a field of records to filter.\n\n```\nGET https://{{your_company}}.flowlu.com/api/v1/module/crm/account/list?filter[active]=1\n```\n\nComma-separated list of values are available.\n<br>\n```\nGET https://{{your_company}}.flowlu.com/api/v1/module/crm/account/list?filter[type_id]=1,2\n```\n\nTo exclude by value, use the!\n<br>\n```\nGET https://{{your_company}}.flowlu.com/api/v1/module/crm/account/list?filter[type_id]=!1\n```\n\nFiltering by time interval is possible by passing a JSON object, with fields start\\_date and end\\_date\n\n```\nGET https://{{your_company}}.flowlu.com/api/v1/module/crm/account/list?filter[created_date]={“start_date”: “2017-02-05”, “end_date”: “2017-10-05”}\n```\n\n```\nGET https://{{your_company}}.flowlu.com/api/v1/module/crm/account/list?filter[closed_date]={“start_date”: “2017-01-05”}\n```\n<br>\nFiltering by custom fields\n\n```\nGET https://{{your_company}}.flowlu.com/api/v1/module/crm/account/list?filter[cf.field_1]=filter_value\n```\n\n## Search\n\nTo search % LIKE% by values, you need to pass the search = {{value}} parameter..\n\n```\nGET https://{{your_company}}.flowlu.com/api/v1/module/crm/account/list?search=Flowlu\n```\n\n## Relations\n\nEntities can have relationships with other entities using a foreign key.\nIf the relationship goes on several fields, then additional foreign keys are used, which point to the fields.\n\nFor the convenience of working with related entities, you can use the methods described below.\n\nArguments\n\n* {{module}} - module name.\n* {{model}} - model name.\n* {{model \\_id}} - model id\n* {{alias}} - Alias used for communication with the entity\n\n### Many to one relationship (belongs to)\n\n> Keys are stored in the same entity.\n\n#### Receiving\n\n```\nGET https://{{your_company}}.flowlu.com/api/v1/module/{{module}}/{{model}}/{{model_id}}/{{alias}}/get\n```\n\n#### Update\n\n```\nPOST https://{{your_company}}.flowlu.com/api/v1/module/{{module}}/{{model}}/{{model_id}}/{{alias}}/update\n```\n\n### One to many relationship (has many)\n\n> Keys are stored in the associated entity.\n\n#### List\n\n```\nGET https://{{your_company}}.flowlu.com/api/v1/module/{{module}}/{{model}}/{{model_id}}/{{alias}}/list\n```\n\n#### Create\n\n```\nPOST https://{{your_company}}.flowlu.com/api/v1/module/{{module}}/{{model}}/{{model_id}}/{{alias}}/create\n```\n\n## Data types\n\n| Name | Description | Example |\n| ---- | ----------- | ------- |\n| int | A number in the range -2147483648 to 2147483647 | 586844 |\n| string | String with a maximum length of 255 characters | There can be text with a maximum length of 255 |\n| text | Text | There may be a lot of text here |\n| boolean | 1 or 0 | 1 ; 0 |\n| float | Floating point number | 457.45869 |\n| price | Number, the maximum total number of stored decimal places in which is 20 including 2 after the decimal point | 546.56 |\n| datetime | ISO 8601 format string (YYYY-MM-DD hh: mm: ss) | 2020-08-26 09:31:16 |\n| date | ISO 8601 format string (YYYY-MM-DD) | 2020-08-26 |\n\n## Webhooks\n\nYou can create a new webhook in Flowlu via the System Settings <span class=\"colour\" style=\"color:rgb(77, 81, 86)\">→</span> Webhooks. The data is sent in JSON format. The request is made as an HTTP POST request.\n\n### Format\n\n``` json\n{\n  \"meta\": {\n    \"module\": \"crm\",\n    \"model\": \"account\",\n    \"action\": \"create\"\n  },\n  \"current\": (the object data as of this update),\n  \"previous\": (the object data prior to this update)\n}\n```\n\n### Fields\n\n| Field | type | description |\n| ----- | ---- | ----------- |\n| meta.module | string | Entity module name |\n| meta.model | string | Entity model name |\n| meta.action | string | Event name (\"create\", \"update\" or \"delete\") |\n| current | object or null | Entity current state |\n| previous | object or null | Entity previous state |\n\nEntity state is data that are placed in a way which conforms to our API Reference.",
    "version": "        1.0",
    "title": "Flowlu Rest API Documentation"
  },
  "servers": [
    {
      "url": "https://{company}.flowlu.com/api/v1/module",
      "variables": {
        "company": {
          "default": "your_company",
          "description": ""
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "query",
        "name": "api_key"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "x-tagGroups": [
    {
      "name": "Custom fields",
      "tags": [
        "Customfields",
        "Fieldsets",
        "Fields",
        "Options",
        "Selected checkboxes option"
      ]
    },
    {
      "name": "Tasks",
      "tags": [
        "Task",
        "Tasks",
        "Lists",
        "Linking tasks & lists",
        "Followers",
        "Collaborators",
        "Task Workflows",
        "Workflow Statuses"
      ]
    },
    {
      "name": "Calendar",
      "tags": [
        "Calendar"
      ]
    },
    {
      "name": "Agile Projects",
      "tags": [
        "Agile",
        "Issues",
        "Issue relation types",
        "Issue relation names",
        "Issue relation",
        "Issue type",
        "Sprint",
        "Agile project",
        "Project users",
        "Workflow",
        "Stage",
        "Issue types and project relations ",
        "Tags",
        "Tag and issue relation",
        "Agile categories",
        "Reference issue relation"
      ]
    },
    {
      "name": "CRM",
      "tags": [
        "CRM",
        "Accounts",
        "Relation",
        "Loss reasons",
        "Opportunities sources",
        "Opportunity stages",
        "Sales Funnels ",
        "Opportunities ",
        "Account types",
        "Account industries",
        "Honorifics",
        "Еmail",
        "Clients phone numbers"
      ]
    },
    {
      "name": "Projects",
      "tags": [
        "Project ",
        "Project",
        "Project Templates",
        "Project stages",
        "Stage milestone",
        "Estimated Revenue",
        "Estimated Expenses"
      ]
    },
    {
      "name": "Finance",
      "tags": [
        "Finance ",
        "Organization",
        "Invoice",
        "Invoice items",
        "Money",
        "Invoice contacts",
        "Bank account",
        "Estimate",
        "Estimate items",
        "Estimate template",
        "Estimate contacts",
        "Transaction",
        "Recurring invoice",
        "Recurring Invoice settings"
      ]
    },
    {
      "name": "Time Tracker ",
      "tags": [
        "Time Tracker",
        "Time sheet",
        "TIme Log"
      ]
    },
    {
      "name": "Products",
      "tags": [
        "Product ",
        "Items",
        "Categories",
        "Price list",
        "Price list and item relation",
        "Price"
      ]
    },
    {
      "name": "Additional info",
      "tags": [
        "Webhooks",
        "Global tags",
        "Getting users"
      ]
    }
  ],
  "tags": [
    {
      "name": "Customfields",
      "description": "An entity can have custom fields. Such fields are named using the pattern `cf_{{number}}`. In entity, you cannot create a new field from the API, but you can change, add and remove values, just like with regular entity fields. To get full information about a field, you need add `customfields = 1` in query parameters.\n\n<span style=\"font-size:19x\">&nbsp;</span>If you change the CustomField value but it doesn't update, try `cf.{{number}}` instead of `cf_{{number}}`. In some cases, `cf_{{number}}` template may not work correctly.\nTo set values in checkboxes use square brackets `cf_900[]` (cf\\_900[] = option\\_id, cf\\_900[] = option2\\_id).\nDrop-down sets like a regular field (cf\\_900 = option\\_id).\n\nExamples:\n\n1. https://{{your\\_company}}.flowlu.com/api/v1/module/task/tasks/get/8225\n\n```\n\"response\": {\n                \"id\": 8225,\n                \"name\": \"Task 1\",\n                ...\n                \"crm_account_id\": 0,\n                \"cf_900\": \"0\"\n        }\n```\n\n2. https://{{your\\_company}}.flowlu.com/api/v1/module/task/tasks/get/8225?customfields=1\n\n```\n\"response\": {\n                \"id\": 8225,\n                \"name\": \"Task 1\",\n                ...\n                \"crm_account_id\": 0,\n                \"customfields\": [\n                    {\n                        \"id\": \"900\",\n                        \"title\": \"Yes-No\",\n                        \"type\": \"boolean\",\n                        \"value\": \"0\"\n                    }\n                ]\n        }\n```\n\n3. Seting values in checkboxes\n\n`https://{{your_company}}.flowlu.ru/api/v1/module/crm/contact/update/666?api_key=<api_key>' \\ --header 'Content-Type: application/x-www-form-urlencoded' \\ --data 'cf_900[]=866' \\ --data 'cf_900[]=897'`"
    },
    {
      "name": "Fieldsets",
      "description": "<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Fields\">fields</td><td>Custom fields</td><td>Fields</td><td>fieldset_id</td></tr></table>"
    },
    {
      "name": "Fields",
      "description": "<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Fieldsets\">_fieldset</td><td>Custom fields</td><td>Fieldsets</td><td>fieldset_id</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Options\">options</td><td>Custom fields</td><td>Options</td><td>field_id</td></tr><tr><td><a href = \"#tag/Selected checkboxes option\">selected_options</td><td>Custom fields</td><td>Selected checkboxes option</td><td>field_id</td></tr></table>"
    },
    {
      "name": "Options",
      "description": "Options<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Options\">field</td><td>Custom fields</td><td>Options</td><td>field_id</td></tr></table>"
    },
    {
      "name": "Selected checkboxes option",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Fields\">field</td><td>Custom fields</td><td>Fields</td><td>field_id</td></tr><tr><td><a href = \"#tag/Options\">option</td><td>Custom fields</td><td>Options</td><td>fieldoption_id</td></tr></table>"
    },
    {
      "name": "Task",
      "description": "The Tasks, inspired by ‘Getting things done’ methodology, allow you to organize collaborative work, delegate tasks, monitor the work of your team and deadlines. This module brings together all the tasks that are related to you. These are personal or delegated tasks, tasks you follow, etc."
    },
    {
      "name": "Tasks",
      "description": "The tasks for the \"Tasks\" module and events for the \"Calendar\" module are described here.<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th><th>Foreigh keys</th></tr><tr><td><a href = \"#tag/Accounts\">company</td><td>CRM</td><td>Accounts</td><td>crm_account_id</td><td></td></tr><tr><td><a href = \"#tag/Tasks\">template</td><td>Tasks</td><td>Tasks</td><td>template_id</td><td></td></tr><tr><td><a href = \"#tag/Calendar\">calendar</td><td>Calendar</td><td>Calendar</td><td>event_calendar_id</td><td></td></tr><tr><td><a href = \"#tag/Task Workflows\">workflow</td><td>Tasks</td><td>Task Workflows</td><td>workflow_id</td><td></td></tr><tr><td><a href = \"#tag/Workflow Statuses\">workflow_stage</td><td>Tasks</td><td>Workflow Statuses</td><td>workflow_stage_id</td><td></td></tr><tr><td><a href = \"#tag/Tasks\">parent</td><td>Tasks</td><td>Tasks</td><td>parent_id</td><td></td></tr><tr><td><a href = \"#tag/Project\">project</td><td>Projects</td><td>Project</td><td>model_id</td><td>module = st, model = project</td></tr><tr><td><a href = \"#tag/Opportunities \">lead</td><td>CRM</td><td>Opportunities </td><td>model_id</td><td>module = crm, model = leads</td></tr><tr><td><a href = \"#tag/Project stages\">project_stage</td><td>Projects</td><td>Project stages</td><td>project_stage_id</td><td>module = st, model = project</td></tr><tr><td><a href = \"#tag/Stage milestone\">project_stage_checkitem</td><td>Projects</td><td>Stage milestone</td><td>project_checkitem_id</td><td>module = st, model = project</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Followers\">model_collaborators</td><td>Tasks</td><td>Followers</td><td>task_id</td></tr><tr><td><a href = \"#tag/Collaborators\">model_participants</td><td>Tasks</td><td>Collaborators</td><td>task_id</td></tr><tr><td><a href = \"#tag/Tasks\">subtasks</td><td>Tasks</td><td>Tasks</td><td>parent_id</td></tr></table>"
    },
    {
      "name": "Lists",
      "description": "<br>"
    },
    {
      "name": "Linking tasks & lists",
      "description": " <br>"
    },
    {
      "name": "Followers",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Tasks\">task</td><td>Tasks</td><td>Tasks</td><td>task_id</td></tr></table>"
    },
    {
      "name": "Collaborators",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Tasks\">task</td><td>Tasks</td><td>Tasks</td><td>task_id</td></tr></table>"
    },
    {
      "name": "Task Workflows",
      "description": "<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Tasks\">tasks</td><td>Tasks</td><td>Tasks</td><td>workflow_id</td></tr><tr><td><a href = \"#tag/Workflow Statuses\">stages</td><td>Tasks</td><td>Workflow Statuses</td><td>workflow_id</td></tr><tr><td><a href = \"#tag/Project\">projects</td><td>Projects</td><td>Project</td><td>tasks_workflow_id</td></tr><tr><td><a href = \"#tag/Project Templates\">projects_workflows</td><td>Projects</td><td>Project Templates</td><td>tasks_workflow_id</td></tr></table>"
    },
    {
      "name": "Workflow Statuses",
      "description": "<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Task Workflows\">workflow</td><td>Tasks</td><td>Task Workflows</td><td>workflow_id</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Tasks\">tasks</td><td>Tasks</td><td>Tasks</td><td>workflow_stage_id</td></tr></table>"
    },
    {
      "name": "Calendar",
      "description": "<br>"
    },
    {
      "name": "Agile",
      "description": "With the Agile, you can manage projects that frequently change requirements and priorities. The agile approach is frequently used in project management of various industries, such as software development, marketing, education, design, etc. An agile approach to project management is focused on bringing maximum value for the consumer."
    },
    {
      "name": "Issues",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Agile project\">project</td><td>Agile Projects</td><td>Agile project</td><td>project_id</td></tr><tr><td><a href = \"#tag/Sprint\">sprint</td><td>Agile Projects</td><td>Sprint</td><td>sprint_id</td></tr><tr><td><a href = \"#tag/Stage\">stage</td><td>Agile Projects</td><td>Stage</td><td>workflow_stage_id</td></tr><tr><td><a href = \"#tag/Issue type\">type</td><td>Agile Projects</td><td>Issue type</td><td>type_id</td></tr><tr><td><a href = \"#tag/Agile categories\">category</td><td>Agile Projects</td><td>Agile categories</td><td>category_id</td></tr><tr><td><a href = \"#tag/Issues\">parent_issue</td><td>Agile Projects</td><td>Issues</td><td>parent_issue_id</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Issues\">child_issues</td><td>Agile Projects</td><td>Issues</td><td>parent_issue_id</td></tr><tr><td><a href = \"#tag/Issue relation\">parent_issue_relations</td><td>Agile Projects</td><td>Issue relation</td><td>parent_issue_id</td></tr><tr><td><a href = \"#tag/Issue relation\">child_issue_relations</td><td>Agile Projects</td><td>Issue relation</td><td>child_issue_id</td></tr><tr><td><a href = \"#tag/Issues\">subtasks</td><td>Agile Projects</td><td>Issues</td><td>parent_issue_id</td></tr><tr><td><a href = \"#tag/Reference issue relation\">ref_tickets</td><td>Agile Projects</td><td>Reference issue relation</td><td>issue_id</td></tr></table>"
    },
    {
      "name": "Issue relation types",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Issue relation names\">parent_relation_name</td><td>Agile Projects</td><td>Issue relation names</td><td>parent_relation_name_id</td></tr><tr><td><a href = \"#tag/Issue relation names\">child_relation_name</td><td>Agile Projects</td><td>Issue relation names</td><td>child_relation_name_id</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Issue relation\">issue_relations</td><td>Agile Projects</td><td>Issue relation</td><td>type</td></tr></table>"
    },
    {
      "name": "Issue relation names",
      "description": " <br>"
    },
    {
      "name": "Issue relation",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Issue relation types\">relation_type</td><td>Agile Projects</td><td>Issue relation types</td><td>type</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Issues\">parent_issues</td><td>Agile Projects</td><td>Issues</td><td>parent_issue_id</td></tr></table>"
    },
    {
      "name": "Issue type",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Issues\">issues</td><td>Agile Projects</td><td>Issues</td><td>type_id</td></tr></table>"
    },
    {
      "name": "Sprint",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Agile project\">project</td><td>Agile Projects</td><td>Agile project</td><td>project_id</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Issues\">issues</td><td>Agile Projects</td><td>Issues</td><td>sprint_id</td></tr></table>"
    },
    {
      "name": "Agile project",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Workflow\">workflow</td><td>Agile Projects</td><td>Workflow</td><td>workflow_id</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Sprint\">sprints</td><td>Agile Projects</td><td>Sprint</td><td>project_id</td></tr><tr><td><a href = \"#tag/Issues\">issues</td><td>Agile Projects</td><td>Issues</td><td>project_id</td></tr><tr><td><a href = \"#tag/Agile categories\">categories</td><td>Agile Projects</td><td>Agile categories</td><td>project_id</td></tr><tr><td><a href = \"#tag/Tags\">tags</td><td>Agile Projects</td><td>Tags</td><td>project_id</td></tr></table>"
    },
    {
      "name": "Project users",
      "description": " <br>"
    },
    {
      "name": "Workflow",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Stage\">stages</td><td>Agile Projects</td><td>Stage</td><td>workflow_id</td></tr><tr><td><a href = \"#tag/Agile project\">projects</td><td>Agile Projects</td><td>Agile project</td><td>workflow_id</td></tr></table>"
    },
    {
      "name": "Stage",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Workflow\">workflow</td><td>Agile Projects</td><td>Workflow</td><td>workflow_id</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Issues\">issues</td><td>Agile Projects</td><td>Issues</td><td>workflow_stage_id</td></tr></table>"
    },
    {
      "name": "Issue types and project relations ",
      "description": " <br>"
    },
    {
      "name": "Tags",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Agile project\">project</td><td>Agile Projects</td><td>Agile project</td><td>project_id</td></tr></table>"
    },
    {
      "name": "Tag and issue relation",
      "description": " <br>"
    },
    {
      "name": "Agile categories",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Agile project\">project</td><td>Agile Projects</td><td>Agile project</td><td>project_id</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Issues\">issues</td><td>Agile Projects</td><td>Issues</td><td>category_id</td></tr></table>"
    },
    {
      "name": "Reference issue relation",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Issues\">issue</td><td>Agile Projects</td><td>Issues</td><td>issue_id</td></tr></table>"
    },
    {
      "name": "CRM",
      "description": "The CRM includes tools for managing opportunities and features all client information and interaction, i.e. events, tasks, emails, invoices, projects, etc.  CRM helps you build efficient sales processes and provides total control over the whole customer journey – from lead to order."
    },
    {
      "name": "Accounts",
      "description": "This entity in Flowlu is Company or Contact. Accounts can be your customers, suppliers, partners, competitors etc.<br> Account can has different types (Company - 1 or Contact - 2). Each account can has relations (Relations entity) to other accounts (contact person in some company or companies). Also you can link to account tasks, leads, events, projects invoices and other entities.<br>The account can be merged with others (if duplicates found). When account is merged, field merge_to contains id of entry in which current was merged<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Account types\">category</td><td>CRM</td><td>Account types</td><td>account_category_id</td></tr><tr><td><a href = \"#tag/Account industries\">industry</td><td>CRM</td><td>Account industries</td><td>industry_id</td></tr><tr><td><a href = \"#tag/Honorifics\">honorific</td><td>CRM</td><td>Honorifics</td><td>honorific_title_id</td></tr><tr><td><a href = \"#tag/Accounts\">merged_account</td><td>CRM</td><td>Accounts</td><td>merged_to</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th><th>Foreigh keys</th></tr><tr><td><a href = \"#tag/Relation\">parent_relations</td><td>CRM</td><td>Relation</td><td>child_acc_id</td><td></td></tr><tr><td><a href = \"#tag/Relation\">child_relations</td><td>CRM</td><td>Relation</td><td>parent_acc_id</td><td></td></tr><tr><td><a href = \"#tag/Project\">contacts_projects</td><td>Projects</td><td>Project</td><td>customer_crm_contact_id</td><td></td></tr><tr><td><a href = \"#tag/Project\">companies_projects</td><td>Projects</td><td>Project</td><td>customer_id</td><td></td></tr><tr><td><a href = \"#tag/Tasks\">contacts_tasks</td><td>Tasks</td><td>Tasks</td><td>model_id</td><td>module = crm, model = contact</td></tr><tr><td><a href = \"#tag/Tasks\">companies_tasks</td><td>Tasks</td><td>Tasks</td><td>model_id</td><td>module = crm, model = company</td></tr><tr><td><a href = \"#tag/Tasks\">account_tasks</td><td>Tasks</td><td>Tasks</td><td>model_id</td><td>module = crm, model = account</td></tr><tr><td><a href = \"#tag/Tasks\">companies_linked_tasks</td><td>Tasks</td><td>Tasks</td><td>crm_account_id</td><td></td></tr><tr><td><a href = \"#tag/Tasks\">tasks</td><td>Tasks</td><td>Tasks</td><td>crm_account_id</td><td></td></tr><tr><td><a href = \"#tag/Opportunities \">contacts_leads</td><td>CRM</td><td>Opportunities </td><td>contact_id</td><td></td></tr><tr><td><a href = \"#tag/Opportunities \">companies_leads</td><td>CRM</td><td>Opportunities </td><td>customer_id</td><td></td></tr><tr><td><a href = \"#tag/Estimated Revenue\">projectmoneystages</td><td>Projects</td><td>Estimated Revenue</td><td>crm_company_id</td><td></td></tr><tr><td><a href = \"#tag/Estimated Expenses\">projectexpenses</td><td>Projects</td><td>Estimated Expenses</td><td>crm_company_id</td><td></td></tr><tr><td><a href = \"#tag/Еmail\">multiemails</td><td>CRM</td><td>Еmail</td><td>account_id</td><td></td></tr></table>"
    },
    {
      "name": "Relation",
      "description": "Relation<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Accounts\">account_parent</td><td>CRM</td><td>Accounts</td><td>parent_acc_id</td></tr><tr><td><a href = \"#tag/Accounts\">account_child</td><td>CRM</td><td>Accounts</td><td>child_acc_id</td></tr></table>"
    },
    {
      "name": "Loss reasons",
      "description": "Opportunity Loss Reasons. When an opportunity is lost you need to fill out the Loss Reason field for further analytics. This helps to make sales more efficient through solving most common loss reasons.<br\\/> The account administrator can set custom Loss Reasons in the System Settings.<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Opportunities \">leads</td><td>CRM</td><td>Opportunities </td><td>closing_status_id</td></tr></table>"
    },
    {
      "name": "Opportunities sources",
      "description": "An opportunity source defines the origination of the prospective sales, for example, email, call, ad campaign, etc. The Account Administrator can set custom sources.<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Opportunities \">leads</td><td>CRM</td><td>Opportunities </td><td>source_id</td></tr></table>"
    },
    {
      "name": "Opportunity stages",
      "description": "Sales Funnel Stages are a set of steps by which the salesperson navigates the client from the first request to closing the deal. Every stage is linked to the Sales Funnel.<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Sales Funnels \">pipeline</td><td>CRM</td><td>Sales Funnels </td><td>pipeline_id</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Opportunities \">leads</td><td>CRM</td><td>Opportunities </td><td>pipeline_stage_id</td></tr></table>"
    },
    {
      "name": "Sales Funnels ",
      "description": "The sales funnel is the client's journey from the very first contact to you to the product purchase. The funnel consists of the steps by which the manager navigates the client from the first request to closing the deal. Each such step is called the funnel stage. The funnel shows the potential sales value and the number of opportunities. <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Opportunities \">leads</td><td>CRM</td><td>Opportunities </td><td>pipeline_id</td></tr><tr><td><a href = \"#tag/Opportunity stages\">stages</td><td>CRM</td><td>Opportunity stages</td><td>pipeline_id</td></tr><tr><td><a href = \"#tag/Opportunities \">deals</td><td>CRM</td><td>Opportunities </td><td>pipeline_id</td></tr></table>"
    },
    {
      "name": "Opportunities ",
      "description": "Opportunities are designed for managing your potential deals. Each request of your potential customer, whether it's an email, a completed web form on the website or an incoming call — all of them are opportunities. During the selling process, the opportunity goes through the stages of the sales funnel. Opportunity records track details about deals, including the value of potential sales, client's interaction history, estimates and invoices, etc.<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Loss reasons\">status</td><td>CRM</td><td>Loss reasons</td><td>closing_status_id</td></tr><tr><td><a href = \"#tag/Opportunity stages\">stage</td><td>CRM</td><td>Opportunity stages</td><td>pipeline_stage_id</td></tr><tr><td><a href = \"#tag/Accounts\">crm_account</td><td>CRM</td><td>Accounts</td><td>customer_id</td></tr><tr><td><a href = \"#tag/Opportunities sources\">source</td><td>CRM</td><td>Opportunities sources</td><td>source_id</td></tr><tr><td><a href = \"#tag/Sales Funnels \">pipeline</td><td>CRM</td><td>Sales Funnels </td><td>pipeline_id</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th><th>Foreigh keys</th></tr><tr><td><a href = \"#tag/Tasks\">tasks</td><td>Tasks</td><td>Tasks</td><td>model_id</td><td>module = crm, model = leads</td></tr></table>"
    },
    {
      "name": "Account types",
      "description": "The account categories allow to classify them by type of interaction.<br\\/> For example, <ul><li>Customers<\\/li> <li>Suppliers<\\/li> <li>Partners<\\/li> <li>Competitors<\\/li><\\/ul><br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Accounts\">crm_accounts</td><td>CRM</td><td>Accounts</td><td>account_category_id</td></tr></table>"
    },
    {
      "name": "Account industries",
      "description": "The Industries allow you to classify CRM accounts by their main activity.<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Accounts\">crm_accounts</td><td>CRM</td><td>Accounts</td><td>industry_id</td></tr></table>"
    },
    {
      "name": "Honorifics",
      "description": "An honorific is a title that conveys esteem, courtesy, or respect for position or rank when used in addressing or referring to a person. <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Accounts\">crm_accounts</td><td>CRM</td><td>Accounts</td><td>honorific_title_id</td></tr></table>"
    },
    {
      "name": "Еmail",
      "description": "Еmail<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Accounts\">account</td><td>CRM</td><td>Accounts</td><td>account_id</td></tr></table>"
    },
    {
      "name": "Clients phone numbers",
      "description": "<br>"
    },
    {
      "name": "Project ",
      "description": "The Projects allow planning and collaborative working on project implementation. With the Projects, you can view project progress, manage key milestones and deadlines, track time spent on a project, determine project budget, issue invoices and calculate costs."
    },
    {
      "name": "Project",
      "description": "A project is an entry in module ST that reflects information about the projects your company is doing. Projects have stages, a team that deals with the project, an employee responsible for the project. A project can be linked to a deal.<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Project stages\">stage</td><td>Projects</td><td>Project stages</td><td>stage_id</td></tr><tr><td><a href = \"#tag/Accounts\">company</td><td>CRM</td><td>Accounts</td><td>customer_id</td></tr><tr><td><a href = \"#tag/Accounts\">contact</td><td>CRM</td><td>Accounts</td><td>customer_crm_contact_id</td></tr><tr><td><a href = \"#tag/Project Templates\">type</td><td>Projects</td><td>Project Templates</td><td>project_type_id</td></tr><tr><td><a href = \"#tag/Opportunities \">leads</td><td>CRM</td><td>Opportunities </td><td>crm_lead_id</td></tr><tr><td><a href = \"#tag/Project Templates\">workflow</td><td>Projects</td><td>Project Templates</td><td>project_type_id</td></tr><tr><td><a href = \"#tag/Task Workflows\">tasks_workflow</td><td>Tasks</td><td>Task Workflows</td><td>tasks_workflow_id</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th><th>Foreigh keys</th></tr><tr><td><a href = \"#tag/Project stages\">stages</td><td>Projects</td><td>Project stages</td><td>project_id</td><td></td></tr><tr><td><a href = \"#tag/Tasks\">tasks</td><td>Tasks</td><td>Tasks</td><td>model_id</td><td>module = st, model = project</td></tr><tr><td><a href = \"#tag/Estimated Revenue\">money_stages</td><td>Projects</td><td>Estimated Revenue</td><td>project_id</td><td></td></tr><tr><td><a href = \"#tag/Stage milestone\">checkitems</td><td>Projects</td><td>Stage milestone</td><td>project_id</td><td></td></tr><tr><td><a href = \"#tag/Estimated Expenses\">expenses</td><td>Projects</td><td>Estimated Expenses</td><td>project_id</td><td></td></tr></table>"
    },
    {
      "name": "Project Templates",
      "description": "<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Task Workflows\">tasks_workflow</td><td>Tasks</td><td>Task Workflows</td><td>tasks_workflow_id</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th><th>Foreigh keys</th></tr><tr><td><a href = \"#tag/Project stages\">stages</td><td>Projects</td><td>Project stages</td><td>project_type_id</td><td></td></tr><tr><td><a href = \"#tag/Project\">projects</td><td>Projects</td><td>Project</td><td>project_type_id</td><td></td></tr><tr><td><a href = \"#tag/Tasks\">task_templates</td><td>Tasks</td><td>Tasks</td><td>model_id</td><td>module = st, model = type</td></tr></table>"
    },
    {
      "name": "Project stages",
      "description": "Board stages<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Project Templates\">type</td><td>Projects</td><td>Project Templates</td><td>project_type_id</td></tr><tr><td><a href = \"#tag/Project\">project</td><td>Projects</td><td>Project</td><td>project_id</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th><th>Foreigh keys</th></tr><tr><td><a href = \"#tag/Stage milestone\">checkitems</td><td>Projects</td><td>Stage milestone</td><td>stage_id</td><td></td></tr><tr><td><a href = \"#tag/Project\">projects</td><td>Projects</td><td>Project</td><td>stage_id</td><td></td></tr><tr><td><a href = \"#tag/Tasks\">tasks</td><td>Tasks</td><td>Tasks</td><td>project_stage_id</td><td>module = st, model = project</td></tr><tr><td><a href = \"#tag/Tasks\">task_templates</td><td>Tasks</td><td>Tasks</td><td>project_stage_id</td><td>module = st, model = type</td></tr></table>"
    },
    {
      "name": "Stage milestone",
      "description": "<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Project stages\">stage</td><td>Projects</td><td>Project stages</td><td>stage_id</td></tr><tr><td><a href = \"#tag/Stage milestone\">from_checkitem</td><td>Projects</td><td>Stage milestone</td><td>from_checkitem_id</td></tr><tr><td><a href = \"#tag/Project\">project</td><td>Projects</td><td>Project</td><td>project_id</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th><th>Foreigh keys</th></tr><tr><td><a href = \"#tag/Stage milestone\">copied_checkitems</td><td>Projects</td><td>Stage milestone</td><td>from_checkitem_id</td><td></td></tr><tr><td><a href = \"#tag/Tasks\">tasks</td><td>Tasks</td><td>Tasks</td><td>project_checkitem_id</td><td>module = st, model = </td></tr></table>"
    },
    {
      "name": "Estimated Revenue",
      "description": "Before adding the planned revenue to the project, make sure that the financial management mode \"Cash flow planning\" is selected.<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Project\">project</td><td>Projects</td><td>Project</td><td>project_id</td></tr><tr><td><a href = \"#tag/Accounts\">company</td><td>CRM</td><td>Accounts</td><td>crm_company_id</td></tr><tr><td><a href = \"#tag/Project stages\">project_stage</td><td>Projects</td><td>Project stages</td><td>project_stage_id</td></tr></table>"
    },
    {
      "name": "Estimated Expenses",
      "description": "Before adding planned costs to the project, make sure that the \"Cash flow planning\" financial management mode is selected.<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Project\">project</td><td>Projects</td><td>Project</td><td>project_id</td></tr><tr><td><a href = \"#tag/Accounts\">company</td><td>CRM</td><td>Accounts</td><td>crm_company_id</td></tr><tr><td><a href = \"#tag/Project stages\">project_stage</td><td>Projects</td><td>Project stages</td><td>project_stage_id</td></tr></table>"
    },
    {
      "name": "Finance ",
      "description": "With the Finance, you can create and send estimates, issue invoices, manage revenue and costs, classify expenses and received payments with financial categories, manage cash flow and invoices of several organization, set up integration with major online payment gateway."
    },
    {
      "name": "Organization",
      "description": "<br>"
    },
    {
      "name": "Invoice",
      "description": " <br>"
    },
    {
      "name": "Invoice items",
      "description": " <br>"
    },
    {
      "name": "Money",
      "description": "The Money section includes payments, expenses and transfers. Based on these records, you can create several transactions for different financial categories and, if needed, link them to different projects and invoices.<br>"
    },
    {
      "name": "Invoice contacts",
      "description": "These are the contacts to whom the invoice was sent by email (recipients).<br>"
    },
    {
      "name": "Bank account",
      "description": " <br>"
    },
    {
      "name": "Estimate",
      "description": " <br>"
    },
    {
      "name": "Estimate items",
      "description": " <br>"
    },
    {
      "name": "Estimate template",
      "description": " <br>"
    },
    {
      "name": "Estimate contacts",
      "description": "Estimate contacts<br>"
    },
    {
      "name": "Transaction",
      "description": "<br>"
    },
    {
      "name": "Recurring invoice",
      "description": "Recurring invoices<br>"
    },
    {
      "name": "Recurring Invoice settings",
      "description": " <br>"
    },
    {
      "name": "Time Tracker",
      "description": "The Time Tracker allows you to track time spent on tasks and projects, set the rate of your team's work hour and issue invoices to the customers based on the estimated and spent time."
    },
    {
      "name": "Time sheet",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Time sheet\">parent_sheet</td><td>Time Tracker </td><td>Time sheet</td><td>parent_sheet_id</td></tr></table><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/TIme Log\">timelogs</td><td>Time Tracker </td><td>TIme Log</td><td>timesheet_id</td></tr><tr><td><a href = \"#tag/Time sheet\">child_sheets</td><td>Time Tracker </td><td>Time sheet</td><td>parent_sheet_id</td></tr></table>"
    },
    {
      "name": "TIme Log",
      "description": " <br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Belongs to relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Time sheet\">timesheet</td><td>Time Tracker </td><td>Time sheet</td><td>timesheet_id</td></tr></table>"
    },
    {
      "name": "Product ",
      "description": "The Products enable you to organize a custom list of products and services and capture vital information like manufacturer, price, category, etc.  This way, you can effortlessly add items to your invoices and estimates and send them to your clients."
    },
    {
      "name": "Items",
      "description": "Items<br>"
    },
    {
      "name": "Categories",
      "description": "Categories<br><h3><a href=\"#section/Relations\">Model relations</h3></a><hr><h3><h4>Has many relation</h4></h3>\n\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Alias</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Module</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Model</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Foreign key</th></tr><tr><td><a href = \"#tag/Items\">items</td><td>Products</td><td>Items</td><td>category_id</td></tr></table>"
    },
    {
      "name": "Price list",
      "description": "Price list<br>"
    },
    {
      "name": "Price list and item relation",
      "description": "Price list and item relation<br>"
    },
    {
      "name": "Price",
      "description": "Manufacturer<br>"
    },
    {
      "name": "Webhooks",
      "description": "A webhook is a way for an app to provide other applications with real-time information. A webhook delivers data to other applications as it happens, meaning you get data immediately. Unlike typical APIs where you would need to poll for data very frequently in order to get it real-time."
    },
    {
      "name": "Webhooks",
      "description": "A webhook is a way for an app to provide other applications with real-time information. A webhook delivers data to other applications as it happens, meaning you get data immediately. Unlike typical APIs where you would need to poll for data very frequently in order to get it real-time."
    },
    {
      "name": "Global tags",
      "description": "#### Create or relate global tag for entity\n\n``` shell\ncurl --request POST \\\n  --url 'https://{{your_company}}.flowlu.com/api/v1/module/{{module}}/{{model}}/{{model_id}}/global_tags/create?api_key={{api_key}}' \\\n  --header 'Content-Type: application/x-www-form-urlencoded' \\\n  --data 'name=new tag'\n```\n\n#### Tag list\n\n``` shell\ncurl --request GET \\\n  --url 'https://{{your_company}}.flowlu.com/api/v1/module/{{module}}/{{model}}/{{model_id}}/global_tags/list?api_key={{api_key}}' \\\n  --header 'Content-Type: application/x-www-form-urlencoded' \\\n  --data 'name=new tag'\n```\n\n#### All tag list\n\n``` shell\ncurl --request GET \\\n  --url 'https://{{your_company}}.flowlu.com/api/v1/module/core/tag/list/?api_key={{api_key}}' \\\n  --header 'Content-Type: application/x-www-form-urlencoded' \\\n```\n\n#### Update global tag\n\n``` shell\ncurl --request POST \\\n  --url 'https://{{your_company}}.flowlu.com/api/v1/module/core/tag/update/75?api_key={{api_key}}' \\\n  --header 'Content-Type: application/x-www-form-urlencoded' \\\n  --data 'name=new tag2'\n```\n\n#### Delete global tag\n\n``` shell\ncurl --request POST \\\n  --url 'https://{{your_company}}.flowlu.com/api/v1/module/core/tag/delete/75?api_key={{api_key}}' \\\n  --header 'Content-Type: application/x-www-form-urlencoded'\n```"
    },
    {
      "name": "Global tags",
      "description": "#### Create or relate global tag for entity\n\n``` shell\ncurl --request POST \\\n  --url 'https://{{your_company}}.flowlu.com/api/v1/module/{{module}}/{{model}}/{{model_id}}/global_tags/create?api_key={{api_key}}' \\\n  --header 'Content-Type: application/x-www-form-urlencoded' \\\n  --data 'name=new tag'\n```\n\n#### Tag list\n\n``` shell\ncurl --request GET \\\n  --url 'https://{{your_company}}.flowlu.com/api/v1/module/{{module}}/{{model}}/{{model_id}}/global_tags/list?api_key={{api_key}}' \\\n  --header 'Content-Type: application/x-www-form-urlencoded' \\\n  --data 'name=new tag'\n```\n\n#### All tag list\n\n``` shell\ncurl --request GET \\\n  --url 'https://{{your_company}}.flowlu.com/api/v1/module/core/tag/list/?api_key={{api_key}}' \\\n  --header 'Content-Type: application/x-www-form-urlencoded' \\\n```\n\n#### Update global tag\n\n``` shell\ncurl --request POST \\\n  --url 'https://{{your_company}}.flowlu.com/api/v1/module/core/tag/update/75?api_key={{api_key}}' \\\n  --header 'Content-Type: application/x-www-form-urlencoded' \\\n  --data 'name=new tag2'\n```\n\n#### Delete global tag\n\n``` shell\ncurl --request POST \\\n  --url 'https://{{your_company}}.flowlu.com/api/v1/module/core/tag/delete/75?api_key={{api_key}}' \\\n  --header 'Content-Type: application/x-www-form-urlencoded'\n```"
    },
    {
      "name": "Getting users",
      "description": "### List of all users\n\n```\ncurl -X GET https://{{your_company}}.flowlu.com/api/v1/module/core/user/list?api_key={{api_key}}\n```\n\n### Get user by id\n\n```\ncurl -X GET https://{{your_company}}.flowlu.com/api/v1/module/core/get/{{id}}?api_key={{api_key}}\n```\n\n### Get user groups\n\n```\ncurl -X GET https://{{your_company}}.flowlu.ru/api/v1/module/core/group/list/?api_key={{api_key}}\n```"
    },
    {
      "name": "Getting users",
      "description": "### List of all users\n\n```\ncurl -X GET https://{{your_company}}.flowlu.com/api/v1/module/core/user/list?api_key={{api_key}}\n```\n\n### Get user by id\n\n```\ncurl -X GET https://{{your_company}}.flowlu.com/api/v1/module/core/get/{{id}}?api_key={{api_key}}\n```\n\n### Get user groups\n\n```\ncurl -X GET https://{{your_company}}.flowlu.ru/api/v1/module/core/group/list/?api_key={{api_key}}\n```"
    }
  ],
  "paths": {
    "/customfields/fieldsets/create": {
      "post": {
        "tags": [
          "Fieldsets"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Field set name",
                    "type": "string"
                  },
                  "module": {
                    "description": "Connected module",
                    "type": "string"
                  },
                  "model": {
                    "description": "Connected model",
                    "type": "string"
                  },
                  "group_id": {
                    "description": "",
                    "type": "integer"
                  },
                  "group_field": {
                    "description": "",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/fieldsets/update/{id}": {
      "post": {
        "tags": [
          "Fieldsets"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Field set name",
                    "type": "string"
                  },
                  "module": {
                    "description": "Connected module",
                    "type": "string"
                  },
                  "model": {
                    "description": "Connected model",
                    "type": "string"
                  },
                  "group_id": {
                    "description": "",
                    "type": "integer"
                  },
                  "group_field": {
                    "description": "",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Field set name",
                              "type": "string"
                            },
                            "module": {
                              "description": "Connected module",
                              "type": "string"
                            },
                            "model": {
                              "description": "Connected model",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "",
                              "type": "integer"
                            },
                            "group_field": {
                              "description": "",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/fieldsets/delete/{id}": {
      "get": {
        "tags": [
          "Fieldsets"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/fieldsets/get/{id}": {
      "get": {
        "tags": [
          "Fieldsets"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Field set name",
                              "type": "string"
                            },
                            "module": {
                              "description": "Connected module",
                              "type": "string"
                            },
                            "model": {
                              "description": "Connected model",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "",
                              "type": "integer"
                            },
                            "group_field": {
                              "description": "",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/fieldsets/list": {
      "get": {
        "tags": [
          "Fieldsets"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Field set name",
                                "type": "string"
                              },
                              "module": {
                                "description": "Connected module",
                                "type": "string"
                              },
                              "model": {
                                "description": "Connected model",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "",
                                "type": "integer"
                              },
                              "group_field": {
                                "description": "",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/fields/create": {
      "post": {
        "tags": [
          "Fields"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "fieldset_id": {
                    "description": "Id of the set of fields to which the field is bound",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Field name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "The order in the output the larger the number, the lower the field will be shown",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Field type: <li> smalltext => Text </li> <li> text => Multiline text </li> <li> int => Integer </li> <li> date => Date </li> < li> datetime => Date and time </li> <li> price => Price </li> <li> decimal => Number (fractional number in decimal) </li> <li> select.single => Dropdown list </li> <li> select.multiple => Multiple list </li> <li> model.file => File </li> <li> model.user => User </li> <li> boolean = > Yes / No </li> <li> autonumber => Autonumber </li>",
                    "type": "string"
                  },
                  "group_id": {
                    "description": "Custom list id",
                    "type": "integer"
                  },
                  "group_label_field_id": {
                    "description": "Custom field Id in the list specified in group_id. Used to link fields.",
                    "type": "integer"
                  },
                  "active": {
                    "description": "Active states: <li> 0 - Inactive </li> <li> 1 - Active </li>",
                    "type": "integer"
                  },
                  "required": {
                    "description": "<li> 1 - Required </li> <li> 0 - Optional </li>",
                    "type": "integer"
                  },
                  "hint": {
                    "description": "Tooltip ",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/fields/update/{id}": {
      "post": {
        "tags": [
          "Fields"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "fieldset_id": {
                    "description": "Id of the set of fields to which the field is bound",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Field name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "The order in the output the larger the number, the lower the field will be shown",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Field type: <li> smalltext => Text </li> <li> text => Multiline text </li> <li> int => Integer </li> <li> date => Date </li> < li> datetime => Date and time </li> <li> price => Price </li> <li> decimal => Number (fractional number in decimal) </li> <li> select.single => Dropdown list </li> <li> select.multiple => Multiple list </li> <li> model.file => File </li> <li> model.user => User </li> <li> boolean = > Yes / No </li> <li> autonumber => Autonumber </li>",
                    "type": "string"
                  },
                  "group_id": {
                    "description": "Custom list id",
                    "type": "integer"
                  },
                  "group_label_field_id": {
                    "description": "Custom field Id in the list specified in group_id. Used to link fields.",
                    "type": "integer"
                  },
                  "active": {
                    "description": "Active states: <li> 0 - Inactive </li> <li> 1 - Active </li>",
                    "type": "integer"
                  },
                  "required": {
                    "description": "<li> 1 - Required </li> <li> 0 - Optional </li>",
                    "type": "integer"
                  },
                  "hint": {
                    "description": "Tooltip ",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "fieldset_id": {
                              "description": "Id of the set of fields to which the field is bound",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Field name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "The order in the output the larger the number, the lower the field will be shown",
                              "type": "integer"
                            },
                            "type": {
                              "description": "Field type: <li> smalltext => Text </li> <li> text => Multiline text </li> <li> int => Integer </li> <li> date => Date </li> < li> datetime => Date and time </li> <li> price => Price </li> <li> decimal => Number (fractional number in decimal) </li> <li> select.single => Dropdown list </li> <li> select.multiple => Multiple list </li> <li> model.file => File </li> <li> model.user => User </li> <li> boolean = > Yes / No </li> <li> autonumber => Autonumber </li>",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "Custom list id",
                              "type": "integer"
                            },
                            "group_label_field_id": {
                              "description": "Custom field Id in the list specified in group_id. Used to link fields.",
                              "type": "integer"
                            },
                            "active": {
                              "description": "Active states: <li> 0 - Inactive </li> <li> 1 - Active </li>",
                              "type": "integer"
                            },
                            "required": {
                              "description": "<li> 1 - Required </li> <li> 0 - Optional </li>",
                              "type": "integer"
                            },
                            "hint": {
                              "description": "Tooltip ",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/fields/delete/{id}": {
      "get": {
        "tags": [
          "Fields"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/fields/get/{id}": {
      "get": {
        "tags": [
          "Fields"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "fieldset_id": {
                              "description": "Id of the set of fields to which the field is bound",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Field name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "The order in the output the larger the number, the lower the field will be shown",
                              "type": "integer"
                            },
                            "type": {
                              "description": "Field type: <li> smalltext => Text </li> <li> text => Multiline text </li> <li> int => Integer </li> <li> date => Date </li> < li> datetime => Date and time </li> <li> price => Price </li> <li> decimal => Number (fractional number in decimal) </li> <li> select.single => Dropdown list </li> <li> select.multiple => Multiple list </li> <li> model.file => File </li> <li> model.user => User </li> <li> boolean = > Yes / No </li> <li> autonumber => Autonumber </li>",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "Custom list id",
                              "type": "integer"
                            },
                            "group_label_field_id": {
                              "description": "Custom field Id in the list specified in group_id. Used to link fields.",
                              "type": "integer"
                            },
                            "active": {
                              "description": "Active states: <li> 0 - Inactive </li> <li> 1 - Active </li>",
                              "type": "integer"
                            },
                            "required": {
                              "description": "<li> 1 - Required </li> <li> 0 - Optional </li>",
                              "type": "integer"
                            },
                            "hint": {
                              "description": "Tooltip ",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/fields/list": {
      "get": {
        "tags": [
          "Fields"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "fieldset_id": {
                                "description": "Id of the set of fields to which the field is bound",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Field name",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "The order in the output the larger the number, the lower the field will be shown",
                                "type": "integer"
                              },
                              "type": {
                                "description": "Field type: <li> smalltext => Text </li> <li> text => Multiline text </li> <li> int => Integer </li> <li> date => Date </li> < li> datetime => Date and time </li> <li> price => Price </li> <li> decimal => Number (fractional number in decimal) </li> <li> select.single => Dropdown list </li> <li> select.multiple => Multiple list </li> <li> model.file => File </li> <li> model.user => User </li> <li> boolean = > Yes / No </li> <li> autonumber => Autonumber </li>",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "Custom list id",
                                "type": "integer"
                              },
                              "group_label_field_id": {
                                "description": "Custom field Id in the list specified in group_id. Used to link fields.",
                                "type": "integer"
                              },
                              "active": {
                                "description": "Active states: <li> 0 - Inactive </li> <li> 1 - Active </li>",
                                "type": "integer"
                              },
                              "required": {
                                "description": "<li> 1 - Required </li> <li> 0 - Optional </li>",
                                "type": "integer"
                              },
                              "hint": {
                                "description": "Tooltip ",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/fieldoptions/create": {
      "post": {
        "tags": [
          "Options"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "field_id": {
                    "description": "Id of the field to which the options are bound",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Type",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "The order in the output the larger the number, the lower the field will be shown",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Ref",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "Ref",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/fieldoptions/update/{id}": {
      "post": {
        "tags": [
          "Options"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "field_id": {
                    "description": "Id of the field to which the options are bound",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Type",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "The order in the output the larger the number, the lower the field will be shown",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Ref",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "Ref",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "field_id": {
                              "description": "Id of the field to which the options are bound",
                              "type": "integer"
                            },
                            "type": {
                              "description": "Type",
                              "type": "string"
                            },
                            "value": {
                              "description": "Value",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "The order in the output the larger the number, the lower the field will be shown",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Ref",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "Ref",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/fieldoptions/delete/{id}": {
      "get": {
        "tags": [
          "Options"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/fieldoptions/get/{id}": {
      "get": {
        "tags": [
          "Options"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "field_id": {
                              "description": "Id of the field to which the options are bound",
                              "type": "integer"
                            },
                            "type": {
                              "description": "Type",
                              "type": "string"
                            },
                            "value": {
                              "description": "Value",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "The order in the output the larger the number, the lower the field will be shown",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Ref",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "Ref",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/fieldoptions/list": {
      "get": {
        "tags": [
          "Options"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "field_id": {
                                "description": "Id of the field to which the options are bound",
                                "type": "integer"
                              },
                              "type": {
                                "description": "Type",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "The order in the output the larger the number, the lower the field will be shown",
                                "type": "integer"
                              },
                              "ref": {
                                "description": "Ref",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "Ref",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/selected_options/create": {
      "post": {
        "tags": [
          "Selected checkboxes option"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "item_id": {
                    "description": "Option id",
                    "type": "integer"
                  },
                  "field_id": {
                    "description": "Custom field id",
                    "type": "integer"
                  },
                  "fieldoption_id": {
                    "description": "Field option id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/selected_options/update/{id}": {
      "post": {
        "tags": [
          "Selected checkboxes option"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "item_id": {
                    "description": "Option id",
                    "type": "integer"
                  },
                  "field_id": {
                    "description": "Custom field id",
                    "type": "integer"
                  },
                  "fieldoption_id": {
                    "description": "Field option id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "item_id": {
                              "description": "Option id",
                              "type": "integer"
                            },
                            "field_id": {
                              "description": "Custom field id",
                              "type": "integer"
                            },
                            "fieldoption_id": {
                              "description": "Field option id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/selected_options/delete/{id}": {
      "get": {
        "tags": [
          "Selected checkboxes option"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/selected_options/get/{id}": {
      "get": {
        "tags": [
          "Selected checkboxes option"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "item_id": {
                              "description": "Option id",
                              "type": "integer"
                            },
                            "field_id": {
                              "description": "Custom field id",
                              "type": "integer"
                            },
                            "fieldoption_id": {
                              "description": "Field option id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customfields/selected_options/list": {
      "get": {
        "tags": [
          "Selected checkboxes option"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "item_id": {
                                "description": "Option id",
                                "type": "integer"
                              },
                              "field_id": {
                                "description": "Custom field id",
                                "type": "integer"
                              },
                              "fieldoption_id": {
                                "description": "Field option id",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/tasks/create": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "report": {
                    "description": "Task Report",
                    "type": "string"
                  },
                  "parent_id": {
                    "description": "Parent task id",
                    "type": "integer"
                  },
                  "prev_task_id": {
                    "description": "Previous task id",
                    "type": "integer"
                  },
                  "deadline": {
                    "description": "Deadline date (task only)",
                    "type": "string"
                  },
                  "deadline_allowchange": {
                    "description": "Allow to change deadline date(task only, default- 0): <li>0 - False</li><li> 1 - True</li>",
                    "type": "boolean"
                  },
                  "plan_start_date": {
                    "description": "Plan start date",
                    "type": "string"
                  },
                  "plan_end_date": {
                    "description": "End date (events only)",
                    "type": "string"
                  },
                  "priority": {
                    "description": "Task Priority",
                    "type": "integer"
                  },
                  "task_checkbyowner": {
                    "description": "Checked by owner",
                    "type": "boolean"
                  },
                  "responsible_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "time_estimate": {
                    "description": "Estimated time",
                    "type": "integer"
                  },
                  "time_spent": {
                    "description": "Time spent",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "owner_id": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "status_firstviewdate": {
                    "description": "Opened Date",
                    "type": "string"
                  },
                  "start_date": {
                    "description": "The date the user started executing the task (Status changed to \"In Progress\"). Sets automatically",
                    "type": "string"
                  },
                  "first_closed_date": {
                    "description": "First completed date. Sets automatically",
                    "type": "string"
                  },
                  "closed_date": {
                    "description": "Completed date. Sets automatically",
                    "type": "string"
                  },
                  "closed_by": {
                    "description": "Closed by user id. Sets automatically",
                    "type": "integer"
                  },
                  "return_count": {
                    "description": "Return count",
                    "type": "integer"
                  },
                  "rating": {
                    "description": "Rating",
                    "type": "integer"
                  },
                  "status_updated_by": {
                    "description": "The id of the user who updated the status. Sets automatically",
                    "type": "integer"
                  },
                  "status_updated_date": {
                    "description": "Status updated date. Sets automatically",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "module": {
                    "description": "Module",
                    "type": "string"
                  },
                  "model": {
                    "description": "Model",
                    "type": "string"
                  },
                  "model_id": {
                    "description": "Model id",
                    "type": "integer"
                  },
                  "project_stage_id": {
                    "description": "Project stage id (module = ''st\" model=\"project\"). <a href=\"https://www.flowlu.com/api/#tag/Project-stages\">Project stages</a>",
                    "type": "integer"
                  },
                  "project_checkitem_id": {
                    "description": "Project milestone id with which the task is linked (module = ''st\" model=\"project\") <a href=\"https://www.flowlu.com/api/#tag/Stage-milestone\">Stage milestone</a>",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Task type: <li> 0 - Task</li> <li> 1 - Inbox </li><li> 20 - Event </li><li> 30 - Task template </li>",
                    "type": "integer"
                  },
                  "report_complete": {
                    "description": "Task report complete",
                    "type": "string"
                  },
                  "crm_account_id": {
                    "description": "Account id",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "number"
                  },
                  "all_day": {
                    "description": "All day (event only): <li> 1 - True </li> <li> 0 - False </li>",
                    "type": "boolean"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  },
                  "public_template": {
                    "description": "Template Access (type=30): <li>1 - Public template</li> <li>0 - Private template</li>",
                    "type": "integer"
                  },
                  "template_id": {
                    "description": "Template id by which the task was created (task with type = 30)",
                    "type": "integer"
                  },
                  "is_repeat": {
                    "description": "Is repeat (Default- 0): <li>0 - No</li><li> 1 - Yes</li>",
                    "type": "boolean"
                  },
                  "event_location": {
                    "description": "Event location",
                    "type": "string"
                  },
                  "event_color": {
                    "description": "Color in HEX format",
                    "type": "string"
                  },
                  "event_busy_status": {
                    "description": "Availability (event only):<li>10 - Free</li><li>20 - Busy </li>",
                    "type": "integer"
                  },
                  "event_access_type": {
                    "description": "Event Privacy Settings:<li>10 - Default</li><li>20 - Personal</li><li>30 - Public</li>",
                    "type": "integer"
                  },
                  "event_calendar_id": {
                    "description": "The id of the calendar to which the event is linked",
                    "type": "integer"
                  },
                  "event_type": {
                    "description": "Event type:<li>21 - Call</li><li>22 - Email</li><li>23 - Appointment</li>",
                    "type": "integer"
                  },
                  "event_etag": {
                    "description": "Google Etag",
                    "type": "string"
                  },
                  "event_sync_type": {
                    "description": "Google sync",
                    "type": "integer"
                  },
                  "archive_status": {
                    "description": "Archive status (Default- 0): <li>0 - Active</li> <li>10 - Archive</li>",
                    "type": "integer"
                  },
                  "is_hidden": {
                    "description": "",
                    "type": "boolean"
                  },
                  "workflow_id": {
                    "description": "Task Workflow",
                    "type": "integer"
                  },
                  "workflow_stage_id": {
                    "description": "Task Workflow Status",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/tasks/update/{id}": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "report": {
                    "description": "Task Report",
                    "type": "string"
                  },
                  "parent_id": {
                    "description": "Parent task id",
                    "type": "integer"
                  },
                  "prev_task_id": {
                    "description": "Previous task id",
                    "type": "integer"
                  },
                  "deadline": {
                    "description": "Deadline date (task only)",
                    "type": "string"
                  },
                  "deadline_allowchange": {
                    "description": "Allow to change deadline date(task only, default- 0): <li>0 - False</li><li> 1 - True</li>",
                    "type": "boolean"
                  },
                  "plan_start_date": {
                    "description": "Plan start date",
                    "type": "string"
                  },
                  "plan_end_date": {
                    "description": "End date (events only)",
                    "type": "string"
                  },
                  "priority": {
                    "description": "Task Priority",
                    "type": "integer"
                  },
                  "task_checkbyowner": {
                    "description": "Checked by owner",
                    "type": "boolean"
                  },
                  "responsible_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "time_estimate": {
                    "description": "Estimated time",
                    "type": "integer"
                  },
                  "time_spent": {
                    "description": "Time spent",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "owner_id": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "status_firstviewdate": {
                    "description": "Opened Date",
                    "type": "string"
                  },
                  "start_date": {
                    "description": "The date the user started executing the task (Status changed to \"In Progress\"). Sets automatically",
                    "type": "string"
                  },
                  "first_closed_date": {
                    "description": "First completed date. Sets automatically",
                    "type": "string"
                  },
                  "closed_date": {
                    "description": "Completed date. Sets automatically",
                    "type": "string"
                  },
                  "closed_by": {
                    "description": "Closed by user id. Sets automatically",
                    "type": "integer"
                  },
                  "return_count": {
                    "description": "Return count",
                    "type": "integer"
                  },
                  "rating": {
                    "description": "Rating",
                    "type": "integer"
                  },
                  "status_updated_by": {
                    "description": "The id of the user who updated the status. Sets automatically",
                    "type": "integer"
                  },
                  "status_updated_date": {
                    "description": "Status updated date. Sets automatically",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "module": {
                    "description": "Module",
                    "type": "string"
                  },
                  "model": {
                    "description": "Model",
                    "type": "string"
                  },
                  "model_id": {
                    "description": "Model id",
                    "type": "integer"
                  },
                  "project_stage_id": {
                    "description": "Project stage id (module = ''st\" model=\"project\"). <a href=\"https://www.flowlu.com/api/#tag/Project-stages\">Project stages</a>",
                    "type": "integer"
                  },
                  "project_checkitem_id": {
                    "description": "Project milestone id with which the task is linked (module = ''st\" model=\"project\") <a href=\"https://www.flowlu.com/api/#tag/Stage-milestone\">Stage milestone</a>",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Task type: <li> 0 - Task</li> <li> 1 - Inbox </li><li> 20 - Event </li><li> 30 - Task template </li>",
                    "type": "integer"
                  },
                  "report_complete": {
                    "description": "Task report complete",
                    "type": "string"
                  },
                  "crm_account_id": {
                    "description": "Account id",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "number"
                  },
                  "all_day": {
                    "description": "All day (event only): <li> 1 - True </li> <li> 0 - False </li>",
                    "type": "boolean"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  },
                  "public_template": {
                    "description": "Template Access (type=30): <li>1 - Public template</li> <li>0 - Private template</li>",
                    "type": "integer"
                  },
                  "template_id": {
                    "description": "Template id by which the task was created (task with type = 30)",
                    "type": "integer"
                  },
                  "is_repeat": {
                    "description": "Is repeat (Default- 0): <li>0 - No</li><li> 1 - Yes</li>",
                    "type": "boolean"
                  },
                  "event_location": {
                    "description": "Event location",
                    "type": "string"
                  },
                  "event_color": {
                    "description": "Color in HEX format",
                    "type": "string"
                  },
                  "event_busy_status": {
                    "description": "Availability (event only):<li>10 - Free</li><li>20 - Busy </li>",
                    "type": "integer"
                  },
                  "event_access_type": {
                    "description": "Event Privacy Settings:<li>10 - Default</li><li>20 - Personal</li><li>30 - Public</li>",
                    "type": "integer"
                  },
                  "event_calendar_id": {
                    "description": "The id of the calendar to which the event is linked",
                    "type": "integer"
                  },
                  "event_type": {
                    "description": "Event type:<li>21 - Call</li><li>22 - Email</li><li>23 - Appointment</li>",
                    "type": "integer"
                  },
                  "event_etag": {
                    "description": "Google Etag",
                    "type": "string"
                  },
                  "event_sync_type": {
                    "description": "Google sync",
                    "type": "integer"
                  },
                  "archive_status": {
                    "description": "Archive status (Default- 0): <li>0 - Active</li> <li>10 - Archive</li>",
                    "type": "integer"
                  },
                  "is_hidden": {
                    "description": "",
                    "type": "boolean"
                  },
                  "workflow_id": {
                    "description": "Task Workflow",
                    "type": "integer"
                  },
                  "workflow_stage_id": {
                    "description": "Task Workflow Status",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "report": {
                              "description": "Task Report",
                              "type": "string"
                            },
                            "parent_id": {
                              "description": "Parent task id",
                              "type": "integer"
                            },
                            "prev_task_id": {
                              "description": "Previous task id",
                              "type": "integer"
                            },
                            "deadline": {
                              "description": "Deadline date (task only)",
                              "type": "string"
                            },
                            "deadline_allowchange": {
                              "description": "Allow to change deadline date(task only, default- 0): <li>0 - False</li><li> 1 - True</li>",
                              "type": "boolean"
                            },
                            "plan_start_date": {
                              "description": "Plan start date",
                              "type": "string"
                            },
                            "plan_end_date": {
                              "description": "End date (events only)",
                              "type": "string"
                            },
                            "priority": {
                              "description": "Task Priority",
                              "type": "integer"
                            },
                            "task_checkbyowner": {
                              "description": "Checked by owner",
                              "type": "boolean"
                            },
                            "responsible_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "time_estimate": {
                              "description": "Estimated time",
                              "type": "integer"
                            },
                            "time_spent": {
                              "description": "Time spent",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "owner_id": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "status_firstviewdate": {
                              "description": "Opened Date",
                              "type": "string"
                            },
                            "start_date": {
                              "description": "The date the user started executing the task (Status changed to \"In Progress\"). Sets automatically",
                              "type": "string"
                            },
                            "first_closed_date": {
                              "description": "First completed date. Sets automatically",
                              "type": "string"
                            },
                            "closed_date": {
                              "description": "Completed date. Sets automatically",
                              "type": "string"
                            },
                            "closed_by": {
                              "description": "Closed by user id. Sets automatically",
                              "type": "integer"
                            },
                            "return_count": {
                              "description": "Return count",
                              "type": "integer"
                            },
                            "rating": {
                              "description": "Rating",
                              "type": "integer"
                            },
                            "status_updated_by": {
                              "description": "The id of the user who updated the status. Sets automatically",
                              "type": "integer"
                            },
                            "status_updated_date": {
                              "description": "Status updated date. Sets automatically",
                              "type": "string"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "module": {
                              "description": "Module",
                              "type": "string"
                            },
                            "model": {
                              "description": "Model",
                              "type": "string"
                            },
                            "model_id": {
                              "description": "Model id",
                              "type": "integer"
                            },
                            "project_stage_id": {
                              "description": "Project stage id (module = ''st\" model=\"project\"). <a href=\"https://www.flowlu.com/api/#tag/Project-stages\">Project stages</a>",
                              "type": "integer"
                            },
                            "project_checkitem_id": {
                              "description": "Project milestone id with which the task is linked (module = ''st\" model=\"project\") <a href=\"https://www.flowlu.com/api/#tag/Stage-milestone\">Stage milestone</a>",
                              "type": "integer"
                            },
                            "type": {
                              "description": "Task type: <li> 0 - Task</li> <li> 1 - Inbox </li><li> 20 - Event </li><li> 30 - Task template </li>",
                              "type": "integer"
                            },
                            "report_complete": {
                              "description": "Task report complete",
                              "type": "string"
                            },
                            "crm_account_id": {
                              "description": "Account id",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "number"
                            },
                            "all_day": {
                              "description": "All day (event only): <li> 1 - True </li> <li> 0 - False </li>",
                              "type": "boolean"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            },
                            "public_template": {
                              "description": "Template Access (type=30): <li>1 - Public template</li> <li>0 - Private template</li>",
                              "type": "integer"
                            },
                            "template_id": {
                              "description": "Template id by which the task was created (task with type = 30)",
                              "type": "integer"
                            },
                            "is_repeat": {
                              "description": "Is repeat (Default- 0): <li>0 - No</li><li> 1 - Yes</li>",
                              "type": "boolean"
                            },
                            "event_location": {
                              "description": "Event location",
                              "type": "string"
                            },
                            "event_color": {
                              "description": "Color in HEX format",
                              "type": "string"
                            },
                            "event_busy_status": {
                              "description": "Availability (event only):<li>10 - Free</li><li>20 - Busy </li>",
                              "type": "integer"
                            },
                            "event_access_type": {
                              "description": "Event Privacy Settings:<li>10 - Default</li><li>20 - Personal</li><li>30 - Public</li>",
                              "type": "integer"
                            },
                            "event_calendar_id": {
                              "description": "The id of the calendar to which the event is linked",
                              "type": "integer"
                            },
                            "event_type": {
                              "description": "Event type:<li>21 - Call</li><li>22 - Email</li><li>23 - Appointment</li>",
                              "type": "integer"
                            },
                            "event_etag": {
                              "description": "Google Etag",
                              "type": "string"
                            },
                            "event_sync_type": {
                              "description": "Google sync",
                              "type": "integer"
                            },
                            "archive_status": {
                              "description": "Archive status (Default- 0): <li>0 - Active</li> <li>10 - Archive</li>",
                              "type": "integer"
                            },
                            "is_hidden": {
                              "description": "",
                              "type": "boolean"
                            },
                            "workflow_id": {
                              "description": "Task Workflow",
                              "type": "integer"
                            },
                            "workflow_stage_id": {
                              "description": "Task Workflow Status",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/tasks/delete/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/tasks/get/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "report": {
                              "description": "Task Report",
                              "type": "string"
                            },
                            "parent_id": {
                              "description": "Parent task id",
                              "type": "integer"
                            },
                            "prev_task_id": {
                              "description": "Previous task id",
                              "type": "integer"
                            },
                            "deadline": {
                              "description": "Deadline date (task only)",
                              "type": "string"
                            },
                            "deadline_allowchange": {
                              "description": "Allow to change deadline date(task only, default- 0): <li>0 - False</li><li> 1 - True</li>",
                              "type": "boolean"
                            },
                            "plan_start_date": {
                              "description": "Plan start date",
                              "type": "string"
                            },
                            "plan_end_date": {
                              "description": "End date (events only)",
                              "type": "string"
                            },
                            "priority": {
                              "description": "Task Priority",
                              "type": "integer"
                            },
                            "task_checkbyowner": {
                              "description": "Checked by owner",
                              "type": "boolean"
                            },
                            "responsible_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "time_estimate": {
                              "description": "Estimated time",
                              "type": "integer"
                            },
                            "time_spent": {
                              "description": "Time spent",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "owner_id": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "status_firstviewdate": {
                              "description": "Opened Date",
                              "type": "string"
                            },
                            "start_date": {
                              "description": "The date the user started executing the task (Status changed to \"In Progress\"). Sets automatically",
                              "type": "string"
                            },
                            "first_closed_date": {
                              "description": "First completed date. Sets automatically",
                              "type": "string"
                            },
                            "closed_date": {
                              "description": "Completed date. Sets automatically",
                              "type": "string"
                            },
                            "closed_by": {
                              "description": "Closed by user id. Sets automatically",
                              "type": "integer"
                            },
                            "return_count": {
                              "description": "Return count",
                              "type": "integer"
                            },
                            "rating": {
                              "description": "Rating",
                              "type": "integer"
                            },
                            "status_updated_by": {
                              "description": "The id of the user who updated the status. Sets automatically",
                              "type": "integer"
                            },
                            "status_updated_date": {
                              "description": "Status updated date. Sets automatically",
                              "type": "string"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "module": {
                              "description": "Module",
                              "type": "string"
                            },
                            "model": {
                              "description": "Model",
                              "type": "string"
                            },
                            "model_id": {
                              "description": "Model id",
                              "type": "integer"
                            },
                            "project_stage_id": {
                              "description": "Project stage id (module = ''st\" model=\"project\"). <a href=\"https://www.flowlu.com/api/#tag/Project-stages\">Project stages</a>",
                              "type": "integer"
                            },
                            "project_checkitem_id": {
                              "description": "Project milestone id with which the task is linked (module = ''st\" model=\"project\") <a href=\"https://www.flowlu.com/api/#tag/Stage-milestone\">Stage milestone</a>",
                              "type": "integer"
                            },
                            "type": {
                              "description": "Task type: <li> 0 - Task</li> <li> 1 - Inbox </li><li> 20 - Event </li><li> 30 - Task template </li>",
                              "type": "integer"
                            },
                            "report_complete": {
                              "description": "Task report complete",
                              "type": "string"
                            },
                            "crm_account_id": {
                              "description": "Account id",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "number"
                            },
                            "all_day": {
                              "description": "All day (event only): <li> 1 - True </li> <li> 0 - False </li>",
                              "type": "boolean"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            },
                            "public_template": {
                              "description": "Template Access (type=30): <li>1 - Public template</li> <li>0 - Private template</li>",
                              "type": "integer"
                            },
                            "template_id": {
                              "description": "Template id by which the task was created (task with type = 30)",
                              "type": "integer"
                            },
                            "is_repeat": {
                              "description": "Is repeat (Default- 0): <li>0 - No</li><li> 1 - Yes</li>",
                              "type": "boolean"
                            },
                            "event_location": {
                              "description": "Event location",
                              "type": "string"
                            },
                            "event_color": {
                              "description": "Color in HEX format",
                              "type": "string"
                            },
                            "event_busy_status": {
                              "description": "Availability (event only):<li>10 - Free</li><li>20 - Busy </li>",
                              "type": "integer"
                            },
                            "event_access_type": {
                              "description": "Event Privacy Settings:<li>10 - Default</li><li>20 - Personal</li><li>30 - Public</li>",
                              "type": "integer"
                            },
                            "event_calendar_id": {
                              "description": "The id of the calendar to which the event is linked",
                              "type": "integer"
                            },
                            "event_type": {
                              "description": "Event type:<li>21 - Call</li><li>22 - Email</li><li>23 - Appointment</li>",
                              "type": "integer"
                            },
                            "event_etag": {
                              "description": "Google Etag",
                              "type": "string"
                            },
                            "event_sync_type": {
                              "description": "Google sync",
                              "type": "integer"
                            },
                            "archive_status": {
                              "description": "Archive status (Default- 0): <li>0 - Active</li> <li>10 - Archive</li>",
                              "type": "integer"
                            },
                            "is_hidden": {
                              "description": "",
                              "type": "boolean"
                            },
                            "workflow_id": {
                              "description": "Task Workflow",
                              "type": "integer"
                            },
                            "workflow_stage_id": {
                              "description": "Task Workflow Status",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/tasks/list": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "report": {
                                "description": "Task Report",
                                "type": "string"
                              },
                              "parent_id": {
                                "description": "Parent task id",
                                "type": "integer"
                              },
                              "prev_task_id": {
                                "description": "Previous task id",
                                "type": "integer"
                              },
                              "deadline": {
                                "description": "Deadline date (task only)",
                                "type": "string"
                              },
                              "deadline_allowchange": {
                                "description": "Allow to change deadline date(task only, default- 0): <li>0 - False</li><li> 1 - True</li>",
                                "type": "boolean"
                              },
                              "plan_start_date": {
                                "description": "Plan start date",
                                "type": "string"
                              },
                              "plan_end_date": {
                                "description": "End date (events only)",
                                "type": "string"
                              },
                              "priority": {
                                "description": "Task Priority",
                                "type": "integer"
                              },
                              "task_checkbyowner": {
                                "description": "Checked by owner",
                                "type": "boolean"
                              },
                              "responsible_id": {
                                "description": "Assigned user id",
                                "type": "integer"
                              },
                              "time_estimate": {
                                "description": "Estimated time",
                                "type": "integer"
                              },
                              "time_spent": {
                                "description": "Time spent",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "owner_id": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "status_firstviewdate": {
                                "description": "Opened Date",
                                "type": "string"
                              },
                              "start_date": {
                                "description": "The date the user started executing the task (Status changed to \"In Progress\"). Sets automatically",
                                "type": "string"
                              },
                              "first_closed_date": {
                                "description": "First completed date. Sets automatically",
                                "type": "string"
                              },
                              "closed_date": {
                                "description": "Completed date. Sets automatically",
                                "type": "string"
                              },
                              "closed_by": {
                                "description": "Closed by user id. Sets automatically",
                                "type": "integer"
                              },
                              "return_count": {
                                "description": "Return count",
                                "type": "integer"
                              },
                              "rating": {
                                "description": "Rating",
                                "type": "integer"
                              },
                              "status_updated_by": {
                                "description": "The id of the user who updated the status. Sets automatically",
                                "type": "integer"
                              },
                              "status_updated_date": {
                                "description": "Status updated date. Sets automatically",
                                "type": "string"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              },
                              "module": {
                                "description": "Module",
                                "type": "string"
                              },
                              "model": {
                                "description": "Model",
                                "type": "string"
                              },
                              "model_id": {
                                "description": "Model id",
                                "type": "integer"
                              },
                              "project_stage_id": {
                                "description": "Project stage id (module = ''st\" model=\"project\"). <a href=\"https://www.flowlu.com/api/#tag/Project-stages\">Project stages</a>",
                                "type": "integer"
                              },
                              "project_checkitem_id": {
                                "description": "Project milestone id with which the task is linked (module = ''st\" model=\"project\") <a href=\"https://www.flowlu.com/api/#tag/Stage-milestone\">Stage milestone</a>",
                                "type": "integer"
                              },
                              "type": {
                                "description": "Task type: <li> 0 - Task</li> <li> 1 - Inbox </li><li> 20 - Event </li><li> 30 - Task template </li>",
                                "type": "integer"
                              },
                              "report_complete": {
                                "description": "Task report complete",
                                "type": "string"
                              },
                              "crm_account_id": {
                                "description": "Account id",
                                "type": "integer"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "number"
                              },
                              "all_day": {
                                "description": "All day (event only): <li> 1 - True </li> <li> 0 - False </li>",
                                "type": "boolean"
                              },
                              "uuid": {
                                "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                                "type": "string"
                              },
                              "public_template": {
                                "description": "Template Access (type=30): <li>1 - Public template</li> <li>0 - Private template</li>",
                                "type": "integer"
                              },
                              "template_id": {
                                "description": "Template id by which the task was created (task with type = 30)",
                                "type": "integer"
                              },
                              "is_repeat": {
                                "description": "Is repeat (Default- 0): <li>0 - No</li><li> 1 - Yes</li>",
                                "type": "boolean"
                              },
                              "event_location": {
                                "description": "Event location",
                                "type": "string"
                              },
                              "event_color": {
                                "description": "Color in HEX format",
                                "type": "string"
                              },
                              "event_busy_status": {
                                "description": "Availability (event only):<li>10 - Free</li><li>20 - Busy </li>",
                                "type": "integer"
                              },
                              "event_access_type": {
                                "description": "Event Privacy Settings:<li>10 - Default</li><li>20 - Personal</li><li>30 - Public</li>",
                                "type": "integer"
                              },
                              "event_calendar_id": {
                                "description": "The id of the calendar to which the event is linked",
                                "type": "integer"
                              },
                              "event_type": {
                                "description": "Event type:<li>21 - Call</li><li>22 - Email</li><li>23 - Appointment</li>",
                                "type": "integer"
                              },
                              "event_etag": {
                                "description": "Google Etag",
                                "type": "string"
                              },
                              "event_sync_type": {
                                "description": "Google sync",
                                "type": "integer"
                              },
                              "archive_status": {
                                "description": "Archive status (Default- 0): <li>0 - Active</li> <li>10 - Archive</li>",
                                "type": "integer"
                              },
                              "is_hidden": {
                                "description": "",
                                "type": "boolean"
                              },
                              "workflow_id": {
                                "description": "Task Workflow",
                                "type": "integer"
                              },
                              "workflow_stage_id": {
                                "description": "Task Workflow Status",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/lists/create": {
      "post": {
        "tags": [
          "Lists"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "user_id": {
                    "description": "Id of the user who has access to this list",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "color": {
                    "description": "Color HEX code ",
                    "type": "string"
                  },
                  "icon": {
                    "description": "Icon code",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/lists/update/{id}": {
      "post": {
        "tags": [
          "Lists"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "user_id": {
                    "description": "Id of the user who has access to this list",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "color": {
                    "description": "Color HEX code ",
                    "type": "string"
                  },
                  "icon": {
                    "description": "Icon code",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "user_id": {
                              "description": "Id of the user who has access to this list",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "color": {
                              "description": "Color HEX code ",
                              "type": "string"
                            },
                            "icon": {
                              "description": "Icon code",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/lists/delete/{id}": {
      "get": {
        "tags": [
          "Lists"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/lists/get/{id}": {
      "get": {
        "tags": [
          "Lists"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "user_id": {
                              "description": "Id of the user who has access to this list",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "color": {
                              "description": "Color HEX code ",
                              "type": "string"
                            },
                            "icon": {
                              "description": "Icon code",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/lists/list": {
      "get": {
        "tags": [
          "Lists"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "user_id": {
                                "description": "Id of the user who has access to this list",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              },
                              "color": {
                                "description": "Color HEX code ",
                                "type": "string"
                              },
                              "icon": {
                                "description": "Icon code",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/taskslists/create": {
      "post": {
        "tags": [
          "Linking tasks & lists"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "task_id": {
                    "description": "Task Id",
                    "type": "integer"
                  },
                  "list_id": {
                    "description": "List Id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/taskslists/update/{id}": {
      "post": {
        "tags": [
          "Linking tasks & lists"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "task_id": {
                    "description": "Task Id",
                    "type": "integer"
                  },
                  "list_id": {
                    "description": "List Id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "task_id": {
                              "description": "Task Id",
                              "type": "integer"
                            },
                            "list_id": {
                              "description": "List Id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/taskslists/delete/{id}": {
      "get": {
        "tags": [
          "Linking tasks & lists"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/taskslists/get/{id}": {
      "get": {
        "tags": [
          "Linking tasks & lists"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "task_id": {
                              "description": "Task Id",
                              "type": "integer"
                            },
                            "list_id": {
                              "description": "List Id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/taskslists/list": {
      "get": {
        "tags": [
          "Linking tasks & lists"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "task_id": {
                                "description": "Task Id",
                                "type": "integer"
                              },
                              "list_id": {
                                "description": "List Id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/followers/create": {
      "post": {
        "tags": [
          "Followers"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "task_id": {
                    "description": "Task Id",
                    "type": "integer"
                  },
                  "user_id": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "group_id": {
                    "description": "Group id",
                    "type": "integer"
                  },
                  "role": {
                    "description": "Follower role",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "event_accepted_status": {
                    "description": "Event accepted status",
                    "type": "boolean"
                  },
                  "event_show_user_notification": {
                    "description": "Show employee event notifications, Default = 1",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/followers/update/{id}": {
      "post": {
        "tags": [
          "Followers"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "task_id": {
                    "description": "Task Id",
                    "type": "integer"
                  },
                  "user_id": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "group_id": {
                    "description": "Group id",
                    "type": "integer"
                  },
                  "role": {
                    "description": "Follower role",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "event_accepted_status": {
                    "description": "Event accepted status",
                    "type": "boolean"
                  },
                  "event_show_user_notification": {
                    "description": "Show employee event notifications, Default = 1",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "task_id": {
                              "description": "Task Id",
                              "type": "integer"
                            },
                            "user_id": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "group_id": {
                              "description": "Group id",
                              "type": "integer"
                            },
                            "role": {
                              "description": "Follower role",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "event_accepted_status": {
                              "description": "Event accepted status",
                              "type": "boolean"
                            },
                            "event_show_user_notification": {
                              "description": "Show employee event notifications, Default = 1",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/followers/delete/{id}": {
      "get": {
        "tags": [
          "Followers"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/followers/get/{id}": {
      "get": {
        "tags": [
          "Followers"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "task_id": {
                              "description": "Task Id",
                              "type": "integer"
                            },
                            "user_id": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "group_id": {
                              "description": "Group id",
                              "type": "integer"
                            },
                            "role": {
                              "description": "Follower role",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "event_accepted_status": {
                              "description": "Event accepted status",
                              "type": "boolean"
                            },
                            "event_show_user_notification": {
                              "description": "Show employee event notifications, Default = 1",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/followers/list": {
      "get": {
        "tags": [
          "Followers"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "task_id": {
                                "description": "Task Id",
                                "type": "integer"
                              },
                              "user_id": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "group_id": {
                                "description": "Group id",
                                "type": "integer"
                              },
                              "role": {
                                "description": "Follower role",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "event_accepted_status": {
                                "description": "Event accepted status",
                                "type": "boolean"
                              },
                              "event_show_user_notification": {
                                "description": "Show employee event notifications, Default = 1",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/collaborators/create": {
      "post": {
        "tags": [
          "Collaborators"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "task_id": {
                    "description": "Task Id",
                    "type": "integer"
                  },
                  "user_id": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "group_id": {
                    "description": "Group id",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/collaborators/update/{id}": {
      "post": {
        "tags": [
          "Collaborators"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "task_id": {
                    "description": "Task Id",
                    "type": "integer"
                  },
                  "user_id": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "group_id": {
                    "description": "Group id",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "task_id": {
                              "description": "Task Id",
                              "type": "integer"
                            },
                            "user_id": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "group_id": {
                              "description": "Group id",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/collaborators/delete/{id}": {
      "get": {
        "tags": [
          "Collaborators"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/collaborators/get/{id}": {
      "get": {
        "tags": [
          "Collaborators"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "task_id": {
                              "description": "Task Id",
                              "type": "integer"
                            },
                            "user_id": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "group_id": {
                              "description": "Group id",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/collaborators/list": {
      "get": {
        "tags": [
          "Collaborators"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "task_id": {
                                "description": "Task Id",
                                "type": "integer"
                              },
                              "user_id": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "group_id": {
                                "description": "Group id",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/workflows/create": {
      "post": {
        "tags": [
          "Task Workflows"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Task Workflow Ordering ",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "Active",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/workflows/update/{id}": {
      "post": {
        "tags": [
          "Task Workflows"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Task Workflow Ordering ",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "Active",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Workflow ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Task Workflow Ordering ",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "Active",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/workflows/delete/{id}": {
      "get": {
        "tags": [
          "Task Workflows"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/workflows/get/{id}": {
      "get": {
        "tags": [
          "Task Workflows"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Workflow ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Task Workflow Ordering ",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "Active",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/workflows/list": {
      "get": {
        "tags": [
          "Task Workflows"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Workflow ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Task Workflow Ordering ",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "active": {
                                "description": "Active",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/stages/create": {
      "post": {
        "tags": [
          "Workflow Statuses"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Ordering",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "workflow_id": {
                    "description": "Status and Workflow relation",
                    "type": "integer"
                  },
                  "color": {
                    "description": "Status color",
                    "type": "string"
                  },
                  "task_status": {
                    "description": "Task Status. <li> 1 - To do </li> <li> 3 - In progress </li> <li> 4 - Approval </li> <li> 5 - Task completed </li>",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/stages/update/{id}": {
      "post": {
        "tags": [
          "Workflow Statuses"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Ordering",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "workflow_id": {
                    "description": "Status and Workflow relation",
                    "type": "integer"
                  },
                  "color": {
                    "description": "Status color",
                    "type": "string"
                  },
                  "task_status": {
                    "description": "Task Status. <li> 1 - To do </li> <li> 3 - In progress </li> <li> 4 - Approval </li> <li> 5 - Task completed </li>",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Task Stage ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Ordering",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "workflow_id": {
                              "description": "Status and Workflow relation",
                              "type": "integer"
                            },
                            "color": {
                              "description": "Status color",
                              "type": "string"
                            },
                            "task_status": {
                              "description": "Task Status. <li> 1 - To do </li> <li> 3 - In progress </li> <li> 4 - Approval </li> <li> 5 - Task completed </li>",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/stages/delete/{id}": {
      "get": {
        "tags": [
          "Workflow Statuses"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/stages/get/{id}": {
      "get": {
        "tags": [
          "Workflow Statuses"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Task Stage ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Ordering",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "workflow_id": {
                              "description": "Status and Workflow relation",
                              "type": "integer"
                            },
                            "color": {
                              "description": "Status color",
                              "type": "string"
                            },
                            "task_status": {
                              "description": "Task Status. <li> 1 - To do </li> <li> 3 - In progress </li> <li> 4 - Approval </li> <li> 5 - Task completed </li>",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/stages/list": {
      "get": {
        "tags": [
          "Workflow Statuses"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Task Stage ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Ordering",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "workflow_id": {
                                "description": "Status and Workflow relation",
                                "type": "integer"
                              },
                              "color": {
                                "description": "Status color",
                                "type": "string"
                              },
                              "task_status": {
                                "description": "Task Status. <li> 1 - To do </li> <li> 3 - In progress </li> <li> 4 - Approval </li> <li> 5 - Task completed </li>",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/calendar/calendar/create": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "type": {
                    "description": "Calendar type: <li> 10 - Private </li> <li> 20 - Public </li> <li> 30 - My Tasks </li> <li> 40 - Primary </li>",
                    "type": "integer"
                  },
                  "color": {
                    "description": "Color in HEX format",
                    "type": "string"
                  },
                  "timezone": {
                    "description": "Calendar timezone (America/Pangnirtung)",
                    "type": "string"
                  },
                  "sync_type": {
                    "description": "",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  },
                  "etag": {
                    "description": "Google Etag",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/calendar/calendar/update/{id}": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "type": {
                    "description": "Calendar type: <li> 10 - Private </li> <li> 20 - Public </li> <li> 30 - My Tasks </li> <li> 40 - Primary </li>",
                    "type": "integer"
                  },
                  "color": {
                    "description": "Color in HEX format",
                    "type": "string"
                  },
                  "timezone": {
                    "description": "Calendar timezone (America/Pangnirtung)",
                    "type": "string"
                  },
                  "sync_type": {
                    "description": "",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  },
                  "etag": {
                    "description": "Google Etag",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "type": {
                              "description": "Calendar type: <li> 10 - Private </li> <li> 20 - Public </li> <li> 30 - My Tasks </li> <li> 40 - Primary </li>",
                              "type": "integer"
                            },
                            "color": {
                              "description": "Color in HEX format",
                              "type": "string"
                            },
                            "timezone": {
                              "description": "Calendar timezone (America/Pangnirtung)",
                              "type": "string"
                            },
                            "sync_type": {
                              "description": "",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            },
                            "etag": {
                              "description": "Google Etag",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/calendar/calendar/delete/{id}": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/calendar/calendar/get/{id}": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "type": {
                              "description": "Calendar type: <li> 10 - Private </li> <li> 20 - Public </li> <li> 30 - My Tasks </li> <li> 40 - Primary </li>",
                              "type": "integer"
                            },
                            "color": {
                              "description": "Color in HEX format",
                              "type": "string"
                            },
                            "timezone": {
                              "description": "Calendar timezone (America/Pangnirtung)",
                              "type": "string"
                            },
                            "sync_type": {
                              "description": "",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            },
                            "etag": {
                              "description": "Google Etag",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/calendar/calendar/list": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "type": {
                                "description": "Calendar type: <li> 10 - Private </li> <li> 20 - Public </li> <li> 30 - My Tasks </li> <li> 40 - Primary </li>",
                                "type": "integer"
                              },
                              "color": {
                                "description": "Color in HEX format",
                                "type": "string"
                              },
                              "timezone": {
                                "description": "Calendar timezone (America/Pangnirtung)",
                                "type": "string"
                              },
                              "sync_type": {
                                "description": "",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "uuid": {
                                "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                                "type": "string"
                              },
                              "etag": {
                                "description": "Google Etag",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issues/create": {
      "post": {
        "tags": [
          "Issues"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "description": "Issue number",
                    "type": "integer"
                  },
                  "number_label": {
                    "description": "Number label",
                    "type": "string"
                  },
                  "name": {
                    "description": "Summary",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "type_id": {
                    "description": "Description",
                    "type": "integer"
                  },
                  "estimate": {
                    "description": "Estimate",
                    "type": "integer"
                  },
                  "value": {
                    "description": "Value",
                    "type": "string"
                  },
                  "effort": {
                    "description": "Effort",
                    "type": "integer"
                  },
                  "priority": {
                    "description": " Priority: <li> 10 - Blocker </li> <li> 20 - Critical </li> <li> 30 - High </li> <li> 40 - Medium </li> <li> 50 - Low </li>",
                    "type": "integer"
                  },
                  "category_id": {
                    "description": "Category id",
                    "type": "integer"
                  },
                  "sprint_id": {
                    "description": "Sprint id",
                    "type": "integer"
                  },
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "workflow_stage_id": {
                    "description": "Stage id",
                    "type": "integer"
                  },
                  "assignee_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "parent_issue_id": {
                    "description": "Parent issue id",
                    "type": "integer"
                  },
                  "creator_id": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issues/update/{id}": {
      "post": {
        "tags": [
          "Issues"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "description": "Issue number",
                    "type": "integer"
                  },
                  "number_label": {
                    "description": "Number label",
                    "type": "string"
                  },
                  "name": {
                    "description": "Summary",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "type_id": {
                    "description": "Description",
                    "type": "integer"
                  },
                  "estimate": {
                    "description": "Estimate",
                    "type": "integer"
                  },
                  "value": {
                    "description": "Value",
                    "type": "string"
                  },
                  "effort": {
                    "description": "Effort",
                    "type": "integer"
                  },
                  "priority": {
                    "description": " Priority: <li> 10 - Blocker </li> <li> 20 - Critical </li> <li> 30 - High </li> <li> 40 - Medium </li> <li> 50 - Low </li>",
                    "type": "integer"
                  },
                  "category_id": {
                    "description": "Category id",
                    "type": "integer"
                  },
                  "sprint_id": {
                    "description": "Sprint id",
                    "type": "integer"
                  },
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "workflow_stage_id": {
                    "description": "Stage id",
                    "type": "integer"
                  },
                  "assignee_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "parent_issue_id": {
                    "description": "Parent issue id",
                    "type": "integer"
                  },
                  "creator_id": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "number": {
                              "description": "Issue number",
                              "type": "integer"
                            },
                            "number_label": {
                              "description": "Number label",
                              "type": "string"
                            },
                            "name": {
                              "description": "Summary",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "type_id": {
                              "description": "Description",
                              "type": "integer"
                            },
                            "estimate": {
                              "description": "Estimate",
                              "type": "integer"
                            },
                            "value": {
                              "description": "Value",
                              "type": "string"
                            },
                            "effort": {
                              "description": "Effort",
                              "type": "integer"
                            },
                            "priority": {
                              "description": " Priority: <li> 10 - Blocker </li> <li> 20 - Critical </li> <li> 30 - High </li> <li> 40 - Medium </li> <li> 50 - Low </li>",
                              "type": "integer"
                            },
                            "category_id": {
                              "description": "Category id",
                              "type": "integer"
                            },
                            "sprint_id": {
                              "description": "Sprint id",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "workflow_stage_id": {
                              "description": "Stage id",
                              "type": "integer"
                            },
                            "assignee_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "parent_issue_id": {
                              "description": "Parent issue id",
                              "type": "integer"
                            },
                            "creator_id": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issues/delete/{id}": {
      "get": {
        "tags": [
          "Issues"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issues/get/{id}": {
      "get": {
        "tags": [
          "Issues"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "number": {
                              "description": "Issue number",
                              "type": "integer"
                            },
                            "number_label": {
                              "description": "Number label",
                              "type": "string"
                            },
                            "name": {
                              "description": "Summary",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "type_id": {
                              "description": "Description",
                              "type": "integer"
                            },
                            "estimate": {
                              "description": "Estimate",
                              "type": "integer"
                            },
                            "value": {
                              "description": "Value",
                              "type": "string"
                            },
                            "effort": {
                              "description": "Effort",
                              "type": "integer"
                            },
                            "priority": {
                              "description": " Priority: <li> 10 - Blocker </li> <li> 20 - Critical </li> <li> 30 - High </li> <li> 40 - Medium </li> <li> 50 - Low </li>",
                              "type": "integer"
                            },
                            "category_id": {
                              "description": "Category id",
                              "type": "integer"
                            },
                            "sprint_id": {
                              "description": "Sprint id",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "workflow_stage_id": {
                              "description": "Stage id",
                              "type": "integer"
                            },
                            "assignee_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "parent_issue_id": {
                              "description": "Parent issue id",
                              "type": "integer"
                            },
                            "creator_id": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issues/list": {
      "get": {
        "tags": [
          "Issues"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "number": {
                                "description": "Issue number",
                                "type": "integer"
                              },
                              "number_label": {
                                "description": "Number label",
                                "type": "string"
                              },
                              "name": {
                                "description": "Summary",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "type_id": {
                                "description": "Description",
                                "type": "integer"
                              },
                              "estimate": {
                                "description": "Estimate",
                                "type": "integer"
                              },
                              "value": {
                                "description": "Value",
                                "type": "string"
                              },
                              "effort": {
                                "description": "Effort",
                                "type": "integer"
                              },
                              "priority": {
                                "description": " Priority: <li> 10 - Blocker </li> <li> 20 - Critical </li> <li> 30 - High </li> <li> 40 - Medium </li> <li> 50 - Low </li>",
                                "type": "integer"
                              },
                              "category_id": {
                                "description": "Category id",
                                "type": "integer"
                              },
                              "sprint_id": {
                                "description": "Sprint id",
                                "type": "integer"
                              },
                              "project_id": {
                                "description": "Project id",
                                "type": "integer"
                              },
                              "workflow_stage_id": {
                                "description": "Stage id",
                                "type": "integer"
                              },
                              "assignee_id": {
                                "description": "Assigned user id",
                                "type": "integer"
                              },
                              "parent_issue_id": {
                                "description": "Parent issue id",
                                "type": "integer"
                              },
                              "creator_id": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_relation_types/create": {
      "post": {
        "tags": [
          "Issue relation types"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "parent_relation_name_id": {
                    "description": "Parent relation id",
                    "type": "integer"
                  },
                  "child_relation_name_id": {
                    "description": "Child relation id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_relation_types/update/{id}": {
      "post": {
        "tags": [
          "Issue relation types"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "parent_relation_name_id": {
                    "description": "Parent relation id",
                    "type": "integer"
                  },
                  "child_relation_name_id": {
                    "description": "Child relation id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "parent_relation_name_id": {
                              "description": "Parent relation id",
                              "type": "integer"
                            },
                            "child_relation_name_id": {
                              "description": "Child relation id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_relation_types/delete/{id}": {
      "get": {
        "tags": [
          "Issue relation types"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_relation_types/get/{id}": {
      "get": {
        "tags": [
          "Issue relation types"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "parent_relation_name_id": {
                              "description": "Parent relation id",
                              "type": "integer"
                            },
                            "child_relation_name_id": {
                              "description": "Child relation id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_relation_types/list": {
      "get": {
        "tags": [
          "Issue relation types"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "parent_relation_name_id": {
                                "description": "Parent relation id",
                                "type": "integer"
                              },
                              "child_relation_name_id": {
                                "description": "Child relation id",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_relation_names/create": {
      "post": {
        "tags": [
          "Issue relation names"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "tree_type": {
                    "description": "Tree type",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_relation_names/update/{id}": {
      "post": {
        "tags": [
          "Issue relation names"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "tree_type": {
                    "description": "Tree type",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "tree_type": {
                              "description": "Tree type",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_relation_names/delete/{id}": {
      "get": {
        "tags": [
          "Issue relation names"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_relation_names/get/{id}": {
      "get": {
        "tags": [
          "Issue relation names"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "tree_type": {
                              "description": "Tree type",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_relation_names/list": {
      "get": {
        "tags": [
          "Issue relation names"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "tree_type": {
                                "description": "Tree type",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_relations/create": {
      "post": {
        "tags": [
          "Issue relation"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "parent_issue_id": {
                    "description": "Parent issue id",
                    "type": "integer"
                  },
                  "child_issue_id": {
                    "description": "Child issue id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "type": {
                    "description": "Relation type",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_relations/update/{id}": {
      "post": {
        "tags": [
          "Issue relation"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "parent_issue_id": {
                    "description": "Parent issue id",
                    "type": "integer"
                  },
                  "child_issue_id": {
                    "description": "Child issue id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "type": {
                    "description": "Relation type",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "parent_issue_id": {
                              "description": "Parent issue id",
                              "type": "integer"
                            },
                            "child_issue_id": {
                              "description": "Child issue id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "type": {
                              "description": "Relation type",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_relations/delete/{id}": {
      "get": {
        "tags": [
          "Issue relation"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_relations/get/{id}": {
      "get": {
        "tags": [
          "Issue relation"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "parent_issue_id": {
                              "description": "Parent issue id",
                              "type": "integer"
                            },
                            "child_issue_id": {
                              "description": "Child issue id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "type": {
                              "description": "Relation type",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_relations/list": {
      "get": {
        "tags": [
          "Issue relation"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "parent_issue_id": {
                                "description": "Parent issue id",
                                "type": "integer"
                              },
                              "child_issue_id": {
                                "description": "Child issue id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "type": {
                                "description": "Relation type",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_type/create": {
      "post": {
        "tags": [
          "Issue type"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "is_default": {
                    "description": "Is default",
                    "type": "boolean"
                  },
                  "icon": {
                    "description": "Icon code",
                    "type": "string"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "color": {
                    "description": "Color HEX code ",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_type/update/{id}": {
      "post": {
        "tags": [
          "Issue type"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "is_default": {
                    "description": "Is default",
                    "type": "boolean"
                  },
                  "icon": {
                    "description": "Icon code",
                    "type": "string"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "color": {
                    "description": "Color HEX code ",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "is_default": {
                              "description": "Is default",
                              "type": "boolean"
                            },
                            "icon": {
                              "description": "Icon code",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "color": {
                              "description": "Color HEX code ",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_type/delete/{id}": {
      "get": {
        "tags": [
          "Issue type"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_type/get/{id}": {
      "get": {
        "tags": [
          "Issue type"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "is_default": {
                              "description": "Is default",
                              "type": "boolean"
                            },
                            "icon": {
                              "description": "Icon code",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "color": {
                              "description": "Color HEX code ",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_type/list": {
      "get": {
        "tags": [
          "Issue type"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "is_default": {
                                "description": "Is default",
                                "type": "boolean"
                              },
                              "icon": {
                                "description": "Icon code",
                                "type": "string"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "color": {
                                "description": "Color HEX code ",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/sprints/create": {
      "post": {
        "tags": [
          "Sprint"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "start_date": {
                    "description": "Sprint start date",
                    "type": "string"
                  },
                  "deadline": {
                    "description": "Deadline",
                    "type": "string"
                  },
                  "standup_time": {
                    "description": "Standup_time",
                    "type": "string"
                  },
                  "project_id": {
                    "description": "Project ID",
                    "type": "integer"
                  },
                  "started": {
                    "description": "Sprint started",
                    "type": "boolean"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/sprints/update/{id}": {
      "post": {
        "tags": [
          "Sprint"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "start_date": {
                    "description": "Sprint start date",
                    "type": "string"
                  },
                  "deadline": {
                    "description": "Deadline",
                    "type": "string"
                  },
                  "standup_time": {
                    "description": "Standup_time",
                    "type": "string"
                  },
                  "project_id": {
                    "description": "Project ID",
                    "type": "integer"
                  },
                  "started": {
                    "description": "Sprint started",
                    "type": "boolean"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "start_date": {
                              "description": "Sprint start date",
                              "type": "string"
                            },
                            "deadline": {
                              "description": "Deadline",
                              "type": "string"
                            },
                            "standup_time": {
                              "description": "Standup_time",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "Project ID",
                              "type": "integer"
                            },
                            "started": {
                              "description": "Sprint started",
                              "type": "boolean"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/sprints/delete/{id}": {
      "get": {
        "tags": [
          "Sprint"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/sprints/get/{id}": {
      "get": {
        "tags": [
          "Sprint"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "start_date": {
                              "description": "Sprint start date",
                              "type": "string"
                            },
                            "deadline": {
                              "description": "Deadline",
                              "type": "string"
                            },
                            "standup_time": {
                              "description": "Standup_time",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "Project ID",
                              "type": "integer"
                            },
                            "started": {
                              "description": "Sprint started",
                              "type": "boolean"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/sprints/list": {
      "get": {
        "tags": [
          "Sprint"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "start_date": {
                                "description": "Sprint start date",
                                "type": "string"
                              },
                              "deadline": {
                                "description": "Deadline",
                                "type": "string"
                              },
                              "standup_time": {
                                "description": "Standup_time",
                                "type": "string"
                              },
                              "project_id": {
                                "description": "Project ID",
                                "type": "integer"
                              },
                              "started": {
                                "description": "Sprint started",
                                "type": "boolean"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/projects/create": {
      "post": {
        "tags": [
          "Agile project"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "prefix_name": {
                    "description": "Prefix name",
                    "type": "string"
                  },
                  "workflow_id": {
                    "description": "Workflow id",
                    "type": "integer"
                  },
                  "manager_id": {
                    "description": "Assignee",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "is_admin_menu_showing": {
                    "description": "Is admin menu showing",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/projects/update/{id}": {
      "post": {
        "tags": [
          "Agile project"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "prefix_name": {
                    "description": "Prefix name",
                    "type": "string"
                  },
                  "workflow_id": {
                    "description": "Workflow id",
                    "type": "integer"
                  },
                  "manager_id": {
                    "description": "Assignee",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "is_admin_menu_showing": {
                    "description": "Is admin menu showing",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "prefix_name": {
                              "description": "Prefix name",
                              "type": "string"
                            },
                            "workflow_id": {
                              "description": "Workflow id",
                              "type": "integer"
                            },
                            "manager_id": {
                              "description": "Assignee",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "is_admin_menu_showing": {
                              "description": "Is admin menu showing",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/projects/delete/{id}": {
      "get": {
        "tags": [
          "Agile project"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/projects/get/{id}": {
      "get": {
        "tags": [
          "Agile project"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "prefix_name": {
                              "description": "Prefix name",
                              "type": "string"
                            },
                            "workflow_id": {
                              "description": "Workflow id",
                              "type": "integer"
                            },
                            "manager_id": {
                              "description": "Assignee",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "is_admin_menu_showing": {
                              "description": "Is admin menu showing",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/projects/list": {
      "get": {
        "tags": [
          "Agile project"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "prefix_name": {
                                "description": "Prefix name",
                                "type": "string"
                              },
                              "workflow_id": {
                                "description": "Workflow id",
                                "type": "integer"
                              },
                              "manager_id": {
                                "description": "Assignee",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "is_admin_menu_showing": {
                                "description": "Is admin menu showing",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/projects_users/create": {
      "post": {
        "tags": [
          "Project users"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "user_id": {
                    "description": "Project and user relation",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/projects_users/update/{id}": {
      "post": {
        "tags": [
          "Project users"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "user_id": {
                    "description": "Project and user relation",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "user_id": {
                              "description": "Project and user relation",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/projects_users/delete/{id}": {
      "get": {
        "tags": [
          "Project users"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/projects_users/get/{id}": {
      "get": {
        "tags": [
          "Project users"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "user_id": {
                              "description": "Project and user relation",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/projects_users/list": {
      "get": {
        "tags": [
          "Project users"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "project_id": {
                                "description": "Project id",
                                "type": "integer"
                              },
                              "user_id": {
                                "description": "Project and user relation",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/workflows/create": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/workflows/update/{id}": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/workflows/delete/{id}": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/workflows/get/{id}": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/workflows/list": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/stages/create": {
      "post": {
        "tags": [
          "Stage"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "workflow_id": {
                    "description": "Workflow id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/stages/update/{id}": {
      "post": {
        "tags": [
          "Stage"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "workflow_id": {
                    "description": "Workflow id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "status": {
                              "description": "Status",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "workflow_id": {
                              "description": "Workflow id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/stages/delete/{id}": {
      "get": {
        "tags": [
          "Stage"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/stages/get/{id}": {
      "get": {
        "tags": [
          "Stage"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "status": {
                              "description": "Status",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "workflow_id": {
                              "description": "Workflow id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/stages/list": {
      "get": {
        "tags": [
          "Stage"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "status": {
                                "description": "Status",
                                "type": "integer"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "workflow_id": {
                                "description": "Workflow id",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_types_projects/create": {
      "post": {
        "tags": [
          "Issue types and project relations "
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "issue_type_id": {
                    "description": "Issue type id",
                    "type": "integer"
                  },
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_types_projects/update/{id}": {
      "post": {
        "tags": [
          "Issue types and project relations "
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "issue_type_id": {
                    "description": "Issue type id",
                    "type": "integer"
                  },
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "issue_type_id": {
                              "description": "Issue type id",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_types_projects/delete/{id}": {
      "get": {
        "tags": [
          "Issue types and project relations "
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_types_projects/get/{id}": {
      "get": {
        "tags": [
          "Issue types and project relations "
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "issue_type_id": {
                              "description": "Issue type id",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/issue_types_projects/list": {
      "get": {
        "tags": [
          "Issue types and project relations "
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "issue_type_id": {
                                "description": "Issue type id",
                                "type": "integer"
                              },
                              "project_id": {
                                "description": "Project id",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/tags/create": {
      "post": {
        "tags": [
          "Tags"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/tags/update/{id}": {
      "post": {
        "tags": [
          "Tags"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/tags/delete/{id}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/tags/get/{id}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/tags/list": {
      "get": {
        "tags": [
          "Tags"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "project_id": {
                                "description": "Project id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/tags_issues/create": {
      "post": {
        "tags": [
          "Tag and issue relation"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "tag_id": {
                    "description": "tag id",
                    "type": "integer"
                  },
                  "issue_id": {
                    "description": "Issue id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/tags_issues/update/{id}": {
      "post": {
        "tags": [
          "Tag and issue relation"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "tag_id": {
                    "description": "tag id",
                    "type": "integer"
                  },
                  "issue_id": {
                    "description": "Issue id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "tag_id": {
                              "description": "tag id",
                              "type": "integer"
                            },
                            "issue_id": {
                              "description": "Issue id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/tags_issues/delete/{id}": {
      "get": {
        "tags": [
          "Tag and issue relation"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/tags_issues/get/{id}": {
      "get": {
        "tags": [
          "Tag and issue relation"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "tag_id": {
                              "description": "tag id",
                              "type": "integer"
                            },
                            "issue_id": {
                              "description": "Issue id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/tags_issues/list": {
      "get": {
        "tags": [
          "Tag and issue relation"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tag_id": {
                                "description": "tag id",
                                "type": "integer"
                              },
                              "issue_id": {
                                "description": "Issue id",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/categories/create": {
      "post": {
        "tags": [
          "Agile categories"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "assignee_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "color": {
                    "description": "Color HEX code ",
                    "type": "string"
                  },
                  "parent_id": {
                    "description": "Entry id",
                    "type": "integer"
                  },
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/categories/update/{id}": {
      "post": {
        "tags": [
          "Agile categories"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "assignee_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "color": {
                    "description": "Color HEX code ",
                    "type": "string"
                  },
                  "parent_id": {
                    "description": "Entry id",
                    "type": "integer"
                  },
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "assignee_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "color": {
                              "description": "Color HEX code ",
                              "type": "string"
                            },
                            "parent_id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/categories/delete/{id}": {
      "get": {
        "tags": [
          "Agile categories"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/categories/get/{id}": {
      "get": {
        "tags": [
          "Agile categories"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "assignee_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "color": {
                              "description": "Color HEX code ",
                              "type": "string"
                            },
                            "parent_id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/categories/list": {
      "get": {
        "tags": [
          "Agile categories"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "assignee_id": {
                                "description": "Assigned user id",
                                "type": "integer"
                              },
                              "color": {
                                "description": "Color HEX code ",
                                "type": "string"
                              },
                              "parent_id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "project_id": {
                                "description": "Project id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/ref_issue_relation/create": {
      "post": {
        "tags": [
          "Reference issue relation"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "issue_id": {
                    "description": "Reference Issue idissue relation",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/ref_issue_relation/update/{id}": {
      "post": {
        "tags": [
          "Reference issue relation"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "issue_id": {
                    "description": "Reference Issue idissue relation",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "issue_id": {
                              "description": "Reference Issue idissue relation",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/ref_issue_relation/delete/{id}": {
      "get": {
        "tags": [
          "Reference issue relation"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/ref_issue_relation/get/{id}": {
      "get": {
        "tags": [
          "Reference issue relation"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "issue_id": {
                              "description": "Reference Issue idissue relation",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agile/ref_issue_relation/list": {
      "get": {
        "tags": [
          "Reference issue relation"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              },
                              "issue_id": {
                                "description": "Reference Issue idissue relation",
                                "type": "integer"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/account/create": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "(Required)Account type:<br><ul><li>Organization = 1</li><li>Contact = 2</li></ul>",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name (title) for Organization",
                    "type": "string"
                  },
                  "honorific_title_id": {
                    "description": "Honorific title for Contact",
                    "type": "integer"
                  },
                  "first_name": {
                    "description": "Contact first name",
                    "type": "string"
                  },
                  "middle_name": {
                    "description": "Contact middle (second) name",
                    "type": "string"
                  },
                  "last_name": {
                    "description": "Contact last name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "tinyint"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "merged_to": {
                    "description": "Id of entry in which current account was merged",
                    "type": "integer"
                  },
                  "owner_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "industry_id": {
                    "description": "id of entry in Industries table",
                    "type": "integer"
                  },
                  "account_category_id": {
                    "description": "Id of entry in Account Categories table",
                    "type": "integer"
                  },
                  "name_legal": {
                    "description": "Legal name for Organization",
                    "type": "string"
                  },
                  "name_legal_full": {
                    "description": "Full legal name for Organization",
                    "type": "string"
                  },
                  "phone": {
                    "description": "Primary phone number",
                    "type": "string"
                  },
                  "phone2": {
                    "description": "Additional phone number",
                    "type": "string"
                  },
                  "phone3": {
                    "description": "Additional phone number",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email <span style=\"color:red;\">(Deprecated)</span> To add an E-mail, use <a href=\"https://www.flowlu.com/api/#tag/Email\">E-mails</a>",
                    "type": "string"
                  },
                  "email_personal": {
                    "description": "Personal email <span style=\"color:red;\">(Deprecated)</span> To add an E-mail, use <a href=\"https://www.flowlu.com/api/#tag/Email\">E-mails</a>",
                    "type": "string"
                  },
                  "web": {
                    "description": "Website",
                    "type": "string"
                  },
                  "telegram": {
                    "description": "ICQ id",
                    "type": "string"
                  },
                  "skype": {
                    "description": "Skype account id",
                    "type": "string"
                  },
                  "link_google": {
                    "description": "Link to Google+ ",
                    "type": "string"
                  },
                  "link_facebook": {
                    "description": "Link to Facebook ",
                    "type": "string"
                  },
                  "link_vk": {
                    "description": "Link to Vk.com ",
                    "type": "string"
                  },
                  "link_linkedin": {
                    "description": "Link to LinkedIn ",
                    "type": "string"
                  },
                  "link_instagram": {
                    "description": "Link to Instagram",
                    "type": "string"
                  },
                  "VAT": {
                    "description": "Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "VAT1": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "VAT2": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "bank_details": {
                    "description": "Bank Details text",
                    "type": "string"
                  },
                  "shipping_country": {
                    "description": "Country",
                    "type": "string"
                  },
                  "shipping_state": {
                    "description": "State, Region",
                    "type": "string"
                  },
                  "shipping_city": {
                    "description": "City",
                    "type": "string"
                  },
                  "shipping_zip": {
                    "description": "ZIP code",
                    "type": "string"
                  },
                  "shipping_address_line_1": {
                    "description": "Address Line 1",
                    "type": "string"
                  },
                  "shipping_address_line_2": {
                    "description": "Address Line 2",
                    "type": "string"
                  },
                  "shipping_address_line_3": {
                    "description": "Address Line 3",
                    "type": "string"
                  },
                  "billing_country": {
                    "description": "Country",
                    "type": "string"
                  },
                  "billing_state": {
                    "description": "State, Region",
                    "type": "string"
                  },
                  "billing_city": {
                    "description": "City",
                    "type": "string"
                  },
                  "billing_zip": {
                    "description": "ZIP code",
                    "type": "string"
                  },
                  "billing_address_line_1": {
                    "description": "Address Line 1",
                    "type": "string"
                  },
                  "billing_address_line_2": {
                    "description": "Address Line 2",
                    "type": "string"
                  },
                  "billing_address_line_3": {
                    "description": "Address Line 3",
                    "type": "string"
                  },
                  "address": {
                    "description": "Address",
                    "type": "string"
                  },
                  "address_legal": {
                    "description": "Legal address",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "integer"
                  },
                  "guid_1c": {
                    "description": "1c GUID",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/account/update/{id}": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "(Required)Account type:<br><ul><li>Organization = 1</li><li>Contact = 2</li></ul>",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name (title) for Organization",
                    "type": "string"
                  },
                  "honorific_title_id": {
                    "description": "Honorific title for Contact",
                    "type": "integer"
                  },
                  "first_name": {
                    "description": "Contact first name",
                    "type": "string"
                  },
                  "middle_name": {
                    "description": "Contact middle (second) name",
                    "type": "string"
                  },
                  "last_name": {
                    "description": "Contact last name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "tinyint"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "merged_to": {
                    "description": "Id of entry in which current account was merged",
                    "type": "integer"
                  },
                  "owner_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "industry_id": {
                    "description": "id of entry in Industries table",
                    "type": "integer"
                  },
                  "account_category_id": {
                    "description": "Id of entry in Account Categories table",
                    "type": "integer"
                  },
                  "name_legal": {
                    "description": "Legal name for Organization",
                    "type": "string"
                  },
                  "name_legal_full": {
                    "description": "Full legal name for Organization",
                    "type": "string"
                  },
                  "phone": {
                    "description": "Primary phone number",
                    "type": "string"
                  },
                  "phone2": {
                    "description": "Additional phone number",
                    "type": "string"
                  },
                  "phone3": {
                    "description": "Additional phone number",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email <span style=\"color:red;\">(Deprecated)</span> To add an E-mail, use <a href=\"https://www.flowlu.com/api/#tag/Email\">E-mails</a>",
                    "type": "string"
                  },
                  "email_personal": {
                    "description": "Personal email <span style=\"color:red;\">(Deprecated)</span> To add an E-mail, use <a href=\"https://www.flowlu.com/api/#tag/Email\">E-mails</a>",
                    "type": "string"
                  },
                  "web": {
                    "description": "Website",
                    "type": "string"
                  },
                  "telegram": {
                    "description": "ICQ id",
                    "type": "string"
                  },
                  "skype": {
                    "description": "Skype account id",
                    "type": "string"
                  },
                  "link_google": {
                    "description": "Link to Google+ ",
                    "type": "string"
                  },
                  "link_facebook": {
                    "description": "Link to Facebook ",
                    "type": "string"
                  },
                  "link_vk": {
                    "description": "Link to Vk.com ",
                    "type": "string"
                  },
                  "link_linkedin": {
                    "description": "Link to LinkedIn ",
                    "type": "string"
                  },
                  "link_instagram": {
                    "description": "Link to Instagram",
                    "type": "string"
                  },
                  "VAT": {
                    "description": "Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "VAT1": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "VAT2": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "bank_details": {
                    "description": "Bank Details text",
                    "type": "string"
                  },
                  "shipping_country": {
                    "description": "Country",
                    "type": "string"
                  },
                  "shipping_state": {
                    "description": "State, Region",
                    "type": "string"
                  },
                  "shipping_city": {
                    "description": "City",
                    "type": "string"
                  },
                  "shipping_zip": {
                    "description": "ZIP code",
                    "type": "string"
                  },
                  "shipping_address_line_1": {
                    "description": "Address Line 1",
                    "type": "string"
                  },
                  "shipping_address_line_2": {
                    "description": "Address Line 2",
                    "type": "string"
                  },
                  "shipping_address_line_3": {
                    "description": "Address Line 3",
                    "type": "string"
                  },
                  "billing_country": {
                    "description": "Country",
                    "type": "string"
                  },
                  "billing_state": {
                    "description": "State, Region",
                    "type": "string"
                  },
                  "billing_city": {
                    "description": "City",
                    "type": "string"
                  },
                  "billing_zip": {
                    "description": "ZIP code",
                    "type": "string"
                  },
                  "billing_address_line_1": {
                    "description": "Address Line 1",
                    "type": "string"
                  },
                  "billing_address_line_2": {
                    "description": "Address Line 2",
                    "type": "string"
                  },
                  "billing_address_line_3": {
                    "description": "Address Line 3",
                    "type": "string"
                  },
                  "address": {
                    "description": "Address",
                    "type": "string"
                  },
                  "address_legal": {
                    "description": "Legal address",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "integer"
                  },
                  "guid_1c": {
                    "description": "1c GUID",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "type": {
                              "description": "(Required)Account type:<br><ul><li>Organization = 1</li><li>Contact = 2</li></ul>",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name (title) for Organization",
                              "type": "string"
                            },
                            "honorific_title_id": {
                              "description": "Honorific title for Contact",
                              "type": "integer"
                            },
                            "first_name": {
                              "description": "Contact first name",
                              "type": "string"
                            },
                            "middle_name": {
                              "description": "Contact middle (second) name",
                              "type": "string"
                            },
                            "last_name": {
                              "description": "Contact last name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "tinyint"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "merged_to": {
                              "description": "Id of entry in which current account was merged",
                              "type": "integer"
                            },
                            "owner_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "industry_id": {
                              "description": "id of entry in Industries table",
                              "type": "integer"
                            },
                            "account_category_id": {
                              "description": "Id of entry in Account Categories table",
                              "type": "integer"
                            },
                            "name_legal": {
                              "description": "Legal name for Organization",
                              "type": "string"
                            },
                            "name_legal_full": {
                              "description": "Full legal name for Organization",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Primary phone number",
                              "type": "string"
                            },
                            "phone2": {
                              "description": "Additional phone number",
                              "type": "string"
                            },
                            "phone3": {
                              "description": "Additional phone number",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email <span style=\"color:red;\">(Deprecated)</span> To add an E-mail, use <a href=\"https://www.flowlu.com/api/#tag/Email\">E-mails</a>",
                              "type": "string"
                            },
                            "email_personal": {
                              "description": "Personal email <span style=\"color:red;\">(Deprecated)</span> To add an E-mail, use <a href=\"https://www.flowlu.com/api/#tag/Email\">E-mails</a>",
                              "type": "string"
                            },
                            "web": {
                              "description": "Website",
                              "type": "string"
                            },
                            "telegram": {
                              "description": "ICQ id",
                              "type": "string"
                            },
                            "skype": {
                              "description": "Skype account id",
                              "type": "string"
                            },
                            "link_google": {
                              "description": "Link to Google+ ",
                              "type": "string"
                            },
                            "link_facebook": {
                              "description": "Link to Facebook ",
                              "type": "string"
                            },
                            "link_vk": {
                              "description": "Link to Vk.com ",
                              "type": "string"
                            },
                            "link_linkedin": {
                              "description": "Link to LinkedIn ",
                              "type": "string"
                            },
                            "link_instagram": {
                              "description": "Link to Instagram",
                              "type": "string"
                            },
                            "VAT": {
                              "description": "Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "VAT1": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "VAT2": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "bank_details": {
                              "description": "Bank Details text",
                              "type": "string"
                            },
                            "shipping_country": {
                              "description": "Country",
                              "type": "string"
                            },
                            "shipping_state": {
                              "description": "State, Region",
                              "type": "string"
                            },
                            "shipping_city": {
                              "description": "City",
                              "type": "string"
                            },
                            "shipping_zip": {
                              "description": "ZIP code",
                              "type": "string"
                            },
                            "shipping_address_line_1": {
                              "description": "Address Line 1",
                              "type": "string"
                            },
                            "shipping_address_line_2": {
                              "description": "Address Line 2",
                              "type": "string"
                            },
                            "shipping_address_line_3": {
                              "description": "Address Line 3",
                              "type": "string"
                            },
                            "billing_country": {
                              "description": "Country",
                              "type": "string"
                            },
                            "billing_state": {
                              "description": "State, Region",
                              "type": "string"
                            },
                            "billing_city": {
                              "description": "City",
                              "type": "string"
                            },
                            "billing_zip": {
                              "description": "ZIP code",
                              "type": "string"
                            },
                            "billing_address_line_1": {
                              "description": "Address Line 1",
                              "type": "string"
                            },
                            "billing_address_line_2": {
                              "description": "Address Line 2",
                              "type": "string"
                            },
                            "billing_address_line_3": {
                              "description": "Address Line 3",
                              "type": "string"
                            },
                            "address": {
                              "description": "Address",
                              "type": "string"
                            },
                            "address_legal": {
                              "description": "Legal address",
                              "type": "string"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "integer"
                            },
                            "guid_1c": {
                              "description": "1c GUID",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/account/delete/{id}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/account/get/{id}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "type": {
                              "description": "(Required)Account type:<br><ul><li>Organization = 1</li><li>Contact = 2</li></ul>",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name (title) for Organization",
                              "type": "string"
                            },
                            "honorific_title_id": {
                              "description": "Honorific title for Contact",
                              "type": "integer"
                            },
                            "first_name": {
                              "description": "Contact first name",
                              "type": "string"
                            },
                            "middle_name": {
                              "description": "Contact middle (second) name",
                              "type": "string"
                            },
                            "last_name": {
                              "description": "Contact last name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "tinyint"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "merged_to": {
                              "description": "Id of entry in which current account was merged",
                              "type": "integer"
                            },
                            "owner_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "industry_id": {
                              "description": "id of entry in Industries table",
                              "type": "integer"
                            },
                            "account_category_id": {
                              "description": "Id of entry in Account Categories table",
                              "type": "integer"
                            },
                            "name_legal": {
                              "description": "Legal name for Organization",
                              "type": "string"
                            },
                            "name_legal_full": {
                              "description": "Full legal name for Organization",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Primary phone number",
                              "type": "string"
                            },
                            "phone2": {
                              "description": "Additional phone number",
                              "type": "string"
                            },
                            "phone3": {
                              "description": "Additional phone number",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email <span style=\"color:red;\">(Deprecated)</span> To add an E-mail, use <a href=\"https://www.flowlu.com/api/#tag/Email\">E-mails</a>",
                              "type": "string"
                            },
                            "email_personal": {
                              "description": "Personal email <span style=\"color:red;\">(Deprecated)</span> To add an E-mail, use <a href=\"https://www.flowlu.com/api/#tag/Email\">E-mails</a>",
                              "type": "string"
                            },
                            "web": {
                              "description": "Website",
                              "type": "string"
                            },
                            "telegram": {
                              "description": "ICQ id",
                              "type": "string"
                            },
                            "skype": {
                              "description": "Skype account id",
                              "type": "string"
                            },
                            "link_google": {
                              "description": "Link to Google+ ",
                              "type": "string"
                            },
                            "link_facebook": {
                              "description": "Link to Facebook ",
                              "type": "string"
                            },
                            "link_vk": {
                              "description": "Link to Vk.com ",
                              "type": "string"
                            },
                            "link_linkedin": {
                              "description": "Link to LinkedIn ",
                              "type": "string"
                            },
                            "link_instagram": {
                              "description": "Link to Instagram",
                              "type": "string"
                            },
                            "VAT": {
                              "description": "Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "VAT1": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "VAT2": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "bank_details": {
                              "description": "Bank Details text",
                              "type": "string"
                            },
                            "shipping_country": {
                              "description": "Country",
                              "type": "string"
                            },
                            "shipping_state": {
                              "description": "State, Region",
                              "type": "string"
                            },
                            "shipping_city": {
                              "description": "City",
                              "type": "string"
                            },
                            "shipping_zip": {
                              "description": "ZIP code",
                              "type": "string"
                            },
                            "shipping_address_line_1": {
                              "description": "Address Line 1",
                              "type": "string"
                            },
                            "shipping_address_line_2": {
                              "description": "Address Line 2",
                              "type": "string"
                            },
                            "shipping_address_line_3": {
                              "description": "Address Line 3",
                              "type": "string"
                            },
                            "billing_country": {
                              "description": "Country",
                              "type": "string"
                            },
                            "billing_state": {
                              "description": "State, Region",
                              "type": "string"
                            },
                            "billing_city": {
                              "description": "City",
                              "type": "string"
                            },
                            "billing_zip": {
                              "description": "ZIP code",
                              "type": "string"
                            },
                            "billing_address_line_1": {
                              "description": "Address Line 1",
                              "type": "string"
                            },
                            "billing_address_line_2": {
                              "description": "Address Line 2",
                              "type": "string"
                            },
                            "billing_address_line_3": {
                              "description": "Address Line 3",
                              "type": "string"
                            },
                            "address": {
                              "description": "Address",
                              "type": "string"
                            },
                            "address_legal": {
                              "description": "Legal address",
                              "type": "string"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "integer"
                            },
                            "guid_1c": {
                              "description": "1c GUID",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/account/list": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "type": {
                                "description": "(Required)Account type:<br><ul><li>Organization = 1</li><li>Contact = 2</li></ul>",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name (title) for Organization",
                                "type": "string"
                              },
                              "honorific_title_id": {
                                "description": "Honorific title for Contact",
                                "type": "integer"
                              },
                              "first_name": {
                                "description": "Contact first name",
                                "type": "string"
                              },
                              "middle_name": {
                                "description": "Contact middle (second) name",
                                "type": "string"
                              },
                              "last_name": {
                                "description": "Contact last name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "tinyint"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "merged_to": {
                                "description": "Id of entry in which current account was merged",
                                "type": "integer"
                              },
                              "owner_id": {
                                "description": "Assigned user id",
                                "type": "integer"
                              },
                              "industry_id": {
                                "description": "id of entry in Industries table",
                                "type": "integer"
                              },
                              "account_category_id": {
                                "description": "Id of entry in Account Categories table",
                                "type": "integer"
                              },
                              "name_legal": {
                                "description": "Legal name for Organization",
                                "type": "string"
                              },
                              "name_legal_full": {
                                "description": "Full legal name for Organization",
                                "type": "string"
                              },
                              "phone": {
                                "description": "Primary phone number",
                                "type": "string"
                              },
                              "phone2": {
                                "description": "Additional phone number",
                                "type": "string"
                              },
                              "phone3": {
                                "description": "Additional phone number",
                                "type": "string"
                              },
                              "email": {
                                "description": "Email <span style=\"color:red;\">(Deprecated)</span> To add an E-mail, use <a href=\"https://www.flowlu.com/api/#tag/Email\">E-mails</a>",
                                "type": "string"
                              },
                              "email_personal": {
                                "description": "Personal email <span style=\"color:red;\">(Deprecated)</span> To add an E-mail, use <a href=\"https://www.flowlu.com/api/#tag/Email\">E-mails</a>",
                                "type": "string"
                              },
                              "web": {
                                "description": "Website",
                                "type": "string"
                              },
                              "telegram": {
                                "description": "ICQ id",
                                "type": "string"
                              },
                              "skype": {
                                "description": "Skype account id",
                                "type": "string"
                              },
                              "link_google": {
                                "description": "Link to Google+ ",
                                "type": "string"
                              },
                              "link_facebook": {
                                "description": "Link to Facebook ",
                                "type": "string"
                              },
                              "link_vk": {
                                "description": "Link to Vk.com ",
                                "type": "string"
                              },
                              "link_linkedin": {
                                "description": "Link to LinkedIn ",
                                "type": "string"
                              },
                              "link_instagram": {
                                "description": "Link to Instagram",
                                "type": "string"
                              },
                              "VAT": {
                                "description": "Account VAT (or TAX ID)",
                                "type": "string"
                              },
                              "VAT1": {
                                "description": "Additional Account VAT (or TAX ID)",
                                "type": "string"
                              },
                              "VAT2": {
                                "description": "Additional Account VAT (or TAX ID)",
                                "type": "string"
                              },
                              "bank_details": {
                                "description": "Bank Details text",
                                "type": "string"
                              },
                              "shipping_country": {
                                "description": "Country",
                                "type": "string"
                              },
                              "shipping_state": {
                                "description": "State, Region",
                                "type": "string"
                              },
                              "shipping_city": {
                                "description": "City",
                                "type": "string"
                              },
                              "shipping_zip": {
                                "description": "ZIP code",
                                "type": "string"
                              },
                              "shipping_address_line_1": {
                                "description": "Address Line 1",
                                "type": "string"
                              },
                              "shipping_address_line_2": {
                                "description": "Address Line 2",
                                "type": "string"
                              },
                              "shipping_address_line_3": {
                                "description": "Address Line 3",
                                "type": "string"
                              },
                              "billing_country": {
                                "description": "Country",
                                "type": "string"
                              },
                              "billing_state": {
                                "description": "State, Region",
                                "type": "string"
                              },
                              "billing_city": {
                                "description": "City",
                                "type": "string"
                              },
                              "billing_zip": {
                                "description": "ZIP code",
                                "type": "string"
                              },
                              "billing_address_line_1": {
                                "description": "Address Line 1",
                                "type": "string"
                              },
                              "billing_address_line_2": {
                                "description": "Address Line 2",
                                "type": "string"
                              },
                              "billing_address_line_3": {
                                "description": "Address Line 3",
                                "type": "string"
                              },
                              "address": {
                                "description": "Address",
                                "type": "string"
                              },
                              "address_legal": {
                                "description": "Legal address",
                                "type": "string"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "integer"
                              },
                              "guid_1c": {
                                "description": "1c GUID",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/relation/create": {
      "post": {
        "tags": [
          "Relation"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "parent_acc_id": {
                    "description": "Id of parent account",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "child_acc_id": {
                    "description": "id of child account",
                    "type": "integer"
                  },
                  "relation_name": {
                    "description": "title of relation (position etc)",
                    "type": "string"
                  },
                  "type": {
                    "description": "1 - employee<br>2 - company",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/relation/update/{id}": {
      "post": {
        "tags": [
          "Relation"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "parent_acc_id": {
                    "description": "Id of parent account",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "child_acc_id": {
                    "description": "id of child account",
                    "type": "integer"
                  },
                  "relation_name": {
                    "description": "title of relation (position etc)",
                    "type": "string"
                  },
                  "type": {
                    "description": "1 - employee<br>2 - company",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "parent_acc_id": {
                              "description": "Id of parent account",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "child_acc_id": {
                              "description": "id of child account",
                              "type": "integer"
                            },
                            "relation_name": {
                              "description": "title of relation (position etc)",
                              "type": "string"
                            },
                            "type": {
                              "description": "1 - employee<br>2 - company",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/relation/delete/{id}": {
      "get": {
        "tags": [
          "Relation"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/relation/get/{id}": {
      "get": {
        "tags": [
          "Relation"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "parent_acc_id": {
                              "description": "Id of parent account",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "child_acc_id": {
                              "description": "id of child account",
                              "type": "integer"
                            },
                            "relation_name": {
                              "description": "title of relation (position etc)",
                              "type": "string"
                            },
                            "type": {
                              "description": "1 - employee<br>2 - company",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/relation/list": {
      "get": {
        "tags": [
          "Relation"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "parent_acc_id": {
                                "description": "Id of parent account",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "child_acc_id": {
                                "description": "id of child account",
                                "type": "integer"
                              },
                              "relation_name": {
                                "description": "title of relation (position etc)",
                                "type": "string"
                              },
                              "type": {
                                "description": "1 - employee<br>2 - company",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/loss_reason/create": {
      "post": {
        "tags": [
          "Loss reasons"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/loss_reason/update/{id}": {
      "post": {
        "tags": [
          "Loss reasons"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/loss_reason/delete/{id}": {
      "get": {
        "tags": [
          "Loss reasons"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/loss_reason/get/{id}": {
      "get": {
        "tags": [
          "Loss reasons"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/loss_reason/list": {
      "get": {
        "tags": [
          "Loss reasons"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/source/create": {
      "post": {
        "tags": [
          "Opportunities sources"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/source/update/{id}": {
      "post": {
        "tags": [
          "Opportunities sources"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/source/delete/{id}": {
      "get": {
        "tags": [
          "Opportunities sources"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/source/get/{id}": {
      "get": {
        "tags": [
          "Opportunities sources"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/source/list": {
      "get": {
        "tags": [
          "Opportunities sources"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/pipeline_stage/create": {
      "post": {
        "tags": [
          "Opportunity stages"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Stage name",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "color": {
                    "description": "Color HEX code ",
                    "type": "string"
                  },
                  "pipeline_id": {
                    "description": "Sales funnel id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/pipeline_stage/update/{id}": {
      "post": {
        "tags": [
          "Opportunity stages"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Stage name",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "color": {
                    "description": "Color HEX code ",
                    "type": "string"
                  },
                  "pipeline_id": {
                    "description": "Sales funnel id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Stage name",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "color": {
                              "description": "Color HEX code ",
                              "type": "string"
                            },
                            "pipeline_id": {
                              "description": "Sales funnel id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/pipeline_stage/delete/{id}": {
      "get": {
        "tags": [
          "Opportunity stages"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/pipeline_stage/get/{id}": {
      "get": {
        "tags": [
          "Opportunity stages"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Stage name",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "color": {
                              "description": "Color HEX code ",
                              "type": "string"
                            },
                            "pipeline_id": {
                              "description": "Sales funnel id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/pipeline_stage/list": {
      "get": {
        "tags": [
          "Opportunity stages"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Stage name",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              },
                              "color": {
                                "description": "Color HEX code ",
                                "type": "string"
                              },
                              "pipeline_id": {
                                "description": "Sales funnel id",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/pipeline/create": {
      "post": {
        "tags": [
          "Sales Funnels "
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/pipeline/update/{id}": {
      "post": {
        "tags": [
          "Sales Funnels "
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/pipeline/delete/{id}": {
      "get": {
        "tags": [
          "Sales Funnels "
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/pipeline/get/{id}": {
      "get": {
        "tags": [
          "Sales Funnels "
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/pipeline/list": {
      "get": {
        "tags": [
          "Sales Funnels "
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/lead/create": {
      "post": {
        "tags": [
          "Opportunities "
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "budget": {
                    "description": "Opportunity value",
                    "type": "number"
                  },
                  "customer_id": {
                    "description": "This is an id of the CRM company or contact which is needed to be linked with the opportunity. This allows you to link the client to the opportunity. If your client is a company, and you need to relate an opportunity to the person (contact) at this company, then enter his/her id in the contact_id field",
                    "type": "integer"
                  },
                  "contact_id": {
                    "description": "Id of the company-related contact (account_id)",
                    "type": "integer"
                  },
                  "source_id": {
                    "description": "Id of entry from Opportunity Source table",
                    "type": "integer"
                  },
                  "assignee_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "start_date": {
                    "description": "Opportunity start date",
                    "type": "string"
                  },
                  "deadline": {
                    "description": "Opportunity planned close date",
                    "type": "string"
                  },
                  "pipeline_id": {
                    "description": "Sales Funnel id",
                    "type": "integer"
                  },
                  "pipeline_stage_id": {
                    "description": "Stage id",
                    "type": "integer"
                  },
                  "active": {
                    "description": "Lead health status<li>1 - lead in progress</li><li>2 - lead is lost;</li><li>3 - lead is won;</li>",
                    "type": "boolean"
                  },
                  "closing_date": {
                    "description": "Opportunity Close Date (this field needs to be filled out if opportunity has active = 2 or 3)",
                    "type": "string"
                  },
                  "closing_comment": {
                    "description": "Comment or note describes reason or situation",
                    "type": "string"
                  },
                  "closing_status_id": {
                    "description": "Id of entry in Loss Reasons table",
                    "type": "integer"
                  },
                  "contact_name": {
                    "description": "Contact name",
                    "type": "string"
                  },
                  "contact_phone": {
                    "description": "Contact phone",
                    "type": "string"
                  },
                  "contact_mobile": {
                    "description": "Contact mobile phone (or additional phone)",
                    "type": "string"
                  },
                  "contact_email": {
                    "description": "Contact email",
                    "type": "string"
                  },
                  "contact_web": {
                    "description": "Website",
                    "type": "string"
                  },
                  "contact_position": {
                    "description": "Contact position",
                    "type": "string"
                  },
                  "contact_company": {
                    "description": "Contact's Organization",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/lead/update/{id}": {
      "post": {
        "tags": [
          "Opportunities "
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "budget": {
                    "description": "Opportunity value",
                    "type": "number"
                  },
                  "customer_id": {
                    "description": "This is an id of the CRM company or contact which is needed to be linked with the opportunity. This allows you to link the client to the opportunity. If your client is a company, and you need to relate an opportunity to the person (contact) at this company, then enter his/her id in the contact_id field",
                    "type": "integer"
                  },
                  "contact_id": {
                    "description": "Id of the company-related contact (account_id)",
                    "type": "integer"
                  },
                  "source_id": {
                    "description": "Id of entry from Opportunity Source table",
                    "type": "integer"
                  },
                  "assignee_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "start_date": {
                    "description": "Opportunity start date",
                    "type": "string"
                  },
                  "deadline": {
                    "description": "Opportunity planned close date",
                    "type": "string"
                  },
                  "pipeline_id": {
                    "description": "Sales Funnel id",
                    "type": "integer"
                  },
                  "pipeline_stage_id": {
                    "description": "Stage id",
                    "type": "integer"
                  },
                  "active": {
                    "description": "Lead health status<li>1 - lead in progress</li><li>2 - lead is lost;</li><li>3 - lead is won;</li>",
                    "type": "boolean"
                  },
                  "closing_date": {
                    "description": "Opportunity Close Date (this field needs to be filled out if opportunity has active = 2 or 3)",
                    "type": "string"
                  },
                  "closing_comment": {
                    "description": "Comment or note describes reason or situation",
                    "type": "string"
                  },
                  "closing_status_id": {
                    "description": "Id of entry in Loss Reasons table",
                    "type": "integer"
                  },
                  "contact_name": {
                    "description": "Contact name",
                    "type": "string"
                  },
                  "contact_phone": {
                    "description": "Contact phone",
                    "type": "string"
                  },
                  "contact_mobile": {
                    "description": "Contact mobile phone (or additional phone)",
                    "type": "string"
                  },
                  "contact_email": {
                    "description": "Contact email",
                    "type": "string"
                  },
                  "contact_web": {
                    "description": "Website",
                    "type": "string"
                  },
                  "contact_position": {
                    "description": "Contact position",
                    "type": "string"
                  },
                  "contact_company": {
                    "description": "Contact's Organization",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "budget": {
                              "description": "Opportunity value",
                              "type": "number"
                            },
                            "customer_id": {
                              "description": "This is an id of the CRM company or contact which is needed to be linked with the opportunity. This allows you to link the client to the opportunity. If your client is a company, and you need to relate an opportunity to the person (contact) at this company, then enter his/her id in the contact_id field",
                              "type": "integer"
                            },
                            "contact_id": {
                              "description": "Id of the company-related contact (account_id)",
                              "type": "integer"
                            },
                            "source_id": {
                              "description": "Id of entry from Opportunity Source table",
                              "type": "integer"
                            },
                            "assignee_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "start_date": {
                              "description": "Opportunity start date",
                              "type": "string"
                            },
                            "deadline": {
                              "description": "Opportunity planned close date",
                              "type": "string"
                            },
                            "pipeline_id": {
                              "description": "Sales Funnel id",
                              "type": "integer"
                            },
                            "pipeline_stage_id": {
                              "description": "Stage id",
                              "type": "integer"
                            },
                            "active": {
                              "description": "Lead health status<li>1 - lead in progress</li><li>2 - lead is lost;</li><li>3 - lead is won;</li>",
                              "type": "boolean"
                            },
                            "closing_date": {
                              "description": "Opportunity Close Date (this field needs to be filled out if opportunity has active = 2 or 3)",
                              "type": "string"
                            },
                            "closing_comment": {
                              "description": "Comment or note describes reason or situation",
                              "type": "string"
                            },
                            "closing_status_id": {
                              "description": "Id of entry in Loss Reasons table",
                              "type": "integer"
                            },
                            "contact_name": {
                              "description": "Contact name",
                              "type": "string"
                            },
                            "contact_phone": {
                              "description": "Contact phone",
                              "type": "string"
                            },
                            "contact_mobile": {
                              "description": "Contact mobile phone (or additional phone)",
                              "type": "string"
                            },
                            "contact_email": {
                              "description": "Contact email",
                              "type": "string"
                            },
                            "contact_web": {
                              "description": "Website",
                              "type": "string"
                            },
                            "contact_position": {
                              "description": "Contact position",
                              "type": "string"
                            },
                            "contact_company": {
                              "description": "Contact's Organization",
                              "type": "string"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/lead/delete/{id}": {
      "get": {
        "tags": [
          "Opportunities "
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/lead/get/{id}": {
      "get": {
        "tags": [
          "Opportunities "
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "budget": {
                              "description": "Opportunity value",
                              "type": "number"
                            },
                            "customer_id": {
                              "description": "This is an id of the CRM company or contact which is needed to be linked with the opportunity. This allows you to link the client to the opportunity. If your client is a company, and you need to relate an opportunity to the person (contact) at this company, then enter his/her id in the contact_id field",
                              "type": "integer"
                            },
                            "contact_id": {
                              "description": "Id of the company-related contact (account_id)",
                              "type": "integer"
                            },
                            "source_id": {
                              "description": "Id of entry from Opportunity Source table",
                              "type": "integer"
                            },
                            "assignee_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "start_date": {
                              "description": "Opportunity start date",
                              "type": "string"
                            },
                            "deadline": {
                              "description": "Opportunity planned close date",
                              "type": "string"
                            },
                            "pipeline_id": {
                              "description": "Sales Funnel id",
                              "type": "integer"
                            },
                            "pipeline_stage_id": {
                              "description": "Stage id",
                              "type": "integer"
                            },
                            "active": {
                              "description": "Lead health status<li>1 - lead in progress</li><li>2 - lead is lost;</li><li>3 - lead is won;</li>",
                              "type": "boolean"
                            },
                            "closing_date": {
                              "description": "Opportunity Close Date (this field needs to be filled out if opportunity has active = 2 or 3)",
                              "type": "string"
                            },
                            "closing_comment": {
                              "description": "Comment or note describes reason or situation",
                              "type": "string"
                            },
                            "closing_status_id": {
                              "description": "Id of entry in Loss Reasons table",
                              "type": "integer"
                            },
                            "contact_name": {
                              "description": "Contact name",
                              "type": "string"
                            },
                            "contact_phone": {
                              "description": "Contact phone",
                              "type": "string"
                            },
                            "contact_mobile": {
                              "description": "Contact mobile phone (or additional phone)",
                              "type": "string"
                            },
                            "contact_email": {
                              "description": "Contact email",
                              "type": "string"
                            },
                            "contact_web": {
                              "description": "Website",
                              "type": "string"
                            },
                            "contact_position": {
                              "description": "Contact position",
                              "type": "string"
                            },
                            "contact_company": {
                              "description": "Contact's Organization",
                              "type": "string"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/lead/list": {
      "get": {
        "tags": [
          "Opportunities "
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "budget": {
                                "description": "Opportunity value",
                                "type": "number"
                              },
                              "customer_id": {
                                "description": "This is an id of the CRM company or contact which is needed to be linked with the opportunity. This allows you to link the client to the opportunity. If your client is a company, and you need to relate an opportunity to the person (contact) at this company, then enter his/her id in the contact_id field",
                                "type": "integer"
                              },
                              "contact_id": {
                                "description": "Id of the company-related contact (account_id)",
                                "type": "integer"
                              },
                              "source_id": {
                                "description": "Id of entry from Opportunity Source table",
                                "type": "integer"
                              },
                              "assignee_id": {
                                "description": "Assigned user id",
                                "type": "integer"
                              },
                              "start_date": {
                                "description": "Opportunity start date",
                                "type": "string"
                              },
                              "deadline": {
                                "description": "Opportunity planned close date",
                                "type": "string"
                              },
                              "pipeline_id": {
                                "description": "Sales Funnel id",
                                "type": "integer"
                              },
                              "pipeline_stage_id": {
                                "description": "Stage id",
                                "type": "integer"
                              },
                              "active": {
                                "description": "Lead health status<li>1 - lead in progress</li><li>2 - lead is lost;</li><li>3 - lead is won;</li>",
                                "type": "boolean"
                              },
                              "closing_date": {
                                "description": "Opportunity Close Date (this field needs to be filled out if opportunity has active = 2 or 3)",
                                "type": "string"
                              },
                              "closing_comment": {
                                "description": "Comment or note describes reason or situation",
                                "type": "string"
                              },
                              "closing_status_id": {
                                "description": "Id of entry in Loss Reasons table",
                                "type": "integer"
                              },
                              "contact_name": {
                                "description": "Contact name",
                                "type": "string"
                              },
                              "contact_phone": {
                                "description": "Contact phone",
                                "type": "string"
                              },
                              "contact_mobile": {
                                "description": "Contact mobile phone (or additional phone)",
                                "type": "string"
                              },
                              "contact_email": {
                                "description": "Contact email",
                                "type": "string"
                              },
                              "contact_web": {
                                "description": "Website",
                                "type": "string"
                              },
                              "contact_position": {
                                "description": "Contact position",
                                "type": "string"
                              },
                              "contact_company": {
                                "description": "Contact's Organization",
                                "type": "string"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "integer"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/account_category/create": {
      "post": {
        "tags": [
          "Account types"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/account_category/update/{id}": {
      "post": {
        "tags": [
          "Account types"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/account_category/delete/{id}": {
      "get": {
        "tags": [
          "Account types"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/account_category/get/{id}": {
      "get": {
        "tags": [
          "Account types"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/account_category/list": {
      "get": {
        "tags": [
          "Account types"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/industry/create": {
      "post": {
        "tags": [
          "Account industries"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/industry/update/{id}": {
      "post": {
        "tags": [
          "Account industries"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/industry/delete/{id}": {
      "get": {
        "tags": [
          "Account industries"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/industry/get/{id}": {
      "get": {
        "tags": [
          "Account industries"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/industry/list": {
      "get": {
        "tags": [
          "Account industries"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/honorific_title/create": {
      "post": {
        "tags": [
          "Honorifics"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/honorific_title/update/{id}": {
      "post": {
        "tags": [
          "Honorifics"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/honorific_title/delete/{id}": {
      "get": {
        "tags": [
          "Honorifics"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/honorific_title/get/{id}": {
      "get": {
        "tags": [
          "Honorifics"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/honorific_title/list": {
      "get": {
        "tags": [
          "Honorifics"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/emails/create": {
      "post": {
        "tags": [
          "Еmail"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Еmail",
                    "type": "string"
                  },
                  "type": {
                    "description": "Address type: 10 - Work, 20 - Personal, 40 - Other.",
                    "type": "integer"
                  },
                  "comment": {
                    "description": "Comment",
                    "type": "string"
                  },
                  "account_id": {
                    "description": "Account id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/emails/update/{id}": {
      "post": {
        "tags": [
          "Еmail"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Еmail",
                    "type": "string"
                  },
                  "type": {
                    "description": "Address type: 10 - Work, 20 - Personal, 40 - Other.",
                    "type": "integer"
                  },
                  "comment": {
                    "description": "Comment",
                    "type": "string"
                  },
                  "account_id": {
                    "description": "Account id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "email": {
                              "description": "Еmail",
                              "type": "string"
                            },
                            "type": {
                              "description": "Address type: 10 - Work, 20 - Personal, 40 - Other.",
                              "type": "integer"
                            },
                            "comment": {
                              "description": "Comment",
                              "type": "string"
                            },
                            "account_id": {
                              "description": "Account id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/emails/delete/{id}": {
      "get": {
        "tags": [
          "Еmail"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/emails/get/{id}": {
      "get": {
        "tags": [
          "Еmail"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "email": {
                              "description": "Еmail",
                              "type": "string"
                            },
                            "type": {
                              "description": "Address type: 10 - Work, 20 - Personal, 40 - Other.",
                              "type": "integer"
                            },
                            "comment": {
                              "description": "Comment",
                              "type": "string"
                            },
                            "account_id": {
                              "description": "Account id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/emails/list": {
      "get": {
        "tags": [
          "Еmail"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "email": {
                                "description": "Еmail",
                                "type": "string"
                              },
                              "type": {
                                "description": "Address type: 10 - Work, 20 - Personal, 40 - Other.",
                                "type": "integer"
                              },
                              "comment": {
                                "description": "Comment",
                                "type": "string"
                              },
                              "account_id": {
                                "description": "Account id",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/phones/create": {
      "post": {
        "tags": [
          "Clients phone numbers"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "description": "Phone number",
                    "type": "string"
                  },
                  "phone_masked": {
                    "description": "Formatted phone number",
                    "type": "string"
                  },
                  "type": {
                    "description": "Phone number type <li>10 - Work</li> <li>20 - Personal</li> <li>30 - Other</li>",
                    "type": "integer"
                  },
                  "old_phone": {
                    "description": "Old phone number",
                    "type": "string"
                  },
                  "comment": {
                    "description": "Comment",
                    "type": "string"
                  },
                  "account_id": {
                    "description": "Account id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/phones/update/{id}": {
      "post": {
        "tags": [
          "Clients phone numbers"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "description": "Phone number",
                    "type": "string"
                  },
                  "phone_masked": {
                    "description": "Formatted phone number",
                    "type": "string"
                  },
                  "type": {
                    "description": "Phone number type <li>10 - Work</li> <li>20 - Personal</li> <li>30 - Other</li>",
                    "type": "integer"
                  },
                  "old_phone": {
                    "description": "Old phone number",
                    "type": "string"
                  },
                  "comment": {
                    "description": "Comment",
                    "type": "string"
                  },
                  "account_id": {
                    "description": "Account id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "Phone number",
                              "type": "string"
                            },
                            "phone_masked": {
                              "description": "Formatted phone number",
                              "type": "string"
                            },
                            "type": {
                              "description": "Phone number type <li>10 - Work</li> <li>20 - Personal</li> <li>30 - Other</li>",
                              "type": "integer"
                            },
                            "old_phone": {
                              "description": "Old phone number",
                              "type": "string"
                            },
                            "comment": {
                              "description": "Comment",
                              "type": "string"
                            },
                            "account_id": {
                              "description": "Account id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/phones/delete/{id}": {
      "get": {
        "tags": [
          "Clients phone numbers"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/phones/get/{id}": {
      "get": {
        "tags": [
          "Clients phone numbers"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "Phone number",
                              "type": "string"
                            },
                            "phone_masked": {
                              "description": "Formatted phone number",
                              "type": "string"
                            },
                            "type": {
                              "description": "Phone number type <li>10 - Work</li> <li>20 - Personal</li> <li>30 - Other</li>",
                              "type": "integer"
                            },
                            "old_phone": {
                              "description": "Old phone number",
                              "type": "string"
                            },
                            "comment": {
                              "description": "Comment",
                              "type": "string"
                            },
                            "account_id": {
                              "description": "Account id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/phones/list": {
      "get": {
        "tags": [
          "Clients phone numbers"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "phone": {
                                "description": "Phone number",
                                "type": "string"
                              },
                              "phone_masked": {
                                "description": "Formatted phone number",
                                "type": "string"
                              },
                              "type": {
                                "description": "Phone number type <li>10 - Work</li> <li>20 - Personal</li> <li>30 - Other</li>",
                                "type": "integer"
                              },
                              "old_phone": {
                                "description": "Old phone number",
                                "type": "string"
                              },
                              "comment": {
                                "description": "Comment",
                                "type": "string"
                              },
                              "account_id": {
                                "description": "Account id",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/projects/create": {
      "post": {
        "tags": [
          "Project"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "estimated_revenue": {
                    "description": "Contract sum",
                    "type": "number"
                  },
                  "estimated_expenses": {
                    "description": "Expense sum",
                    "type": "number"
                  },
                  "startdate": {
                    "description": "Start date",
                    "type": "string"
                  },
                  "enddate": {
                    "description": "End date",
                    "type": "string"
                  },
                  "manager_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Project description",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "number"
                  },
                  "stage_id": {
                    "description": "Stage",
                    "type": "integer"
                  },
                  "project_type_id": {
                    "description": "Project type id",
                    "type": "integer"
                  },
                  "is_archive": {
                    "description": "Archived: </li> <li> 1 - Archived </li> <li> 0 - Not archived </li>",
                    "type": "boolean"
                  },
                  "priority": {
                    "description": "Priority:<li> 1 - Low </li> <li> 2 - Medium </li> <li> 3 - High </li>",
                    "type": "integer"
                  },
                  "customer_id": {
                    "description": "CRM company id",
                    "type": "integer"
                  },
                  "customer_crm_contact_id": {
                    "description": "CRM contact id",
                    "type": "integer"
                  },
                  "archive_date": {
                    "description": "Archive date",
                    "type": "string"
                  },
                  "workspace_id": {
                    "description": "Workspace id",
                    "type": "integer"
                  },
                  "crm_lead_id": {
                    "description": "CRM lead id",
                    "type": "integer"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "billing_type": {
                    "description": "Billing type (Default- 0):<li>0 - Fixed values of the plan of revenue and expenses</li><li>10 - Based on Task Hours</li><li>20 -Cash flow planning</li><li>30 - Ignore finances</li>",
                    "type": "integer"
                  },
                  "default_billing_rate": {
                    "description": "Default billing rate",
                    "type": "number"
                  },
                  "default_bill_time_type": {
                    "description": "Default bill time type",
                    "type": "string"
                  },
                  "use_default_invoice_split_type": {
                    "description": "Use default invoice split type(Default- 0)",
                    "type": "boolean"
                  },
                  "default_invoice_split_type_in_project": {
                    "description": "Default invoice split type in project ",
                    "type": "integer"
                  },
                  "default_invoice_item_format": {
                    "description": "Default invoice item format",
                    "type": "string"
                  },
                  "tasks_workflow_id": {
                    "description": "Project Task Workflow ID",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/projects/update/{id}": {
      "post": {
        "tags": [
          "Project"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "estimated_revenue": {
                    "description": "Contract sum",
                    "type": "number"
                  },
                  "estimated_expenses": {
                    "description": "Expense sum",
                    "type": "number"
                  },
                  "startdate": {
                    "description": "Start date",
                    "type": "string"
                  },
                  "enddate": {
                    "description": "End date",
                    "type": "string"
                  },
                  "manager_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Project description",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "number"
                  },
                  "stage_id": {
                    "description": "Stage",
                    "type": "integer"
                  },
                  "project_type_id": {
                    "description": "Project type id",
                    "type": "integer"
                  },
                  "is_archive": {
                    "description": "Archived: </li> <li> 1 - Archived </li> <li> 0 - Not archived </li>",
                    "type": "boolean"
                  },
                  "priority": {
                    "description": "Priority:<li> 1 - Low </li> <li> 2 - Medium </li> <li> 3 - High </li>",
                    "type": "integer"
                  },
                  "customer_id": {
                    "description": "CRM company id",
                    "type": "integer"
                  },
                  "customer_crm_contact_id": {
                    "description": "CRM contact id",
                    "type": "integer"
                  },
                  "archive_date": {
                    "description": "Archive date",
                    "type": "string"
                  },
                  "workspace_id": {
                    "description": "Workspace id",
                    "type": "integer"
                  },
                  "crm_lead_id": {
                    "description": "CRM lead id",
                    "type": "integer"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "billing_type": {
                    "description": "Billing type (Default- 0):<li>0 - Fixed values of the plan of revenue and expenses</li><li>10 - Based on Task Hours</li><li>20 -Cash flow planning</li><li>30 - Ignore finances</li>",
                    "type": "integer"
                  },
                  "default_billing_rate": {
                    "description": "Default billing rate",
                    "type": "number"
                  },
                  "default_bill_time_type": {
                    "description": "Default bill time type",
                    "type": "string"
                  },
                  "use_default_invoice_split_type": {
                    "description": "Use default invoice split type(Default- 0)",
                    "type": "boolean"
                  },
                  "default_invoice_split_type_in_project": {
                    "description": "Default invoice split type in project ",
                    "type": "integer"
                  },
                  "default_invoice_item_format": {
                    "description": "Default invoice item format",
                    "type": "string"
                  },
                  "tasks_workflow_id": {
                    "description": "Project Task Workflow ID",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "estimated_revenue": {
                              "description": "Contract sum",
                              "type": "number"
                            },
                            "estimated_expenses": {
                              "description": "Expense sum",
                              "type": "number"
                            },
                            "startdate": {
                              "description": "Start date",
                              "type": "string"
                            },
                            "enddate": {
                              "description": "End date",
                              "type": "string"
                            },
                            "manager_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Project description",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "number"
                            },
                            "stage_id": {
                              "description": "Stage",
                              "type": "integer"
                            },
                            "project_type_id": {
                              "description": "Project type id",
                              "type": "integer"
                            },
                            "is_archive": {
                              "description": "Archived: </li> <li> 1 - Archived </li> <li> 0 - Not archived </li>",
                              "type": "boolean"
                            },
                            "priority": {
                              "description": "Priority:<li> 1 - Low </li> <li> 2 - Medium </li> <li> 3 - High </li>",
                              "type": "integer"
                            },
                            "customer_id": {
                              "description": "CRM company id",
                              "type": "integer"
                            },
                            "customer_crm_contact_id": {
                              "description": "CRM contact id",
                              "type": "integer"
                            },
                            "archive_date": {
                              "description": "Archive date",
                              "type": "string"
                            },
                            "workspace_id": {
                              "description": "Workspace id",
                              "type": "integer"
                            },
                            "crm_lead_id": {
                              "description": "CRM lead id",
                              "type": "integer"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "billing_type": {
                              "description": "Billing type (Default- 0):<li>0 - Fixed values of the plan of revenue and expenses</li><li>10 - Based on Task Hours</li><li>20 -Cash flow planning</li><li>30 - Ignore finances</li>",
                              "type": "integer"
                            },
                            "default_billing_rate": {
                              "description": "Default billing rate",
                              "type": "number"
                            },
                            "default_bill_time_type": {
                              "description": "Default bill time type",
                              "type": "string"
                            },
                            "use_default_invoice_split_type": {
                              "description": "Use default invoice split type(Default- 0)",
                              "type": "boolean"
                            },
                            "default_invoice_split_type_in_project": {
                              "description": "Default invoice split type in project ",
                              "type": "integer"
                            },
                            "default_invoice_item_format": {
                              "description": "Default invoice item format",
                              "type": "string"
                            },
                            "tasks_workflow_id": {
                              "description": "Project Task Workflow ID",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/projects/delete/{id}": {
      "get": {
        "tags": [
          "Project"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/projects/get/{id}": {
      "get": {
        "tags": [
          "Project"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "estimated_revenue": {
                              "description": "Contract sum",
                              "type": "number"
                            },
                            "estimated_expenses": {
                              "description": "Expense sum",
                              "type": "number"
                            },
                            "startdate": {
                              "description": "Start date",
                              "type": "string"
                            },
                            "enddate": {
                              "description": "End date",
                              "type": "string"
                            },
                            "manager_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Project description",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "number"
                            },
                            "stage_id": {
                              "description": "Stage",
                              "type": "integer"
                            },
                            "project_type_id": {
                              "description": "Project type id",
                              "type": "integer"
                            },
                            "is_archive": {
                              "description": "Archived: </li> <li> 1 - Archived </li> <li> 0 - Not archived </li>",
                              "type": "boolean"
                            },
                            "priority": {
                              "description": "Priority:<li> 1 - Low </li> <li> 2 - Medium </li> <li> 3 - High </li>",
                              "type": "integer"
                            },
                            "customer_id": {
                              "description": "CRM company id",
                              "type": "integer"
                            },
                            "customer_crm_contact_id": {
                              "description": "CRM contact id",
                              "type": "integer"
                            },
                            "archive_date": {
                              "description": "Archive date",
                              "type": "string"
                            },
                            "workspace_id": {
                              "description": "Workspace id",
                              "type": "integer"
                            },
                            "crm_lead_id": {
                              "description": "CRM lead id",
                              "type": "integer"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "billing_type": {
                              "description": "Billing type (Default- 0):<li>0 - Fixed values of the plan of revenue and expenses</li><li>10 - Based on Task Hours</li><li>20 -Cash flow planning</li><li>30 - Ignore finances</li>",
                              "type": "integer"
                            },
                            "default_billing_rate": {
                              "description": "Default billing rate",
                              "type": "number"
                            },
                            "default_bill_time_type": {
                              "description": "Default bill time type",
                              "type": "string"
                            },
                            "use_default_invoice_split_type": {
                              "description": "Use default invoice split type(Default- 0)",
                              "type": "boolean"
                            },
                            "default_invoice_split_type_in_project": {
                              "description": "Default invoice split type in project ",
                              "type": "integer"
                            },
                            "default_invoice_item_format": {
                              "description": "Default invoice item format",
                              "type": "string"
                            },
                            "tasks_workflow_id": {
                              "description": "Project Task Workflow ID",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/projects/list": {
      "get": {
        "tags": [
          "Project"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "estimated_revenue": {
                                "description": "Contract sum",
                                "type": "number"
                              },
                              "estimated_expenses": {
                                "description": "Expense sum",
                                "type": "number"
                              },
                              "startdate": {
                                "description": "Start date",
                                "type": "string"
                              },
                              "enddate": {
                                "description": "End date",
                                "type": "string"
                              },
                              "manager_id": {
                                "description": "Assigned user id",
                                "type": "integer"
                              },
                              "description": {
                                "description": "Project description",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "number"
                              },
                              "stage_id": {
                                "description": "Stage",
                                "type": "integer"
                              },
                              "project_type_id": {
                                "description": "Project type id",
                                "type": "integer"
                              },
                              "is_archive": {
                                "description": "Archived: </li> <li> 1 - Archived </li> <li> 0 - Not archived </li>",
                                "type": "boolean"
                              },
                              "priority": {
                                "description": "Priority:<li> 1 - Low </li> <li> 2 - Medium </li> <li> 3 - High </li>",
                                "type": "integer"
                              },
                              "customer_id": {
                                "description": "CRM company id",
                                "type": "integer"
                              },
                              "customer_crm_contact_id": {
                                "description": "CRM contact id",
                                "type": "integer"
                              },
                              "archive_date": {
                                "description": "Archive date",
                                "type": "string"
                              },
                              "workspace_id": {
                                "description": "Workspace id",
                                "type": "integer"
                              },
                              "crm_lead_id": {
                                "description": "CRM lead id",
                                "type": "integer"
                              },
                              "uuid": {
                                "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                                "type": "string"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "billing_type": {
                                "description": "Billing type (Default- 0):<li>0 - Fixed values of the plan of revenue and expenses</li><li>10 - Based on Task Hours</li><li>20 -Cash flow planning</li><li>30 - Ignore finances</li>",
                                "type": "integer"
                              },
                              "default_billing_rate": {
                                "description": "Default billing rate",
                                "type": "number"
                              },
                              "default_bill_time_type": {
                                "description": "Default bill time type",
                                "type": "string"
                              },
                              "use_default_invoice_split_type": {
                                "description": "Use default invoice split type(Default- 0)",
                                "type": "boolean"
                              },
                              "default_invoice_split_type_in_project": {
                                "description": "Default invoice split type in project ",
                                "type": "integer"
                              },
                              "default_invoice_item_format": {
                                "description": "Default invoice item format",
                                "type": "string"
                              },
                              "tasks_workflow_id": {
                                "description": "Project Task Workflow ID",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/project_types/create": {
      "post": {
        "tags": [
          "Project Templates"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "report": {
                    "description": "",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "auto_startdate_plus_days": {
                    "description": "When creating a new project, the project start date will be calculated as current date + no startdate_plus_days (Default - 0)",
                    "type": "integer"
                  },
                  "auto_enddate_plus_days": {
                    "description": "When creating a new project, the project end date will be calculated as current date + no enddate_plus_days (Default is 0)",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "create_tasks_next_stage": {
                    "description": "Task creation mode (Default- 0): <li> 1 - Create tasks for the current stage only </li> <li> 0 - Create all tasks when creating a project </li>",
                    "type": "boolean"
                  },
                  "manual_close_checkitems": {
                    "description": "Close milestones manually. Allow users to manually mark a milestone as complete, even if it has unfinished tasks. <li> 1 - Allow </li> <li> 0 - Deny </li> <br> The default is 1.",
                    "type": "boolean"
                  },
                  "is_active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "description_project": {
                    "description": "Description",
                    "type": "string"
                  },
                  "tasks_workflow_id": {
                    "description": "Project Task Workflow ID",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/project_types/update/{id}": {
      "post": {
        "tags": [
          "Project Templates"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "report": {
                    "description": "",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "auto_startdate_plus_days": {
                    "description": "When creating a new project, the project start date will be calculated as current date + no startdate_plus_days (Default - 0)",
                    "type": "integer"
                  },
                  "auto_enddate_plus_days": {
                    "description": "When creating a new project, the project end date will be calculated as current date + no enddate_plus_days (Default is 0)",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "create_tasks_next_stage": {
                    "description": "Task creation mode (Default- 0): <li> 1 - Create tasks for the current stage only </li> <li> 0 - Create all tasks when creating a project </li>",
                    "type": "boolean"
                  },
                  "manual_close_checkitems": {
                    "description": "Close milestones manually. Allow users to manually mark a milestone as complete, even if it has unfinished tasks. <li> 1 - Allow </li> <li> 0 - Deny </li> <br> The default is 1.",
                    "type": "boolean"
                  },
                  "is_active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "description_project": {
                    "description": "Description",
                    "type": "string"
                  },
                  "tasks_workflow_id": {
                    "description": "Project Task Workflow ID",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "report": {
                              "description": "",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "auto_startdate_plus_days": {
                              "description": "When creating a new project, the project start date will be calculated as current date + no startdate_plus_days (Default - 0)",
                              "type": "integer"
                            },
                            "auto_enddate_plus_days": {
                              "description": "When creating a new project, the project end date will be calculated as current date + no enddate_plus_days (Default is 0)",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "create_tasks_next_stage": {
                              "description": "Task creation mode (Default- 0): <li> 1 - Create tasks for the current stage only </li> <li> 0 - Create all tasks when creating a project </li>",
                              "type": "boolean"
                            },
                            "manual_close_checkitems": {
                              "description": "Close milestones manually. Allow users to manually mark a milestone as complete, even if it has unfinished tasks. <li> 1 - Allow </li> <li> 0 - Deny </li> <br> The default is 1.",
                              "type": "boolean"
                            },
                            "is_active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "description_project": {
                              "description": "Description",
                              "type": "string"
                            },
                            "tasks_workflow_id": {
                              "description": "Project Task Workflow ID",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/project_types/delete/{id}": {
      "get": {
        "tags": [
          "Project Templates"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/project_types/get/{id}": {
      "get": {
        "tags": [
          "Project Templates"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "report": {
                              "description": "",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "auto_startdate_plus_days": {
                              "description": "When creating a new project, the project start date will be calculated as current date + no startdate_plus_days (Default - 0)",
                              "type": "integer"
                            },
                            "auto_enddate_plus_days": {
                              "description": "When creating a new project, the project end date will be calculated as current date + no enddate_plus_days (Default is 0)",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "create_tasks_next_stage": {
                              "description": "Task creation mode (Default- 0): <li> 1 - Create tasks for the current stage only </li> <li> 0 - Create all tasks when creating a project </li>",
                              "type": "boolean"
                            },
                            "manual_close_checkitems": {
                              "description": "Close milestones manually. Allow users to manually mark a milestone as complete, even if it has unfinished tasks. <li> 1 - Allow </li> <li> 0 - Deny </li> <br> The default is 1.",
                              "type": "boolean"
                            },
                            "is_active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "description_project": {
                              "description": "Description",
                              "type": "string"
                            },
                            "tasks_workflow_id": {
                              "description": "Project Task Workflow ID",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/project_types/list": {
      "get": {
        "tags": [
          "Project Templates"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "report": {
                                "description": "",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "auto_startdate_plus_days": {
                                "description": "When creating a new project, the project start date will be calculated as current date + no startdate_plus_days (Default - 0)",
                                "type": "integer"
                              },
                              "auto_enddate_plus_days": {
                                "description": "When creating a new project, the project end date will be calculated as current date + no enddate_plus_days (Default is 0)",
                                "type": "integer"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              },
                              "create_tasks_next_stage": {
                                "description": "Task creation mode (Default- 0): <li> 1 - Create tasks for the current stage only </li> <li> 0 - Create all tasks when creating a project </li>",
                                "type": "boolean"
                              },
                              "manual_close_checkitems": {
                                "description": "Close milestones manually. Allow users to manually mark a milestone as complete, even if it has unfinished tasks. <li> 1 - Allow </li> <li> 0 - Deny </li> <br> The default is 1.",
                                "type": "boolean"
                              },
                              "is_active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              },
                              "description_project": {
                                "description": "Description",
                                "type": "string"
                              },
                              "tasks_workflow_id": {
                                "description": "Project Task Workflow ID",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/stages/create": {
      "post": {
        "tags": [
          "Project stages"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "fullname": {
                    "description": "Full name",
                    "type": "string"
                  },
                  "project_type_id": {
                    "description": "Project type id",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "color_class": {
                    "description": "Color class",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "color": {
                    "description": "Color HEX code ",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/stages/update/{id}": {
      "post": {
        "tags": [
          "Project stages"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "fullname": {
                    "description": "Full name",
                    "type": "string"
                  },
                  "project_type_id": {
                    "description": "Project type id",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "color_class": {
                    "description": "Color class",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "color": {
                    "description": "Color HEX code ",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "Full name",
                              "type": "string"
                            },
                            "project_type_id": {
                              "description": "Project type id",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "color_class": {
                              "description": "Color class",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "color": {
                              "description": "Color HEX code ",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/stages/delete/{id}": {
      "get": {
        "tags": [
          "Project stages"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/stages/get/{id}": {
      "get": {
        "tags": [
          "Project stages"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "Full name",
                              "type": "string"
                            },
                            "project_type_id": {
                              "description": "Project type id",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "color_class": {
                              "description": "Color class",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "color": {
                              "description": "Color HEX code ",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/stages/list": {
      "get": {
        "tags": [
          "Project stages"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "fullname": {
                                "description": "Full name",
                                "type": "string"
                              },
                              "project_type_id": {
                                "description": "Project type id",
                                "type": "integer"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "color_class": {
                                "description": "Color class",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "project_id": {
                                "description": "Project id",
                                "type": "integer"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              },
                              "color": {
                                "description": "Color HEX code ",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/stage_checkitems/create": {
      "post": {
        "tags": [
          "Stage milestone"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "stage_id": {
                    "description": "Stage id",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "report": {
                    "description": "Milestone report",
                    "type": "string"
                  },
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "checked": {
                    "description": "Checked (Default- 0): <li>1-Check</li> <li> 0 - Uncheck</li>",
                    "type": "boolean"
                  },
                  "from_checkitem_id": {
                    "description": "From milestone id",
                    "type": "integer"
                  },
                  "enddate": {
                    "description": "End date",
                    "type": "string"
                  },
                  "responsible_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/stage_checkitems/update/{id}": {
      "post": {
        "tags": [
          "Stage milestone"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "stage_id": {
                    "description": "Stage id",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "report": {
                    "description": "Milestone report",
                    "type": "string"
                  },
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "checked": {
                    "description": "Checked (Default- 0): <li>1-Check</li> <li> 0 - Uncheck</li>",
                    "type": "boolean"
                  },
                  "from_checkitem_id": {
                    "description": "From milestone id",
                    "type": "integer"
                  },
                  "enddate": {
                    "description": "End date",
                    "type": "string"
                  },
                  "responsible_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "stage_id": {
                              "description": "Stage id",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "report": {
                              "description": "Milestone report",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "checked": {
                              "description": "Checked (Default- 0): <li>1-Check</li> <li> 0 - Uncheck</li>",
                              "type": "boolean"
                            },
                            "from_checkitem_id": {
                              "description": "From milestone id",
                              "type": "integer"
                            },
                            "enddate": {
                              "description": "End date",
                              "type": "string"
                            },
                            "responsible_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/stage_checkitems/delete/{id}": {
      "get": {
        "tags": [
          "Stage milestone"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/stage_checkitems/get/{id}": {
      "get": {
        "tags": [
          "Stage milestone"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "stage_id": {
                              "description": "Stage id",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "report": {
                              "description": "Milestone report",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "checked": {
                              "description": "Checked (Default- 0): <li>1-Check</li> <li> 0 - Uncheck</li>",
                              "type": "boolean"
                            },
                            "from_checkitem_id": {
                              "description": "From milestone id",
                              "type": "integer"
                            },
                            "enddate": {
                              "description": "End date",
                              "type": "string"
                            },
                            "responsible_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/stage_checkitems/list": {
      "get": {
        "tags": [
          "Stage milestone"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "stage_id": {
                                "description": "Stage id",
                                "type": "integer"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "report": {
                                "description": "Milestone report",
                                "type": "string"
                              },
                              "project_id": {
                                "description": "Project id",
                                "type": "integer"
                              },
                              "checked": {
                                "description": "Checked (Default- 0): <li>1-Check</li> <li> 0 - Uncheck</li>",
                                "type": "boolean"
                              },
                              "from_checkitem_id": {
                                "description": "From milestone id",
                                "type": "integer"
                              },
                              "enddate": {
                                "description": "End date",
                                "type": "string"
                              },
                              "responsible_id": {
                                "description": "Assigned user id",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/project_money_stage/create": {
      "post": {
        "tags": [
          "Estimated Revenue"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "status_paid": {
                    "description": "Status paid",
                    "type": "integer"
                  },
                  "paid_date": {
                    "description": "Payment creation date",
                    "type": "string"
                  },
                  "plan_paid_date": {
                    "description": "Planned payment date",
                    "type": "string"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "category_id": {
                    "description": "Category id",
                    "type": "integer"
                  },
                  "manager_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "project_stage_id": {
                    "description": "Project stage id",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "org_account_id": {
                    "description": "Organization account id",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "crm_company_id": {
                    "description": "CRM company id",
                    "type": "integer"
                  },
                  "invoice_id": {
                    "description": "Invoice ID",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/project_money_stage/update/{id}": {
      "post": {
        "tags": [
          "Estimated Revenue"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "status_paid": {
                    "description": "Status paid",
                    "type": "integer"
                  },
                  "paid_date": {
                    "description": "Payment creation date",
                    "type": "string"
                  },
                  "plan_paid_date": {
                    "description": "Planned payment date",
                    "type": "string"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "category_id": {
                    "description": "Category id",
                    "type": "integer"
                  },
                  "manager_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "project_stage_id": {
                    "description": "Project stage id",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "org_account_id": {
                    "description": "Organization account id",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "crm_company_id": {
                    "description": "CRM company id",
                    "type": "integer"
                  },
                  "invoice_id": {
                    "description": "Invoice ID",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "status_paid": {
                              "description": "Status paid",
                              "type": "integer"
                            },
                            "paid_date": {
                              "description": "Payment creation date",
                              "type": "string"
                            },
                            "plan_paid_date": {
                              "description": "Planned payment date",
                              "type": "string"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "category_id": {
                              "description": "Category id",
                              "type": "integer"
                            },
                            "manager_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "project_stage_id": {
                              "description": "Project stage id",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "org_account_id": {
                              "description": "Organization account id",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "crm_company_id": {
                              "description": "CRM company id",
                              "type": "integer"
                            },
                            "invoice_id": {
                              "description": "Invoice ID",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/project_money_stage/delete/{id}": {
      "get": {
        "tags": [
          "Estimated Revenue"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/project_money_stage/get/{id}": {
      "get": {
        "tags": [
          "Estimated Revenue"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "status_paid": {
                              "description": "Status paid",
                              "type": "integer"
                            },
                            "paid_date": {
                              "description": "Payment creation date",
                              "type": "string"
                            },
                            "plan_paid_date": {
                              "description": "Planned payment date",
                              "type": "string"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "category_id": {
                              "description": "Category id",
                              "type": "integer"
                            },
                            "manager_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "project_stage_id": {
                              "description": "Project stage id",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "org_account_id": {
                              "description": "Organization account id",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "crm_company_id": {
                              "description": "CRM company id",
                              "type": "integer"
                            },
                            "invoice_id": {
                              "description": "Invoice ID",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/project_money_stage/list": {
      "get": {
        "tags": [
          "Estimated Revenue"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "project_id": {
                                "description": "Project id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "total": {
                                "description": "Total",
                                "type": "number"
                              },
                              "status_paid": {
                                "description": "Status paid",
                                "type": "integer"
                              },
                              "paid_date": {
                                "description": "Payment creation date",
                                "type": "string"
                              },
                              "plan_paid_date": {
                                "description": "Planned payment date",
                                "type": "string"
                              },
                              "org_id": {
                                "description": "Organization id",
                                "type": "integer"
                              },
                              "category_id": {
                                "description": "Category id",
                                "type": "integer"
                              },
                              "manager_id": {
                                "description": "Assigned user id",
                                "type": "integer"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "project_stage_id": {
                                "description": "Project stage id",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "org_account_id": {
                                "description": "Organization account id",
                                "type": "integer"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "crm_company_id": {
                                "description": "CRM company id",
                                "type": "integer"
                              },
                              "invoice_id": {
                                "description": "Invoice ID",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/project_expense/create": {
      "post": {
        "tags": [
          "Estimated Expenses"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "status_paid": {
                    "description": "Paid status",
                    "type": "integer"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "category_id": {
                    "description": "Category id",
                    "type": "integer"
                  },
                  "manager_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "project_stage_id": {
                    "description": "Stage id",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "org_account_id": {
                    "description": "Organization account id",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "crm_company_id": {
                    "description": "CRM company id",
                    "type": "integer"
                  },
                  "date": {
                    "description": "Date",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/project_expense/update/{id}": {
      "post": {
        "tags": [
          "Estimated Expenses"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "status_paid": {
                    "description": "Paid status",
                    "type": "integer"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "category_id": {
                    "description": "Category id",
                    "type": "integer"
                  },
                  "manager_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "project_stage_id": {
                    "description": "Stage id",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "org_account_id": {
                    "description": "Organization account id",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "crm_company_id": {
                    "description": "CRM company id",
                    "type": "integer"
                  },
                  "date": {
                    "description": "Date",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "status_paid": {
                              "description": "Paid status",
                              "type": "integer"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "category_id": {
                              "description": "Category id",
                              "type": "integer"
                            },
                            "manager_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "project_stage_id": {
                              "description": "Stage id",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "org_account_id": {
                              "description": "Organization account id",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "crm_company_id": {
                              "description": "CRM company id",
                              "type": "integer"
                            },
                            "date": {
                              "description": "Date",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/project_expense/delete/{id}": {
      "get": {
        "tags": [
          "Estimated Expenses"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/project_expense/get/{id}": {
      "get": {
        "tags": [
          "Estimated Expenses"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "status_paid": {
                              "description": "Paid status",
                              "type": "integer"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "category_id": {
                              "description": "Category id",
                              "type": "integer"
                            },
                            "manager_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "project_stage_id": {
                              "description": "Stage id",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "org_account_id": {
                              "description": "Organization account id",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "crm_company_id": {
                              "description": "CRM company id",
                              "type": "integer"
                            },
                            "date": {
                              "description": "Date",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/st/project_expense/list": {
      "get": {
        "tags": [
          "Estimated Expenses"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "project_id": {
                                "description": "Project id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "total": {
                                "description": "Total",
                                "type": "number"
                              },
                              "status_paid": {
                                "description": "Paid status",
                                "type": "integer"
                              },
                              "org_id": {
                                "description": "Organization id",
                                "type": "integer"
                              },
                              "category_id": {
                                "description": "Category id",
                                "type": "integer"
                              },
                              "manager_id": {
                                "description": "Assigned user id",
                                "type": "integer"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "project_stage_id": {
                                "description": "Stage id",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "org_account_id": {
                                "description": "Organization account id",
                                "type": "integer"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "crm_company_id": {
                                "description": "CRM company id",
                                "type": "integer"
                              },
                              "date": {
                                "description": "Date",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/organization/create": {
      "post": {
        "tags": [
          "Organization"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "legal_name": {
                    "description": "Organization legal name",
                    "type": "string"
                  },
                  "contact_person": {
                    "description": "First person",
                    "type": "string"
                  },
                  "contact_person_position": {
                    "description": "First contact position",
                    "type": "string"
                  },
                  "show_add_sign_string": {
                    "description": "Show additional sigh string",
                    "type": "boolean"
                  },
                  "contact_person2": {
                    "description": "Secont contact",
                    "type": "string"
                  },
                  "contact_person2_position": {
                    "description": "Second contact position",
                    "type": "string"
                  },
                  "address1_address": {
                    "description": "First Address ",
                    "type": "string"
                  },
                  "address1_city": {
                    "description": "First Address city",
                    "type": "string"
                  },
                  "address1_state": {
                    "description": "First Address state",
                    "type": "string"
                  },
                  "address1_zip": {
                    "description": "First Address ZIP",
                    "type": "string"
                  },
                  "address1_country_id": {
                    "description": "First Address country id",
                    "type": "integer"
                  },
                  "address2_address": {
                    "description": "Second address",
                    "type": "string"
                  },
                  "address2_city": {
                    "description": "Second address city",
                    "type": "string"
                  },
                  "address2_state": {
                    "description": "Second address state",
                    "type": "string"
                  },
                  "address2_zip": {
                    "description": "Second address ZIP",
                    "type": "string"
                  },
                  "address2_country_id": {
                    "description": "Second country id",
                    "type": "integer"
                  },
                  "company_web": {
                    "description": "Company web",
                    "type": "string"
                  },
                  "company_email": {
                    "description": "Company email",
                    "type": "string"
                  },
                  "company_phone": {
                    "description": "Phone",
                    "type": "string"
                  },
                  "company_phone2": {
                    "description": "Company second phone",
                    "type": "string"
                  },
                  "company_mobile": {
                    "description": "Company mobile",
                    "type": "string"
                  },
                  "company_fax": {
                    "description": "Company fax",
                    "type": "string"
                  },
                  "vat": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "vat2": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "tax1": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax1_included": {
                    "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax2": {
                    "description": "Tax 2 (%)",
                    "type": "number"
                  },
                  "tax2_included": {
                    "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "invoice_enabled": {
                    "description": "Invoice enabled",
                    "type": "boolean"
                  },
                  "invoice_logo": {
                    "description": "Invoice logo",
                    "type": "integer"
                  },
                  "invoice_print_sign": {
                    "description": "invoice print sign",
                    "type": "integer"
                  },
                  "invoice_color": {
                    "description": "Invoice color",
                    "type": "string"
                  },
                  "invoice_prefix": {
                    "description": "Invoice prefix",
                    "type": "string"
                  },
                  "act_prefix": {
                    "description": "Act prefix",
                    "type": "string"
                  },
                  "estimate_prefix": {
                    "description": "Estimate prefix",
                    "type": "string"
                  },
                  "estimate_start_number": {
                    "description": "Estimate start number",
                    "type": "integer"
                  },
                  "invoice_due": {
                    "description": "invoice due",
                    "type": "integer"
                  },
                  "invoice_start_number": {
                    "description": "Invoice start number",
                    "type": "integer"
                  },
                  "act_start_number": {
                    "description": "CONFIG.M.FIN.ORGANIZATION.ACT_START_NUMBER.DESC",
                    "type": "integer"
                  },
                  "invoice_show_taxes": {
                    "description": "Invoice show taxes",
                    "type": "boolean"
                  },
                  "invoice_footer": {
                    "description": "Invoice footer",
                    "type": "string"
                  },
                  "invoice_terms": {
                    "description": "Invoice terms",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "comment": {
                    "description": "Comment",
                    "type": "string"
                  },
                  "default_organization": {
                    "description": "Default organization: <li>1 - Yes<li></li>0 - No <li></li>",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/organization/update/{id}": {
      "post": {
        "tags": [
          "Organization"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "legal_name": {
                    "description": "Organization legal name",
                    "type": "string"
                  },
                  "contact_person": {
                    "description": "First person",
                    "type": "string"
                  },
                  "contact_person_position": {
                    "description": "First contact position",
                    "type": "string"
                  },
                  "show_add_sign_string": {
                    "description": "Show additional sigh string",
                    "type": "boolean"
                  },
                  "contact_person2": {
                    "description": "Secont contact",
                    "type": "string"
                  },
                  "contact_person2_position": {
                    "description": "Second contact position",
                    "type": "string"
                  },
                  "address1_address": {
                    "description": "First Address ",
                    "type": "string"
                  },
                  "address1_city": {
                    "description": "First Address city",
                    "type": "string"
                  },
                  "address1_state": {
                    "description": "First Address state",
                    "type": "string"
                  },
                  "address1_zip": {
                    "description": "First Address ZIP",
                    "type": "string"
                  },
                  "address1_country_id": {
                    "description": "First Address country id",
                    "type": "integer"
                  },
                  "address2_address": {
                    "description": "Second address",
                    "type": "string"
                  },
                  "address2_city": {
                    "description": "Second address city",
                    "type": "string"
                  },
                  "address2_state": {
                    "description": "Second address state",
                    "type": "string"
                  },
                  "address2_zip": {
                    "description": "Second address ZIP",
                    "type": "string"
                  },
                  "address2_country_id": {
                    "description": "Second country id",
                    "type": "integer"
                  },
                  "company_web": {
                    "description": "Company web",
                    "type": "string"
                  },
                  "company_email": {
                    "description": "Company email",
                    "type": "string"
                  },
                  "company_phone": {
                    "description": "Phone",
                    "type": "string"
                  },
                  "company_phone2": {
                    "description": "Company second phone",
                    "type": "string"
                  },
                  "company_mobile": {
                    "description": "Company mobile",
                    "type": "string"
                  },
                  "company_fax": {
                    "description": "Company fax",
                    "type": "string"
                  },
                  "vat": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "vat2": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "tax1": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax1_included": {
                    "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax2": {
                    "description": "Tax 2 (%)",
                    "type": "number"
                  },
                  "tax2_included": {
                    "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "invoice_enabled": {
                    "description": "Invoice enabled",
                    "type": "boolean"
                  },
                  "invoice_logo": {
                    "description": "Invoice logo",
                    "type": "integer"
                  },
                  "invoice_print_sign": {
                    "description": "invoice print sign",
                    "type": "integer"
                  },
                  "invoice_color": {
                    "description": "Invoice color",
                    "type": "string"
                  },
                  "invoice_prefix": {
                    "description": "Invoice prefix",
                    "type": "string"
                  },
                  "act_prefix": {
                    "description": "Act prefix",
                    "type": "string"
                  },
                  "estimate_prefix": {
                    "description": "Estimate prefix",
                    "type": "string"
                  },
                  "estimate_start_number": {
                    "description": "Estimate start number",
                    "type": "integer"
                  },
                  "invoice_due": {
                    "description": "invoice due",
                    "type": "integer"
                  },
                  "invoice_start_number": {
                    "description": "Invoice start number",
                    "type": "integer"
                  },
                  "act_start_number": {
                    "description": "CONFIG.M.FIN.ORGANIZATION.ACT_START_NUMBER.DESC",
                    "type": "integer"
                  },
                  "invoice_show_taxes": {
                    "description": "Invoice show taxes",
                    "type": "boolean"
                  },
                  "invoice_footer": {
                    "description": "Invoice footer",
                    "type": "string"
                  },
                  "invoice_terms": {
                    "description": "Invoice terms",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "comment": {
                    "description": "Comment",
                    "type": "string"
                  },
                  "default_organization": {
                    "description": "Default organization: <li>1 - Yes<li></li>0 - No <li></li>",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "legal_name": {
                              "description": "Organization legal name",
                              "type": "string"
                            },
                            "contact_person": {
                              "description": "First person",
                              "type": "string"
                            },
                            "contact_person_position": {
                              "description": "First contact position",
                              "type": "string"
                            },
                            "show_add_sign_string": {
                              "description": "Show additional sigh string",
                              "type": "boolean"
                            },
                            "contact_person2": {
                              "description": "Secont contact",
                              "type": "string"
                            },
                            "contact_person2_position": {
                              "description": "Second contact position",
                              "type": "string"
                            },
                            "address1_address": {
                              "description": "First Address ",
                              "type": "string"
                            },
                            "address1_city": {
                              "description": "First Address city",
                              "type": "string"
                            },
                            "address1_state": {
                              "description": "First Address state",
                              "type": "string"
                            },
                            "address1_zip": {
                              "description": "First Address ZIP",
                              "type": "string"
                            },
                            "address1_country_id": {
                              "description": "First Address country id",
                              "type": "integer"
                            },
                            "address2_address": {
                              "description": "Second address",
                              "type": "string"
                            },
                            "address2_city": {
                              "description": "Second address city",
                              "type": "string"
                            },
                            "address2_state": {
                              "description": "Second address state",
                              "type": "string"
                            },
                            "address2_zip": {
                              "description": "Second address ZIP",
                              "type": "string"
                            },
                            "address2_country_id": {
                              "description": "Second country id",
                              "type": "integer"
                            },
                            "company_web": {
                              "description": "Company web",
                              "type": "string"
                            },
                            "company_email": {
                              "description": "Company email",
                              "type": "string"
                            },
                            "company_phone": {
                              "description": "Phone",
                              "type": "string"
                            },
                            "company_phone2": {
                              "description": "Company second phone",
                              "type": "string"
                            },
                            "company_mobile": {
                              "description": "Company mobile",
                              "type": "string"
                            },
                            "company_fax": {
                              "description": "Company fax",
                              "type": "string"
                            },
                            "vat": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "vat2": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "tax1": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax1_included": {
                              "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax2": {
                              "description": "Tax 2 (%)",
                              "type": "number"
                            },
                            "tax2_included": {
                              "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "invoice_enabled": {
                              "description": "Invoice enabled",
                              "type": "boolean"
                            },
                            "invoice_logo": {
                              "description": "Invoice logo",
                              "type": "integer"
                            },
                            "invoice_print_sign": {
                              "description": "invoice print sign",
                              "type": "integer"
                            },
                            "invoice_color": {
                              "description": "Invoice color",
                              "type": "string"
                            },
                            "invoice_prefix": {
                              "description": "Invoice prefix",
                              "type": "string"
                            },
                            "act_prefix": {
                              "description": "Act prefix",
                              "type": "string"
                            },
                            "estimate_prefix": {
                              "description": "Estimate prefix",
                              "type": "string"
                            },
                            "estimate_start_number": {
                              "description": "Estimate start number",
                              "type": "integer"
                            },
                            "invoice_due": {
                              "description": "invoice due",
                              "type": "integer"
                            },
                            "invoice_start_number": {
                              "description": "Invoice start number",
                              "type": "integer"
                            },
                            "act_start_number": {
                              "description": "CONFIG.M.FIN.ORGANIZATION.ACT_START_NUMBER.DESC",
                              "type": "integer"
                            },
                            "invoice_show_taxes": {
                              "description": "Invoice show taxes",
                              "type": "boolean"
                            },
                            "invoice_footer": {
                              "description": "Invoice footer",
                              "type": "string"
                            },
                            "invoice_terms": {
                              "description": "Invoice terms",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "comment": {
                              "description": "Comment",
                              "type": "string"
                            },
                            "default_organization": {
                              "description": "Default organization: <li>1 - Yes<li></li>0 - No <li></li>",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/organization/delete/{id}": {
      "get": {
        "tags": [
          "Organization"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/organization/get/{id}": {
      "get": {
        "tags": [
          "Organization"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "legal_name": {
                              "description": "Organization legal name",
                              "type": "string"
                            },
                            "contact_person": {
                              "description": "First person",
                              "type": "string"
                            },
                            "contact_person_position": {
                              "description": "First contact position",
                              "type": "string"
                            },
                            "show_add_sign_string": {
                              "description": "Show additional sigh string",
                              "type": "boolean"
                            },
                            "contact_person2": {
                              "description": "Secont contact",
                              "type": "string"
                            },
                            "contact_person2_position": {
                              "description": "Second contact position",
                              "type": "string"
                            },
                            "address1_address": {
                              "description": "First Address ",
                              "type": "string"
                            },
                            "address1_city": {
                              "description": "First Address city",
                              "type": "string"
                            },
                            "address1_state": {
                              "description": "First Address state",
                              "type": "string"
                            },
                            "address1_zip": {
                              "description": "First Address ZIP",
                              "type": "string"
                            },
                            "address1_country_id": {
                              "description": "First Address country id",
                              "type": "integer"
                            },
                            "address2_address": {
                              "description": "Second address",
                              "type": "string"
                            },
                            "address2_city": {
                              "description": "Second address city",
                              "type": "string"
                            },
                            "address2_state": {
                              "description": "Second address state",
                              "type": "string"
                            },
                            "address2_zip": {
                              "description": "Second address ZIP",
                              "type": "string"
                            },
                            "address2_country_id": {
                              "description": "Second country id",
                              "type": "integer"
                            },
                            "company_web": {
                              "description": "Company web",
                              "type": "string"
                            },
                            "company_email": {
                              "description": "Company email",
                              "type": "string"
                            },
                            "company_phone": {
                              "description": "Phone",
                              "type": "string"
                            },
                            "company_phone2": {
                              "description": "Company second phone",
                              "type": "string"
                            },
                            "company_mobile": {
                              "description": "Company mobile",
                              "type": "string"
                            },
                            "company_fax": {
                              "description": "Company fax",
                              "type": "string"
                            },
                            "vat": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "vat2": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "tax1": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax1_included": {
                              "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax2": {
                              "description": "Tax 2 (%)",
                              "type": "number"
                            },
                            "tax2_included": {
                              "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "invoice_enabled": {
                              "description": "Invoice enabled",
                              "type": "boolean"
                            },
                            "invoice_logo": {
                              "description": "Invoice logo",
                              "type": "integer"
                            },
                            "invoice_print_sign": {
                              "description": "invoice print sign",
                              "type": "integer"
                            },
                            "invoice_color": {
                              "description": "Invoice color",
                              "type": "string"
                            },
                            "invoice_prefix": {
                              "description": "Invoice prefix",
                              "type": "string"
                            },
                            "act_prefix": {
                              "description": "Act prefix",
                              "type": "string"
                            },
                            "estimate_prefix": {
                              "description": "Estimate prefix",
                              "type": "string"
                            },
                            "estimate_start_number": {
                              "description": "Estimate start number",
                              "type": "integer"
                            },
                            "invoice_due": {
                              "description": "invoice due",
                              "type": "integer"
                            },
                            "invoice_start_number": {
                              "description": "Invoice start number",
                              "type": "integer"
                            },
                            "act_start_number": {
                              "description": "CONFIG.M.FIN.ORGANIZATION.ACT_START_NUMBER.DESC",
                              "type": "integer"
                            },
                            "invoice_show_taxes": {
                              "description": "Invoice show taxes",
                              "type": "boolean"
                            },
                            "invoice_footer": {
                              "description": "Invoice footer",
                              "type": "string"
                            },
                            "invoice_terms": {
                              "description": "Invoice terms",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "comment": {
                              "description": "Comment",
                              "type": "string"
                            },
                            "default_organization": {
                              "description": "Default organization: <li>1 - Yes<li></li>0 - No <li></li>",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/organization/list": {
      "get": {
        "tags": [
          "Organization"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "legal_name": {
                                "description": "Organization legal name",
                                "type": "string"
                              },
                              "contact_person": {
                                "description": "First person",
                                "type": "string"
                              },
                              "contact_person_position": {
                                "description": "First contact position",
                                "type": "string"
                              },
                              "show_add_sign_string": {
                                "description": "Show additional sigh string",
                                "type": "boolean"
                              },
                              "contact_person2": {
                                "description": "Secont contact",
                                "type": "string"
                              },
                              "contact_person2_position": {
                                "description": "Second contact position",
                                "type": "string"
                              },
                              "address1_address": {
                                "description": "First Address ",
                                "type": "string"
                              },
                              "address1_city": {
                                "description": "First Address city",
                                "type": "string"
                              },
                              "address1_state": {
                                "description": "First Address state",
                                "type": "string"
                              },
                              "address1_zip": {
                                "description": "First Address ZIP",
                                "type": "string"
                              },
                              "address1_country_id": {
                                "description": "First Address country id",
                                "type": "integer"
                              },
                              "address2_address": {
                                "description": "Second address",
                                "type": "string"
                              },
                              "address2_city": {
                                "description": "Second address city",
                                "type": "string"
                              },
                              "address2_state": {
                                "description": "Second address state",
                                "type": "string"
                              },
                              "address2_zip": {
                                "description": "Second address ZIP",
                                "type": "string"
                              },
                              "address2_country_id": {
                                "description": "Second country id",
                                "type": "integer"
                              },
                              "company_web": {
                                "description": "Company web",
                                "type": "string"
                              },
                              "company_email": {
                                "description": "Company email",
                                "type": "string"
                              },
                              "company_phone": {
                                "description": "Phone",
                                "type": "string"
                              },
                              "company_phone2": {
                                "description": "Company second phone",
                                "type": "string"
                              },
                              "company_mobile": {
                                "description": "Company mobile",
                                "type": "string"
                              },
                              "company_fax": {
                                "description": "Company fax",
                                "type": "string"
                              },
                              "vat": {
                                "description": "Additional Account VAT (or TAX ID)",
                                "type": "string"
                              },
                              "vat2": {
                                "description": "Additional Account VAT (or TAX ID)",
                                "type": "string"
                              },
                              "tax1": {
                                "description": "Tax 1 (%)",
                                "type": "number"
                              },
                              "tax1_included": {
                                "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                                "type": "boolean"
                              },
                              "tax2": {
                                "description": "Tax 2 (%)",
                                "type": "number"
                              },
                              "tax2_included": {
                                "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                                "type": "boolean"
                              },
                              "invoice_enabled": {
                                "description": "Invoice enabled",
                                "type": "boolean"
                              },
                              "invoice_logo": {
                                "description": "Invoice logo",
                                "type": "integer"
                              },
                              "invoice_print_sign": {
                                "description": "invoice print sign",
                                "type": "integer"
                              },
                              "invoice_color": {
                                "description": "Invoice color",
                                "type": "string"
                              },
                              "invoice_prefix": {
                                "description": "Invoice prefix",
                                "type": "string"
                              },
                              "act_prefix": {
                                "description": "Act prefix",
                                "type": "string"
                              },
                              "estimate_prefix": {
                                "description": "Estimate prefix",
                                "type": "string"
                              },
                              "estimate_start_number": {
                                "description": "Estimate start number",
                                "type": "integer"
                              },
                              "invoice_due": {
                                "description": "invoice due",
                                "type": "integer"
                              },
                              "invoice_start_number": {
                                "description": "Invoice start number",
                                "type": "integer"
                              },
                              "act_start_number": {
                                "description": "CONFIG.M.FIN.ORGANIZATION.ACT_START_NUMBER.DESC",
                                "type": "integer"
                              },
                              "invoice_show_taxes": {
                                "description": "Invoice show taxes",
                                "type": "boolean"
                              },
                              "invoice_footer": {
                                "description": "Invoice footer",
                                "type": "string"
                              },
                              "invoice_terms": {
                                "description": "Invoice terms",
                                "type": "string"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "integer"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "comment": {
                                "description": "Comment",
                                "type": "string"
                              },
                              "default_organization": {
                                "description": "Default organization: <li>1 - Yes<li></li>0 - No <li></li>",
                                "type": "integer"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/invoice/create": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "invoice_number": {
                    "description": "Invoice number",
                    "type": "integer"
                  },
                  "invoice_number_print": {
                    "description": "Invoice print number",
                    "type": "string"
                  },
                  "assignee_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "customer_name": {
                    "description": "Customer name",
                    "type": "string"
                  },
                  "customer_legal_name": {
                    "description": "Customer legal name ",
                    "type": "string"
                  },
                  "contact_person": {
                    "description": "Contact",
                    "type": "string"
                  },
                  "contact_person_position": {
                    "description": "Contact person position",
                    "type": "string"
                  },
                  "show_add_sign_string": {
                    "description": "Show additional sigh string",
                    "type": "boolean"
                  },
                  "contact_person2": {
                    "description": "Secont contact",
                    "type": "string"
                  },
                  "contact_person2_position": {
                    "description": "Second contact position",
                    "type": "string"
                  },
                  "invoice_date": {
                    "description": "Invoice date",
                    "type": "string"
                  },
                  "due_date": {
                    "description": "Due date",
                    "type": "string"
                  },
                  "status_id": {
                    "description": "Status id:<li>5 - Empty</li><li>10 - New</li><li>12 - Need aproove</li><li>13 - Approved</li><li>20 - Partially Paid </li><li>30 - Overpaid</li><li>40 - Paid</li>",
                    "type": "integer"
                  },
                  "template_id": {
                    "description": "Invoice template id",
                    "type": "integer"
                  },
                  "currency_id": {
                    "description": "Currency symbol",
                    "type": "integer"
                  },
                  "currency_code": {
                    "description": "Currency code",
                    "type": "string"
                  },
                  "exchange_rate": {
                    "description": "Exchange rate",
                    "type": "number"
                  },
                  "sub_total": {
                    "description": "Sub total",
                    "type": "number"
                  },
                  "tax_total": {
                    "description": "Tax total",
                    "type": "number"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "shipping_charge": {
                    "description": "Shipping charge",
                    "type": "number"
                  },
                  "adjustment": {
                    "description": "Adjustment",
                    "type": "number"
                  },
                  "adjustment_description": {
                    "description": "Adjustment description",
                    "type": "string"
                  },
                  "discount": {
                    "description": "Discount",
                    "type": "number"
                  },
                  "discount_before_tax": {
                    "description": "Discount before tax",
                    "type": "boolean"
                  },
                  "is_invoice_emailed": {
                    "description": "Email status.<li> 1 - Sended</li><li>0 - Not sended</li>",
                    "type": "boolean"
                  },
                  "invoice_emailed_date": {
                    "description": "Invoice emailed date",
                    "type": "string"
                  },
                  "is_reminder_sent": {
                    "description": "Remainder sent",
                    "type": "boolean"
                  },
                  "reminders_sent_date": {
                    "description": "Sent date",
                    "type": "string"
                  },
                  "payment_options": {
                    "description": "Payment options",
                    "type": "string"
                  },
                  "invoice_footer_text": {
                    "description": "Custom Note",
                    "type": "string"
                  },
                  "invoice_terms_text": {
                    "description": "CONFIG.M.FIN.INVOICE.INVOICE_TERMS_TEXT.DESCTerms and Conditions",
                    "type": "string"
                  },
                  "bill_from_address": {
                    "description": "Bill from address",
                    "type": "string"
                  },
                  "bill_from_city": {
                    "description": "Bill from city",
                    "type": "string"
                  },
                  "bill_from_state": {
                    "description": "Bill from state",
                    "type": "string"
                  },
                  "bill_from_zip": {
                    "description": "Bill from zip",
                    "type": "string"
                  },
                  "bill_from_country_id": {
                    "description": "Bill from country",
                    "type": "integer"
                  },
                  "bill_to_address": {
                    "description": "Address",
                    "type": "string"
                  },
                  "bill_to_city": {
                    "description": "Bill to city",
                    "type": "string"
                  },
                  "bill_to_state": {
                    "description": "Bill to state",
                    "type": "string"
                  },
                  "bill_to_zip": {
                    "description": "Bill to ZIP",
                    "type": "string"
                  },
                  "bill_to_country_id": {
                    "description": "Country ID",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "module": {
                    "description": "Module",
                    "type": "string"
                  },
                  "model": {
                    "description": "Model",
                    "type": "string"
                  },
                  "model_id": {
                    "description": "Model id",
                    "type": "integer"
                  },
                  "group_id": {
                    "description": "Group id",
                    "type": "integer"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "company_phone": {
                    "description": "Phone",
                    "type": "string"
                  },
                  "company_phone2": {
                    "description": "Company second phone",
                    "type": "string"
                  },
                  "company_vat": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "company_vat2": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "org_phone": {
                    "description": "Organization phone",
                    "type": "string"
                  },
                  "org_phone2": {
                    "description": "Organization phone",
                    "type": "string"
                  },
                  "org_vat": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "org_vat2": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "tax1": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax2": {
                    "description": "Tax 2 (%)",
                    "type": "number"
                  },
                  "tax1_included": {
                    "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax2_included": {
                    "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "is_discount_percent": {
                    "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                    "type": "boolean"
                  },
                  "customer_id": {
                    "description": "Customer id",
                    "type": "integer"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  },
                  "type": {
                    "description": "Invoice type",
                    "type": "integer"
                  },
                  "is_template": {
                    "description": "Is template: <li>1 - Yes</li><li>0 - No</li>",
                    "type": "boolean"
                  },
                  "template_name": {
                    "description": "Template name",
                    "type": "string"
                  },
                  "pricelist_id": {
                    "description": "Price list id",
                    "type": "integer"
                  },
                  "bank_id": {
                    "description": "Bank id",
                    "type": "integer"
                  },
                  "bank": {
                    "description": "Bank name",
                    "type": "string"
                  },
                  "paymethod_id": {
                    "description": "Paymethod id ",
                    "type": "integer"
                  },
                  "estimate_id": {
                    "description": "Estimate id",
                    "type": "integer"
                  },
                  "exported_1c": {
                    "description": "Exported 1C",
                    "type": "boolean"
                  },
                  "reference": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "paid_date": {
                    "description": "Paid date",
                    "type": "string"
                  },
                  "recurring_invoice_id": {
                    "description": "Recurring invoice id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/invoice/update/{id}": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "invoice_number": {
                    "description": "Invoice number",
                    "type": "integer"
                  },
                  "invoice_number_print": {
                    "description": "Invoice print number",
                    "type": "string"
                  },
                  "assignee_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "customer_name": {
                    "description": "Customer name",
                    "type": "string"
                  },
                  "customer_legal_name": {
                    "description": "Customer legal name ",
                    "type": "string"
                  },
                  "contact_person": {
                    "description": "Contact",
                    "type": "string"
                  },
                  "contact_person_position": {
                    "description": "Contact person position",
                    "type": "string"
                  },
                  "show_add_sign_string": {
                    "description": "Show additional sigh string",
                    "type": "boolean"
                  },
                  "contact_person2": {
                    "description": "Secont contact",
                    "type": "string"
                  },
                  "contact_person2_position": {
                    "description": "Second contact position",
                    "type": "string"
                  },
                  "invoice_date": {
                    "description": "Invoice date",
                    "type": "string"
                  },
                  "due_date": {
                    "description": "Due date",
                    "type": "string"
                  },
                  "status_id": {
                    "description": "Status id:<li>5 - Empty</li><li>10 - New</li><li>12 - Need aproove</li><li>13 - Approved</li><li>20 - Partially Paid </li><li>30 - Overpaid</li><li>40 - Paid</li>",
                    "type": "integer"
                  },
                  "template_id": {
                    "description": "Invoice template id",
                    "type": "integer"
                  },
                  "currency_id": {
                    "description": "Currency symbol",
                    "type": "integer"
                  },
                  "currency_code": {
                    "description": "Currency code",
                    "type": "string"
                  },
                  "exchange_rate": {
                    "description": "Exchange rate",
                    "type": "number"
                  },
                  "sub_total": {
                    "description": "Sub total",
                    "type": "number"
                  },
                  "tax_total": {
                    "description": "Tax total",
                    "type": "number"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "shipping_charge": {
                    "description": "Shipping charge",
                    "type": "number"
                  },
                  "adjustment": {
                    "description": "Adjustment",
                    "type": "number"
                  },
                  "adjustment_description": {
                    "description": "Adjustment description",
                    "type": "string"
                  },
                  "discount": {
                    "description": "Discount",
                    "type": "number"
                  },
                  "discount_before_tax": {
                    "description": "Discount before tax",
                    "type": "boolean"
                  },
                  "is_invoice_emailed": {
                    "description": "Email status.<li> 1 - Sended</li><li>0 - Not sended</li>",
                    "type": "boolean"
                  },
                  "invoice_emailed_date": {
                    "description": "Invoice emailed date",
                    "type": "string"
                  },
                  "is_reminder_sent": {
                    "description": "Remainder sent",
                    "type": "boolean"
                  },
                  "reminders_sent_date": {
                    "description": "Sent date",
                    "type": "string"
                  },
                  "payment_options": {
                    "description": "Payment options",
                    "type": "string"
                  },
                  "invoice_footer_text": {
                    "description": "Custom Note",
                    "type": "string"
                  },
                  "invoice_terms_text": {
                    "description": "CONFIG.M.FIN.INVOICE.INVOICE_TERMS_TEXT.DESCTerms and Conditions",
                    "type": "string"
                  },
                  "bill_from_address": {
                    "description": "Bill from address",
                    "type": "string"
                  },
                  "bill_from_city": {
                    "description": "Bill from city",
                    "type": "string"
                  },
                  "bill_from_state": {
                    "description": "Bill from state",
                    "type": "string"
                  },
                  "bill_from_zip": {
                    "description": "Bill from zip",
                    "type": "string"
                  },
                  "bill_from_country_id": {
                    "description": "Bill from country",
                    "type": "integer"
                  },
                  "bill_to_address": {
                    "description": "Address",
                    "type": "string"
                  },
                  "bill_to_city": {
                    "description": "Bill to city",
                    "type": "string"
                  },
                  "bill_to_state": {
                    "description": "Bill to state",
                    "type": "string"
                  },
                  "bill_to_zip": {
                    "description": "Bill to ZIP",
                    "type": "string"
                  },
                  "bill_to_country_id": {
                    "description": "Country ID",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "module": {
                    "description": "Module",
                    "type": "string"
                  },
                  "model": {
                    "description": "Model",
                    "type": "string"
                  },
                  "model_id": {
                    "description": "Model id",
                    "type": "integer"
                  },
                  "group_id": {
                    "description": "Group id",
                    "type": "integer"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "company_phone": {
                    "description": "Phone",
                    "type": "string"
                  },
                  "company_phone2": {
                    "description": "Company second phone",
                    "type": "string"
                  },
                  "company_vat": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "company_vat2": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "org_phone": {
                    "description": "Organization phone",
                    "type": "string"
                  },
                  "org_phone2": {
                    "description": "Organization phone",
                    "type": "string"
                  },
                  "org_vat": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "org_vat2": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "tax1": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax2": {
                    "description": "Tax 2 (%)",
                    "type": "number"
                  },
                  "tax1_included": {
                    "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax2_included": {
                    "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "is_discount_percent": {
                    "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                    "type": "boolean"
                  },
                  "customer_id": {
                    "description": "Customer id",
                    "type": "integer"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  },
                  "type": {
                    "description": "Invoice type",
                    "type": "integer"
                  },
                  "is_template": {
                    "description": "Is template: <li>1 - Yes</li><li>0 - No</li>",
                    "type": "boolean"
                  },
                  "template_name": {
                    "description": "Template name",
                    "type": "string"
                  },
                  "pricelist_id": {
                    "description": "Price list id",
                    "type": "integer"
                  },
                  "bank_id": {
                    "description": "Bank id",
                    "type": "integer"
                  },
                  "bank": {
                    "description": "Bank name",
                    "type": "string"
                  },
                  "paymethod_id": {
                    "description": "Paymethod id ",
                    "type": "integer"
                  },
                  "estimate_id": {
                    "description": "Estimate id",
                    "type": "integer"
                  },
                  "exported_1c": {
                    "description": "Exported 1C",
                    "type": "boolean"
                  },
                  "reference": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "paid_date": {
                    "description": "Paid date",
                    "type": "string"
                  },
                  "recurring_invoice_id": {
                    "description": "Recurring invoice id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "invoice_number": {
                              "description": "Invoice number",
                              "type": "integer"
                            },
                            "invoice_number_print": {
                              "description": "Invoice print number",
                              "type": "string"
                            },
                            "assignee_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "customer_name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "customer_legal_name": {
                              "description": "Customer legal name ",
                              "type": "string"
                            },
                            "contact_person": {
                              "description": "Contact",
                              "type": "string"
                            },
                            "contact_person_position": {
                              "description": "Contact person position",
                              "type": "string"
                            },
                            "show_add_sign_string": {
                              "description": "Show additional sigh string",
                              "type": "boolean"
                            },
                            "contact_person2": {
                              "description": "Secont contact",
                              "type": "string"
                            },
                            "contact_person2_position": {
                              "description": "Second contact position",
                              "type": "string"
                            },
                            "invoice_date": {
                              "description": "Invoice date",
                              "type": "string"
                            },
                            "due_date": {
                              "description": "Due date",
                              "type": "string"
                            },
                            "status_id": {
                              "description": "Status id:<li>5 - Empty</li><li>10 - New</li><li>12 - Need aproove</li><li>13 - Approved</li><li>20 - Partially Paid </li><li>30 - Overpaid</li><li>40 - Paid</li>",
                              "type": "integer"
                            },
                            "template_id": {
                              "description": "Invoice template id",
                              "type": "integer"
                            },
                            "currency_id": {
                              "description": "Currency symbol",
                              "type": "integer"
                            },
                            "currency_code": {
                              "description": "Currency code",
                              "type": "string"
                            },
                            "exchange_rate": {
                              "description": "Exchange rate",
                              "type": "number"
                            },
                            "sub_total": {
                              "description": "Sub total",
                              "type": "number"
                            },
                            "tax_total": {
                              "description": "Tax total",
                              "type": "number"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "shipping_charge": {
                              "description": "Shipping charge",
                              "type": "number"
                            },
                            "adjustment": {
                              "description": "Adjustment",
                              "type": "number"
                            },
                            "adjustment_description": {
                              "description": "Adjustment description",
                              "type": "string"
                            },
                            "discount": {
                              "description": "Discount",
                              "type": "number"
                            },
                            "discount_before_tax": {
                              "description": "Discount before tax",
                              "type": "boolean"
                            },
                            "is_invoice_emailed": {
                              "description": "Email status.<li> 1 - Sended</li><li>0 - Not sended</li>",
                              "type": "boolean"
                            },
                            "invoice_emailed_date": {
                              "description": "Invoice emailed date",
                              "type": "string"
                            },
                            "is_reminder_sent": {
                              "description": "Remainder sent",
                              "type": "boolean"
                            },
                            "reminders_sent_date": {
                              "description": "Sent date",
                              "type": "string"
                            },
                            "payment_options": {
                              "description": "Payment options",
                              "type": "string"
                            },
                            "invoice_footer_text": {
                              "description": "Custom Note",
                              "type": "string"
                            },
                            "invoice_terms_text": {
                              "description": "CONFIG.M.FIN.INVOICE.INVOICE_TERMS_TEXT.DESCTerms and Conditions",
                              "type": "string"
                            },
                            "bill_from_address": {
                              "description": "Bill from address",
                              "type": "string"
                            },
                            "bill_from_city": {
                              "description": "Bill from city",
                              "type": "string"
                            },
                            "bill_from_state": {
                              "description": "Bill from state",
                              "type": "string"
                            },
                            "bill_from_zip": {
                              "description": "Bill from zip",
                              "type": "string"
                            },
                            "bill_from_country_id": {
                              "description": "Bill from country",
                              "type": "integer"
                            },
                            "bill_to_address": {
                              "description": "Address",
                              "type": "string"
                            },
                            "bill_to_city": {
                              "description": "Bill to city",
                              "type": "string"
                            },
                            "bill_to_state": {
                              "description": "Bill to state",
                              "type": "string"
                            },
                            "bill_to_zip": {
                              "description": "Bill to ZIP",
                              "type": "string"
                            },
                            "bill_to_country_id": {
                              "description": "Country ID",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "module": {
                              "description": "Module",
                              "type": "string"
                            },
                            "model": {
                              "description": "Model",
                              "type": "string"
                            },
                            "model_id": {
                              "description": "Model id",
                              "type": "integer"
                            },
                            "group_id": {
                              "description": "Group id",
                              "type": "integer"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "company_phone": {
                              "description": "Phone",
                              "type": "string"
                            },
                            "company_phone2": {
                              "description": "Company second phone",
                              "type": "string"
                            },
                            "company_vat": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "company_vat2": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "org_phone": {
                              "description": "Organization phone",
                              "type": "string"
                            },
                            "org_phone2": {
                              "description": "Organization phone",
                              "type": "string"
                            },
                            "org_vat": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "org_vat2": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "tax1": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax2": {
                              "description": "Tax 2 (%)",
                              "type": "number"
                            },
                            "tax1_included": {
                              "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax2_included": {
                              "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "is_discount_percent": {
                              "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                              "type": "boolean"
                            },
                            "customer_id": {
                              "description": "Customer id",
                              "type": "integer"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            },
                            "type": {
                              "description": "Invoice type",
                              "type": "integer"
                            },
                            "is_template": {
                              "description": "Is template: <li>1 - Yes</li><li>0 - No</li>",
                              "type": "boolean"
                            },
                            "template_name": {
                              "description": "Template name",
                              "type": "string"
                            },
                            "pricelist_id": {
                              "description": "Price list id",
                              "type": "integer"
                            },
                            "bank_id": {
                              "description": "Bank id",
                              "type": "integer"
                            },
                            "bank": {
                              "description": "Bank name",
                              "type": "string"
                            },
                            "paymethod_id": {
                              "description": "Paymethod id ",
                              "type": "integer"
                            },
                            "estimate_id": {
                              "description": "Estimate id",
                              "type": "integer"
                            },
                            "exported_1c": {
                              "description": "Exported 1C",
                              "type": "boolean"
                            },
                            "reference": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "paid_date": {
                              "description": "Paid date",
                              "type": "string"
                            },
                            "recurring_invoice_id": {
                              "description": "Recurring invoice id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/invoice/delete/{id}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/invoice/get/{id}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "invoice_number": {
                              "description": "Invoice number",
                              "type": "integer"
                            },
                            "invoice_number_print": {
                              "description": "Invoice print number",
                              "type": "string"
                            },
                            "assignee_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "customer_name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "customer_legal_name": {
                              "description": "Customer legal name ",
                              "type": "string"
                            },
                            "contact_person": {
                              "description": "Contact",
                              "type": "string"
                            },
                            "contact_person_position": {
                              "description": "Contact person position",
                              "type": "string"
                            },
                            "show_add_sign_string": {
                              "description": "Show additional sigh string",
                              "type": "boolean"
                            },
                            "contact_person2": {
                              "description": "Secont contact",
                              "type": "string"
                            },
                            "contact_person2_position": {
                              "description": "Second contact position",
                              "type": "string"
                            },
                            "invoice_date": {
                              "description": "Invoice date",
                              "type": "string"
                            },
                            "due_date": {
                              "description": "Due date",
                              "type": "string"
                            },
                            "status_id": {
                              "description": "Status id:<li>5 - Empty</li><li>10 - New</li><li>12 - Need aproove</li><li>13 - Approved</li><li>20 - Partially Paid </li><li>30 - Overpaid</li><li>40 - Paid</li>",
                              "type": "integer"
                            },
                            "template_id": {
                              "description": "Invoice template id",
                              "type": "integer"
                            },
                            "currency_id": {
                              "description": "Currency symbol",
                              "type": "integer"
                            },
                            "currency_code": {
                              "description": "Currency code",
                              "type": "string"
                            },
                            "exchange_rate": {
                              "description": "Exchange rate",
                              "type": "number"
                            },
                            "sub_total": {
                              "description": "Sub total",
                              "type": "number"
                            },
                            "tax_total": {
                              "description": "Tax total",
                              "type": "number"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "shipping_charge": {
                              "description": "Shipping charge",
                              "type": "number"
                            },
                            "adjustment": {
                              "description": "Adjustment",
                              "type": "number"
                            },
                            "adjustment_description": {
                              "description": "Adjustment description",
                              "type": "string"
                            },
                            "discount": {
                              "description": "Discount",
                              "type": "number"
                            },
                            "discount_before_tax": {
                              "description": "Discount before tax",
                              "type": "boolean"
                            },
                            "is_invoice_emailed": {
                              "description": "Email status.<li> 1 - Sended</li><li>0 - Not sended</li>",
                              "type": "boolean"
                            },
                            "invoice_emailed_date": {
                              "description": "Invoice emailed date",
                              "type": "string"
                            },
                            "is_reminder_sent": {
                              "description": "Remainder sent",
                              "type": "boolean"
                            },
                            "reminders_sent_date": {
                              "description": "Sent date",
                              "type": "string"
                            },
                            "payment_options": {
                              "description": "Payment options",
                              "type": "string"
                            },
                            "invoice_footer_text": {
                              "description": "Custom Note",
                              "type": "string"
                            },
                            "invoice_terms_text": {
                              "description": "CONFIG.M.FIN.INVOICE.INVOICE_TERMS_TEXT.DESCTerms and Conditions",
                              "type": "string"
                            },
                            "bill_from_address": {
                              "description": "Bill from address",
                              "type": "string"
                            },
                            "bill_from_city": {
                              "description": "Bill from city",
                              "type": "string"
                            },
                            "bill_from_state": {
                              "description": "Bill from state",
                              "type": "string"
                            },
                            "bill_from_zip": {
                              "description": "Bill from zip",
                              "type": "string"
                            },
                            "bill_from_country_id": {
                              "description": "Bill from country",
                              "type": "integer"
                            },
                            "bill_to_address": {
                              "description": "Address",
                              "type": "string"
                            },
                            "bill_to_city": {
                              "description": "Bill to city",
                              "type": "string"
                            },
                            "bill_to_state": {
                              "description": "Bill to state",
                              "type": "string"
                            },
                            "bill_to_zip": {
                              "description": "Bill to ZIP",
                              "type": "string"
                            },
                            "bill_to_country_id": {
                              "description": "Country ID",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "module": {
                              "description": "Module",
                              "type": "string"
                            },
                            "model": {
                              "description": "Model",
                              "type": "string"
                            },
                            "model_id": {
                              "description": "Model id",
                              "type": "integer"
                            },
                            "group_id": {
                              "description": "Group id",
                              "type": "integer"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "company_phone": {
                              "description": "Phone",
                              "type": "string"
                            },
                            "company_phone2": {
                              "description": "Company second phone",
                              "type": "string"
                            },
                            "company_vat": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "company_vat2": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "org_phone": {
                              "description": "Organization phone",
                              "type": "string"
                            },
                            "org_phone2": {
                              "description": "Organization phone",
                              "type": "string"
                            },
                            "org_vat": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "org_vat2": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "tax1": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax2": {
                              "description": "Tax 2 (%)",
                              "type": "number"
                            },
                            "tax1_included": {
                              "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax2_included": {
                              "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "is_discount_percent": {
                              "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                              "type": "boolean"
                            },
                            "customer_id": {
                              "description": "Customer id",
                              "type": "integer"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            },
                            "type": {
                              "description": "Invoice type",
                              "type": "integer"
                            },
                            "is_template": {
                              "description": "Is template: <li>1 - Yes</li><li>0 - No</li>",
                              "type": "boolean"
                            },
                            "template_name": {
                              "description": "Template name",
                              "type": "string"
                            },
                            "pricelist_id": {
                              "description": "Price list id",
                              "type": "integer"
                            },
                            "bank_id": {
                              "description": "Bank id",
                              "type": "integer"
                            },
                            "bank": {
                              "description": "Bank name",
                              "type": "string"
                            },
                            "paymethod_id": {
                              "description": "Paymethod id ",
                              "type": "integer"
                            },
                            "estimate_id": {
                              "description": "Estimate id",
                              "type": "integer"
                            },
                            "exported_1c": {
                              "description": "Exported 1C",
                              "type": "boolean"
                            },
                            "reference": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "paid_date": {
                              "description": "Paid date",
                              "type": "string"
                            },
                            "recurring_invoice_id": {
                              "description": "Recurring invoice id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/invoice/list": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              },
                              "invoice_number": {
                                "description": "Invoice number",
                                "type": "integer"
                              },
                              "invoice_number_print": {
                                "description": "Invoice print number",
                                "type": "string"
                              },
                              "assignee_id": {
                                "description": "Assigned user id",
                                "type": "integer"
                              },
                              "customer_name": {
                                "description": "Customer name",
                                "type": "string"
                              },
                              "customer_legal_name": {
                                "description": "Customer legal name ",
                                "type": "string"
                              },
                              "contact_person": {
                                "description": "Contact",
                                "type": "string"
                              },
                              "contact_person_position": {
                                "description": "Contact person position",
                                "type": "string"
                              },
                              "show_add_sign_string": {
                                "description": "Show additional sigh string",
                                "type": "boolean"
                              },
                              "contact_person2": {
                                "description": "Secont contact",
                                "type": "string"
                              },
                              "contact_person2_position": {
                                "description": "Second contact position",
                                "type": "string"
                              },
                              "invoice_date": {
                                "description": "Invoice date",
                                "type": "string"
                              },
                              "due_date": {
                                "description": "Due date",
                                "type": "string"
                              },
                              "status_id": {
                                "description": "Status id:<li>5 - Empty</li><li>10 - New</li><li>12 - Need aproove</li><li>13 - Approved</li><li>20 - Partially Paid </li><li>30 - Overpaid</li><li>40 - Paid</li>",
                                "type": "integer"
                              },
                              "template_id": {
                                "description": "Invoice template id",
                                "type": "integer"
                              },
                              "currency_id": {
                                "description": "Currency symbol",
                                "type": "integer"
                              },
                              "currency_code": {
                                "description": "Currency code",
                                "type": "string"
                              },
                              "exchange_rate": {
                                "description": "Exchange rate",
                                "type": "number"
                              },
                              "sub_total": {
                                "description": "Sub total",
                                "type": "number"
                              },
                              "tax_total": {
                                "description": "Tax total",
                                "type": "number"
                              },
                              "total": {
                                "description": "Total",
                                "type": "number"
                              },
                              "shipping_charge": {
                                "description": "Shipping charge",
                                "type": "number"
                              },
                              "adjustment": {
                                "description": "Adjustment",
                                "type": "number"
                              },
                              "adjustment_description": {
                                "description": "Adjustment description",
                                "type": "string"
                              },
                              "discount": {
                                "description": "Discount",
                                "type": "number"
                              },
                              "discount_before_tax": {
                                "description": "Discount before tax",
                                "type": "boolean"
                              },
                              "is_invoice_emailed": {
                                "description": "Email status.<li> 1 - Sended</li><li>0 - Not sended</li>",
                                "type": "boolean"
                              },
                              "invoice_emailed_date": {
                                "description": "Invoice emailed date",
                                "type": "string"
                              },
                              "is_reminder_sent": {
                                "description": "Remainder sent",
                                "type": "boolean"
                              },
                              "reminders_sent_date": {
                                "description": "Sent date",
                                "type": "string"
                              },
                              "payment_options": {
                                "description": "Payment options",
                                "type": "string"
                              },
                              "invoice_footer_text": {
                                "description": "Custom Note",
                                "type": "string"
                              },
                              "invoice_terms_text": {
                                "description": "CONFIG.M.FIN.INVOICE.INVOICE_TERMS_TEXT.DESCTerms and Conditions",
                                "type": "string"
                              },
                              "bill_from_address": {
                                "description": "Bill from address",
                                "type": "string"
                              },
                              "bill_from_city": {
                                "description": "Bill from city",
                                "type": "string"
                              },
                              "bill_from_state": {
                                "description": "Bill from state",
                                "type": "string"
                              },
                              "bill_from_zip": {
                                "description": "Bill from zip",
                                "type": "string"
                              },
                              "bill_from_country_id": {
                                "description": "Bill from country",
                                "type": "integer"
                              },
                              "bill_to_address": {
                                "description": "Address",
                                "type": "string"
                              },
                              "bill_to_city": {
                                "description": "Bill to city",
                                "type": "string"
                              },
                              "bill_to_state": {
                                "description": "Bill to state",
                                "type": "string"
                              },
                              "bill_to_zip": {
                                "description": "Bill to ZIP",
                                "type": "string"
                              },
                              "bill_to_country_id": {
                                "description": "Country ID",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "module": {
                                "description": "Module",
                                "type": "string"
                              },
                              "model": {
                                "description": "Model",
                                "type": "string"
                              },
                              "model_id": {
                                "description": "Model id",
                                "type": "integer"
                              },
                              "group_id": {
                                "description": "Group id",
                                "type": "integer"
                              },
                              "org_id": {
                                "description": "Organization id",
                                "type": "integer"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              },
                              "company_phone": {
                                "description": "Phone",
                                "type": "string"
                              },
                              "company_phone2": {
                                "description": "Company second phone",
                                "type": "string"
                              },
                              "company_vat": {
                                "description": "Additional Account VAT (or TAX ID)",
                                "type": "string"
                              },
                              "company_vat2": {
                                "description": "Additional Account VAT (or TAX ID)",
                                "type": "string"
                              },
                              "org_phone": {
                                "description": "Organization phone",
                                "type": "string"
                              },
                              "org_phone2": {
                                "description": "Organization phone",
                                "type": "string"
                              },
                              "org_vat": {
                                "description": "Additional Account VAT (or TAX ID)",
                                "type": "string"
                              },
                              "org_vat2": {
                                "description": "Additional Account VAT (or TAX ID)",
                                "type": "string"
                              },
                              "tax1": {
                                "description": "Tax 1 (%)",
                                "type": "number"
                              },
                              "tax2": {
                                "description": "Tax 2 (%)",
                                "type": "number"
                              },
                              "tax1_included": {
                                "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                                "type": "boolean"
                              },
                              "tax2_included": {
                                "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                                "type": "boolean"
                              },
                              "is_discount_percent": {
                                "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                                "type": "boolean"
                              },
                              "customer_id": {
                                "description": "Customer id",
                                "type": "integer"
                              },
                              "uuid": {
                                "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                                "type": "string"
                              },
                              "type": {
                                "description": "Invoice type",
                                "type": "integer"
                              },
                              "is_template": {
                                "description": "Is template: <li>1 - Yes</li><li>0 - No</li>",
                                "type": "boolean"
                              },
                              "template_name": {
                                "description": "Template name",
                                "type": "string"
                              },
                              "pricelist_id": {
                                "description": "Price list id",
                                "type": "integer"
                              },
                              "bank_id": {
                                "description": "Bank id",
                                "type": "integer"
                              },
                              "bank": {
                                "description": "Bank name",
                                "type": "string"
                              },
                              "paymethod_id": {
                                "description": "Paymethod id ",
                                "type": "integer"
                              },
                              "estimate_id": {
                                "description": "Estimate id",
                                "type": "integer"
                              },
                              "exported_1c": {
                                "description": "Exported 1C",
                                "type": "boolean"
                              },
                              "reference": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "paid_date": {
                                "description": "Paid date",
                                "type": "string"
                              },
                              "recurring_invoice_id": {
                                "description": "Recurring invoice id",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/invoice_item/create": {
      "post": {
        "tags": [
          "Invoice items"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "invoice_id": {
                    "description": "Invoice ID",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "item_id": {
                    "description": "Item id",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "unit_price": {
                    "description": "Unit price",
                    "type": "number"
                  },
                  "quantity": {
                    "description": "Quantity",
                    "type": "number"
                  },
                  "tax1": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax1_included": {
                    "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax1_amount": {
                    "description": "Tax amount",
                    "type": "number"
                  },
                  "tax2": {
                    "description": "Tax 2 (%)",
                    "type": "number"
                  },
                  "tax2_included": {
                    "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax2_amount": {
                    "description": "Tax ",
                    "type": "number"
                  },
                  "discount_amount": {
                    "description": "Discount ",
                    "type": "number"
                  },
                  "discount": {
                    "description": "Discount",
                    "type": "string"
                  },
                  "discount_is_percent": {
                    "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                    "type": "integer"
                  },
                  "sub_total": {
                    "description": "Sub total",
                    "type": "number"
                  },
                  "tax_total": {
                    "description": "Tax total",
                    "type": "number"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "online_payment_type": {
                    "description": "Online payment type",
                    "type": "integer"
                  },
                  "online_payment_subject_type": {
                    "description": "Online payment subject type",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/invoice_item/update/{id}": {
      "post": {
        "tags": [
          "Invoice items"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "invoice_id": {
                    "description": "Invoice ID",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "item_id": {
                    "description": "Item id",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "unit_price": {
                    "description": "Unit price",
                    "type": "number"
                  },
                  "quantity": {
                    "description": "Quantity",
                    "type": "number"
                  },
                  "tax1": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax1_included": {
                    "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax1_amount": {
                    "description": "Tax amount",
                    "type": "number"
                  },
                  "tax2": {
                    "description": "Tax 2 (%)",
                    "type": "number"
                  },
                  "tax2_included": {
                    "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax2_amount": {
                    "description": "Tax ",
                    "type": "number"
                  },
                  "discount_amount": {
                    "description": "Discount ",
                    "type": "number"
                  },
                  "discount": {
                    "description": "Discount",
                    "type": "string"
                  },
                  "discount_is_percent": {
                    "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                    "type": "integer"
                  },
                  "sub_total": {
                    "description": "Sub total",
                    "type": "number"
                  },
                  "tax_total": {
                    "description": "Tax total",
                    "type": "number"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "online_payment_type": {
                    "description": "Online payment type",
                    "type": "integer"
                  },
                  "online_payment_subject_type": {
                    "description": "Online payment subject type",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "invoice_id": {
                              "description": "Invoice ID",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "item_id": {
                              "description": "Item id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "unit_price": {
                              "description": "Unit price",
                              "type": "number"
                            },
                            "quantity": {
                              "description": "Quantity",
                              "type": "number"
                            },
                            "tax1": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax1_included": {
                              "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax1_amount": {
                              "description": "Tax amount",
                              "type": "number"
                            },
                            "tax2": {
                              "description": "Tax 2 (%)",
                              "type": "number"
                            },
                            "tax2_included": {
                              "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax2_amount": {
                              "description": "Tax ",
                              "type": "number"
                            },
                            "discount_amount": {
                              "description": "Discount ",
                              "type": "number"
                            },
                            "discount": {
                              "description": "Discount",
                              "type": "string"
                            },
                            "discount_is_percent": {
                              "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                              "type": "integer"
                            },
                            "sub_total": {
                              "description": "Sub total",
                              "type": "number"
                            },
                            "tax_total": {
                              "description": "Tax total",
                              "type": "number"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "online_payment_type": {
                              "description": "Online payment type",
                              "type": "integer"
                            },
                            "online_payment_subject_type": {
                              "description": "Online payment subject type",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/invoice_item/delete/{id}": {
      "get": {
        "tags": [
          "Invoice items"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/invoice_item/get/{id}": {
      "get": {
        "tags": [
          "Invoice items"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "invoice_id": {
                              "description": "Invoice ID",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "item_id": {
                              "description": "Item id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "unit_price": {
                              "description": "Unit price",
                              "type": "number"
                            },
                            "quantity": {
                              "description": "Quantity",
                              "type": "number"
                            },
                            "tax1": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax1_included": {
                              "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax1_amount": {
                              "description": "Tax amount",
                              "type": "number"
                            },
                            "tax2": {
                              "description": "Tax 2 (%)",
                              "type": "number"
                            },
                            "tax2_included": {
                              "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax2_amount": {
                              "description": "Tax ",
                              "type": "number"
                            },
                            "discount_amount": {
                              "description": "Discount ",
                              "type": "number"
                            },
                            "discount": {
                              "description": "Discount",
                              "type": "string"
                            },
                            "discount_is_percent": {
                              "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                              "type": "integer"
                            },
                            "sub_total": {
                              "description": "Sub total",
                              "type": "number"
                            },
                            "tax_total": {
                              "description": "Tax total",
                              "type": "number"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "online_payment_type": {
                              "description": "Online payment type",
                              "type": "integer"
                            },
                            "online_payment_subject_type": {
                              "description": "Online payment subject type",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/invoice_item/list": {
      "get": {
        "tags": [
          "Invoice items"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "invoice_id": {
                                "description": "Invoice ID",
                                "type": "integer"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "item_id": {
                                "description": "Item id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "unit_price": {
                                "description": "Unit price",
                                "type": "number"
                              },
                              "quantity": {
                                "description": "Quantity",
                                "type": "number"
                              },
                              "tax1": {
                                "description": "Tax 1 (%)",
                                "type": "number"
                              },
                              "tax1_included": {
                                "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                                "type": "boolean"
                              },
                              "tax1_amount": {
                                "description": "Tax amount",
                                "type": "number"
                              },
                              "tax2": {
                                "description": "Tax 2 (%)",
                                "type": "number"
                              },
                              "tax2_included": {
                                "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                                "type": "boolean"
                              },
                              "tax2_amount": {
                                "description": "Tax ",
                                "type": "number"
                              },
                              "discount_amount": {
                                "description": "Discount ",
                                "type": "number"
                              },
                              "discount": {
                                "description": "Discount",
                                "type": "string"
                              },
                              "discount_is_percent": {
                                "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                                "type": "integer"
                              },
                              "sub_total": {
                                "description": "Sub total",
                                "type": "number"
                              },
                              "tax_total": {
                                "description": "Tax total",
                                "type": "number"
                              },
                              "total": {
                                "description": "Total",
                                "type": "number"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              },
                              "online_payment_type": {
                                "description": "Online payment type",
                                "type": "integer"
                              },
                              "online_payment_subject_type": {
                                "description": "Online payment subject type",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/customer_payment/create": {
      "post": {
        "tags": [
          "Money"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "charge": {
                    "description": "Customer payment charge",
                    "type": "number"
                  },
                  "date": {
                    "description": "Date",
                    "type": "string"
                  },
                  "reference": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "owner_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "status": {
                    "description": "Status <li>0 - New</li> <li>10 - Executed</li>",
                    "type": "integer"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "bank_account_id": {
                    "description": "Organization account id",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "crm_company_id": {
                    "description": "CRM company id",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Type: <li> 10 - Payment </li> <li> 11 - Project Payment </li> <li> 20 - Expense </li> <li> 21 - Project Expense </li> <li> 30 - Transfer</li> <li> 40 - Return</li>",
                    "type": "integer"
                  },
                  "startdate": {
                    "description": "Start date",
                    "type": "string"
                  },
                  "enddate": {
                    "description": "End date",
                    "type": "string"
                  },
                  "complete_date": {
                    "description": "Complete date",
                    "type": "string"
                  },
                  "is_complete": {
                    "description": "Is complete",
                    "type": "boolean"
                  },
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "project_stage_id": {
                    "description": "The identifier of the stage in which the project is currently located, stages are created manually in projects.",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "ref_uuid": {
                    "description": "Reference UUID",
                    "type": "string"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "need_approve": {
                    "description": "Need approval",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/customer_payment/update/{id}": {
      "post": {
        "tags": [
          "Money"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "charge": {
                    "description": "Customer payment charge",
                    "type": "number"
                  },
                  "date": {
                    "description": "Date",
                    "type": "string"
                  },
                  "reference": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "owner_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "status": {
                    "description": "Status <li>0 - New</li> <li>10 - Executed</li>",
                    "type": "integer"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "bank_account_id": {
                    "description": "Organization account id",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "crm_company_id": {
                    "description": "CRM company id",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Type: <li> 10 - Payment </li> <li> 11 - Project Payment </li> <li> 20 - Expense </li> <li> 21 - Project Expense </li> <li> 30 - Transfer</li> <li> 40 - Return</li>",
                    "type": "integer"
                  },
                  "startdate": {
                    "description": "Start date",
                    "type": "string"
                  },
                  "enddate": {
                    "description": "End date",
                    "type": "string"
                  },
                  "complete_date": {
                    "description": "Complete date",
                    "type": "string"
                  },
                  "is_complete": {
                    "description": "Is complete",
                    "type": "boolean"
                  },
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "project_stage_id": {
                    "description": "The identifier of the stage in which the project is currently located, stages are created manually in projects.",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "ref_uuid": {
                    "description": "Reference UUID",
                    "type": "string"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "need_approve": {
                    "description": "Need approval",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "charge": {
                              "description": "Customer payment charge",
                              "type": "number"
                            },
                            "date": {
                              "description": "Date",
                              "type": "string"
                            },
                            "reference": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "owner_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "status": {
                              "description": "Status <li>0 - New</li> <li>10 - Executed</li>",
                              "type": "integer"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "bank_account_id": {
                              "description": "Organization account id",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "crm_company_id": {
                              "description": "CRM company id",
                              "type": "integer"
                            },
                            "type": {
                              "description": "Type: <li> 10 - Payment </li> <li> 11 - Project Payment </li> <li> 20 - Expense </li> <li> 21 - Project Expense </li> <li> 30 - Transfer</li> <li> 40 - Return</li>",
                              "type": "integer"
                            },
                            "startdate": {
                              "description": "Start date",
                              "type": "string"
                            },
                            "enddate": {
                              "description": "End date",
                              "type": "string"
                            },
                            "complete_date": {
                              "description": "Complete date",
                              "type": "string"
                            },
                            "is_complete": {
                              "description": "Is complete",
                              "type": "boolean"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "project_stage_id": {
                              "description": "The identifier of the stage in which the project is currently located, stages are created manually in projects.",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "ref_uuid": {
                              "description": "Reference UUID",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "need_approve": {
                              "description": "Need approval",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/customer_payment/delete/{id}": {
      "get": {
        "tags": [
          "Money"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/customer_payment/get/{id}": {
      "get": {
        "tags": [
          "Money"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "charge": {
                              "description": "Customer payment charge",
                              "type": "number"
                            },
                            "date": {
                              "description": "Date",
                              "type": "string"
                            },
                            "reference": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "owner_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "status": {
                              "description": "Status <li>0 - New</li> <li>10 - Executed</li>",
                              "type": "integer"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "bank_account_id": {
                              "description": "Organization account id",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "crm_company_id": {
                              "description": "CRM company id",
                              "type": "integer"
                            },
                            "type": {
                              "description": "Type: <li> 10 - Payment </li> <li> 11 - Project Payment </li> <li> 20 - Expense </li> <li> 21 - Project Expense </li> <li> 30 - Transfer</li> <li> 40 - Return</li>",
                              "type": "integer"
                            },
                            "startdate": {
                              "description": "Start date",
                              "type": "string"
                            },
                            "enddate": {
                              "description": "End date",
                              "type": "string"
                            },
                            "complete_date": {
                              "description": "Complete date",
                              "type": "string"
                            },
                            "is_complete": {
                              "description": "Is complete",
                              "type": "boolean"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "project_stage_id": {
                              "description": "The identifier of the stage in which the project is currently located, stages are created manually in projects.",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "ref_uuid": {
                              "description": "Reference UUID",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "need_approve": {
                              "description": "Need approval",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/customer_payment/list": {
      "get": {
        "tags": [
          "Money"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "total": {
                                "description": "Total",
                                "type": "number"
                              },
                              "charge": {
                                "description": "Customer payment charge",
                                "type": "number"
                              },
                              "date": {
                                "description": "Date",
                                "type": "string"
                              },
                              "reference": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "owner_id": {
                                "description": "Assigned user id",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Status <li>0 - New</li> <li>10 - Executed</li>",
                                "type": "integer"
                              },
                              "org_id": {
                                "description": "Organization id",
                                "type": "integer"
                              },
                              "bank_account_id": {
                                "description": "Organization account id",
                                "type": "integer"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "crm_company_id": {
                                "description": "CRM company id",
                                "type": "integer"
                              },
                              "type": {
                                "description": "Type: <li> 10 - Payment </li> <li> 11 - Project Payment </li> <li> 20 - Expense </li> <li> 21 - Project Expense </li> <li> 30 - Transfer</li> <li> 40 - Return</li>",
                                "type": "integer"
                              },
                              "startdate": {
                                "description": "Start date",
                                "type": "string"
                              },
                              "enddate": {
                                "description": "End date",
                                "type": "string"
                              },
                              "complete_date": {
                                "description": "Complete date",
                                "type": "string"
                              },
                              "is_complete": {
                                "description": "Is complete",
                                "type": "boolean"
                              },
                              "project_id": {
                                "description": "Project id",
                                "type": "integer"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "project_stage_id": {
                                "description": "The identifier of the stage in which the project is currently located, stages are created manually in projects.",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              },
                              "ref_uuid": {
                                "description": "Reference UUID",
                                "type": "string"
                              },
                              "uuid": {
                                "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                                "type": "string"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "need_approve": {
                                "description": "Need approval",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/invoice_contacts/create": {
      "post": {
        "tags": [
          "Invoice contacts"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "invoice_id": {
                    "description": "Invoice ID",
                    "type": "integer"
                  },
                  "contact_id": {
                    "description": "Account id",
                    "type": "string"
                  },
                  "invoice_emailed": {
                    "description": "Email sent",
                    "type": "boolean"
                  },
                  "invoice_emailed_date": {
                    "description": "Invoice emailed date",
                    "type": "string"
                  },
                  "reminders_sent": {
                    "description": "Remainder sent",
                    "type": "boolean"
                  },
                  "reminders_sent_date": {
                    "description": "Sent date",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/invoice_contacts/update/{id}": {
      "post": {
        "tags": [
          "Invoice contacts"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "invoice_id": {
                    "description": "Invoice ID",
                    "type": "integer"
                  },
                  "contact_id": {
                    "description": "Account id",
                    "type": "string"
                  },
                  "invoice_emailed": {
                    "description": "Email sent",
                    "type": "boolean"
                  },
                  "invoice_emailed_date": {
                    "description": "Invoice emailed date",
                    "type": "string"
                  },
                  "reminders_sent": {
                    "description": "Remainder sent",
                    "type": "boolean"
                  },
                  "reminders_sent_date": {
                    "description": "Sent date",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "invoice_id": {
                              "description": "Invoice ID",
                              "type": "integer"
                            },
                            "contact_id": {
                              "description": "Account id",
                              "type": "string"
                            },
                            "invoice_emailed": {
                              "description": "Email sent",
                              "type": "boolean"
                            },
                            "invoice_emailed_date": {
                              "description": "Invoice emailed date",
                              "type": "string"
                            },
                            "reminders_sent": {
                              "description": "Remainder sent",
                              "type": "boolean"
                            },
                            "reminders_sent_date": {
                              "description": "Sent date",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/invoice_contacts/delete/{id}": {
      "get": {
        "tags": [
          "Invoice contacts"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/invoice_contacts/get/{id}": {
      "get": {
        "tags": [
          "Invoice contacts"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "invoice_id": {
                              "description": "Invoice ID",
                              "type": "integer"
                            },
                            "contact_id": {
                              "description": "Account id",
                              "type": "string"
                            },
                            "invoice_emailed": {
                              "description": "Email sent",
                              "type": "boolean"
                            },
                            "invoice_emailed_date": {
                              "description": "Invoice emailed date",
                              "type": "string"
                            },
                            "reminders_sent": {
                              "description": "Remainder sent",
                              "type": "boolean"
                            },
                            "reminders_sent_date": {
                              "description": "Sent date",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/invoice_contacts/list": {
      "get": {
        "tags": [
          "Invoice contacts"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "invoice_id": {
                                "description": "Invoice ID",
                                "type": "integer"
                              },
                              "contact_id": {
                                "description": "Account id",
                                "type": "string"
                              },
                              "invoice_emailed": {
                                "description": "Email sent",
                                "type": "boolean"
                              },
                              "invoice_emailed_date": {
                                "description": "Invoice emailed date",
                                "type": "string"
                              },
                              "reminders_sent": {
                                "description": "Remainder sent",
                                "type": "boolean"
                              },
                              "reminders_sent_date": {
                                "description": "Sent date",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/bank_account/create": {
      "post": {
        "tags": [
          "Bank account"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "type": {
                    "description": "",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/bank_account/update/{id}": {
      "post": {
        "tags": [
          "Bank account"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "type": {
                    "description": "",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "type": {
                              "description": "",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/bank_account/delete/{id}": {
      "get": {
        "tags": [
          "Bank account"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/bank_account/get/{id}": {
      "get": {
        "tags": [
          "Bank account"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "type": {
                              "description": "",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/bank_account/list": {
      "get": {
        "tags": [
          "Bank account"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "org_id": {
                                "description": "Organization id",
                                "type": "integer"
                              },
                              "type": {
                                "description": "",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "integer"
                              },
                              "ordering": {
                                "description": "",
                                "type": "integer"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate/create": {
      "post": {
        "tags": [
          "Estimate"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "estimate_number": {
                    "description": "Estimate number",
                    "type": "integer"
                  },
                  "estimate_number_print": {
                    "description": "Estimate number for printing ",
                    "type": "string"
                  },
                  "reference_number": {
                    "description": "Reference number",
                    "type": "string"
                  },
                  "assignee_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "customer_id": {
                    "description": "Customer id",
                    "type": "integer"
                  },
                  "customer_name": {
                    "description": "Customer name",
                    "type": "string"
                  },
                  "customer_legal_name": {
                    "description": "Customer legal name ",
                    "type": "string"
                  },
                  "company_phone": {
                    "description": "Phone",
                    "type": "string"
                  },
                  "company_phone2": {
                    "description": "Company second phone",
                    "type": "string"
                  },
                  "company_vat": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "company_vat2": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "contact_person": {
                    "description": "Contact",
                    "type": "string"
                  },
                  "contact_person_position": {
                    "description": "Contact person position",
                    "type": "string"
                  },
                  "invoice_date": {
                    "description": "Date",
                    "type": "string"
                  },
                  "expire_date": {
                    "description": "Expiry date",
                    "type": "string"
                  },
                  "status_id": {
                    "description": "Statuses: <li>10 - Draft</li> <li>20 - Sent</li> <li>30 - Declined</li> <li>40 - Accepted</li> <li>50 - Invoiced</li> <li>60 - Expired</li>",
                    "type": "integer"
                  },
                  "template_id": {
                    "description": "Estimate template id",
                    "type": "integer"
                  },
                  "currency_id": {
                    "description": "Currency symbol",
                    "type": "integer"
                  },
                  "currency_code": {
                    "description": "Currency code",
                    "type": "string"
                  },
                  "exchange_rate": {
                    "description": "Exchange rate",
                    "type": "number"
                  },
                  "sub_total": {
                    "description": "Sub total",
                    "type": "number"
                  },
                  "tax_total": {
                    "description": "Tax total",
                    "type": "number"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "shipping_charge": {
                    "description": "Shipping charge",
                    "type": "number"
                  },
                  "adjustment": {
                    "description": "Adjustment",
                    "type": "number"
                  },
                  "adjustment_description": {
                    "description": "Adjustment description",
                    "type": "string"
                  },
                  "discount": {
                    "description": "Discount",
                    "type": "number"
                  },
                  "is_discount_percent": {
                    "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                    "type": "boolean"
                  },
                  "discount_before_tax": {
                    "description": "Discount before tax",
                    "type": "boolean"
                  },
                  "tax1": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax2": {
                    "description": "Tax 2 (%)",
                    "type": "number"
                  },
                  "tax1_included": {
                    "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax2_included": {
                    "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "estimate_emailed_date": {
                    "description": "Email sent date",
                    "type": "string"
                  },
                  "estimate_footer_text": {
                    "description": "Customer Notes",
                    "type": "string"
                  },
                  "estimate_terms_text": {
                    "description": "Terms & Conditions",
                    "type": "string"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "org_phone": {
                    "description": "Organization phone",
                    "type": "string"
                  },
                  "org_phone2": {
                    "description": "Organization phone",
                    "type": "string"
                  },
                  "org_vat": {
                    "description": "Organization VAT ",
                    "type": "string"
                  },
                  "org_vat2": {
                    "description": "Organization VAT 2",
                    "type": "string"
                  },
                  "bill_from_address": {
                    "description": "Bill from address",
                    "type": "string"
                  },
                  "bill_from_city": {
                    "description": "Bill from city",
                    "type": "string"
                  },
                  "bill_from_state": {
                    "description": "Bill from state",
                    "type": "string"
                  },
                  "bill_from_zip": {
                    "description": "Bill from zip",
                    "type": "string"
                  },
                  "bill_from_country_id": {
                    "description": "Bill from country",
                    "type": "integer"
                  },
                  "bill_to_address": {
                    "description": "Address",
                    "type": "string"
                  },
                  "bill_to_city": {
                    "description": "Bill to city",
                    "type": "string"
                  },
                  "bill_to_state": {
                    "description": "Bill to state",
                    "type": "string"
                  },
                  "bill_to_zip": {
                    "description": "Bill to ZIP",
                    "type": "string"
                  },
                  "bill_to_country_id": {
                    "description": "Country ID",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "module": {
                    "description": "Module",
                    "type": "string"
                  },
                  "model": {
                    "description": "Model",
                    "type": "string"
                  },
                  "model_id": {
                    "description": "Model id",
                    "type": "integer"
                  },
                  "group_id": {
                    "description": "Group id",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Estimate type",
                    "type": "integer"
                  },
                  "pricelist_id": {
                    "description": "Price list id",
                    "type": "integer"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate/update/{id}": {
      "post": {
        "tags": [
          "Estimate"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "estimate_number": {
                    "description": "Estimate number",
                    "type": "integer"
                  },
                  "estimate_number_print": {
                    "description": "Estimate number for printing ",
                    "type": "string"
                  },
                  "reference_number": {
                    "description": "Reference number",
                    "type": "string"
                  },
                  "assignee_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "customer_id": {
                    "description": "Customer id",
                    "type": "integer"
                  },
                  "customer_name": {
                    "description": "Customer name",
                    "type": "string"
                  },
                  "customer_legal_name": {
                    "description": "Customer legal name ",
                    "type": "string"
                  },
                  "company_phone": {
                    "description": "Phone",
                    "type": "string"
                  },
                  "company_phone2": {
                    "description": "Company second phone",
                    "type": "string"
                  },
                  "company_vat": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "company_vat2": {
                    "description": "Additional Account VAT (or TAX ID)",
                    "type": "string"
                  },
                  "contact_person": {
                    "description": "Contact",
                    "type": "string"
                  },
                  "contact_person_position": {
                    "description": "Contact person position",
                    "type": "string"
                  },
                  "invoice_date": {
                    "description": "Date",
                    "type": "string"
                  },
                  "expire_date": {
                    "description": "Expiry date",
                    "type": "string"
                  },
                  "status_id": {
                    "description": "Statuses: <li>10 - Draft</li> <li>20 - Sent</li> <li>30 - Declined</li> <li>40 - Accepted</li> <li>50 - Invoiced</li> <li>60 - Expired</li>",
                    "type": "integer"
                  },
                  "template_id": {
                    "description": "Estimate template id",
                    "type": "integer"
                  },
                  "currency_id": {
                    "description": "Currency symbol",
                    "type": "integer"
                  },
                  "currency_code": {
                    "description": "Currency code",
                    "type": "string"
                  },
                  "exchange_rate": {
                    "description": "Exchange rate",
                    "type": "number"
                  },
                  "sub_total": {
                    "description": "Sub total",
                    "type": "number"
                  },
                  "tax_total": {
                    "description": "Tax total",
                    "type": "number"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "shipping_charge": {
                    "description": "Shipping charge",
                    "type": "number"
                  },
                  "adjustment": {
                    "description": "Adjustment",
                    "type": "number"
                  },
                  "adjustment_description": {
                    "description": "Adjustment description",
                    "type": "string"
                  },
                  "discount": {
                    "description": "Discount",
                    "type": "number"
                  },
                  "is_discount_percent": {
                    "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                    "type": "boolean"
                  },
                  "discount_before_tax": {
                    "description": "Discount before tax",
                    "type": "boolean"
                  },
                  "tax1": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax2": {
                    "description": "Tax 2 (%)",
                    "type": "number"
                  },
                  "tax1_included": {
                    "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax2_included": {
                    "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "estimate_emailed_date": {
                    "description": "Email sent date",
                    "type": "string"
                  },
                  "estimate_footer_text": {
                    "description": "Customer Notes",
                    "type": "string"
                  },
                  "estimate_terms_text": {
                    "description": "Terms & Conditions",
                    "type": "string"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "org_phone": {
                    "description": "Organization phone",
                    "type": "string"
                  },
                  "org_phone2": {
                    "description": "Organization phone",
                    "type": "string"
                  },
                  "org_vat": {
                    "description": "Organization VAT ",
                    "type": "string"
                  },
                  "org_vat2": {
                    "description": "Organization VAT 2",
                    "type": "string"
                  },
                  "bill_from_address": {
                    "description": "Bill from address",
                    "type": "string"
                  },
                  "bill_from_city": {
                    "description": "Bill from city",
                    "type": "string"
                  },
                  "bill_from_state": {
                    "description": "Bill from state",
                    "type": "string"
                  },
                  "bill_from_zip": {
                    "description": "Bill from zip",
                    "type": "string"
                  },
                  "bill_from_country_id": {
                    "description": "Bill from country",
                    "type": "integer"
                  },
                  "bill_to_address": {
                    "description": "Address",
                    "type": "string"
                  },
                  "bill_to_city": {
                    "description": "Bill to city",
                    "type": "string"
                  },
                  "bill_to_state": {
                    "description": "Bill to state",
                    "type": "string"
                  },
                  "bill_to_zip": {
                    "description": "Bill to ZIP",
                    "type": "string"
                  },
                  "bill_to_country_id": {
                    "description": "Country ID",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "module": {
                    "description": "Module",
                    "type": "string"
                  },
                  "model": {
                    "description": "Model",
                    "type": "string"
                  },
                  "model_id": {
                    "description": "Model id",
                    "type": "integer"
                  },
                  "group_id": {
                    "description": "Group id",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Estimate type",
                    "type": "integer"
                  },
                  "pricelist_id": {
                    "description": "Price list id",
                    "type": "integer"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "estimate_number": {
                              "description": "Estimate number",
                              "type": "integer"
                            },
                            "estimate_number_print": {
                              "description": "Estimate number for printing ",
                              "type": "string"
                            },
                            "reference_number": {
                              "description": "Reference number",
                              "type": "string"
                            },
                            "assignee_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "customer_id": {
                              "description": "Customer id",
                              "type": "integer"
                            },
                            "customer_name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "customer_legal_name": {
                              "description": "Customer legal name ",
                              "type": "string"
                            },
                            "company_phone": {
                              "description": "Phone",
                              "type": "string"
                            },
                            "company_phone2": {
                              "description": "Company second phone",
                              "type": "string"
                            },
                            "company_vat": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "company_vat2": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "contact_person": {
                              "description": "Contact",
                              "type": "string"
                            },
                            "contact_person_position": {
                              "description": "Contact person position",
                              "type": "string"
                            },
                            "invoice_date": {
                              "description": "Date",
                              "type": "string"
                            },
                            "expire_date": {
                              "description": "Expiry date",
                              "type": "string"
                            },
                            "status_id": {
                              "description": "Statuses: <li>10 - Draft</li> <li>20 - Sent</li> <li>30 - Declined</li> <li>40 - Accepted</li> <li>50 - Invoiced</li> <li>60 - Expired</li>",
                              "type": "integer"
                            },
                            "template_id": {
                              "description": "Estimate template id",
                              "type": "integer"
                            },
                            "currency_id": {
                              "description": "Currency symbol",
                              "type": "integer"
                            },
                            "currency_code": {
                              "description": "Currency code",
                              "type": "string"
                            },
                            "exchange_rate": {
                              "description": "Exchange rate",
                              "type": "number"
                            },
                            "sub_total": {
                              "description": "Sub total",
                              "type": "number"
                            },
                            "tax_total": {
                              "description": "Tax total",
                              "type": "number"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "shipping_charge": {
                              "description": "Shipping charge",
                              "type": "number"
                            },
                            "adjustment": {
                              "description": "Adjustment",
                              "type": "number"
                            },
                            "adjustment_description": {
                              "description": "Adjustment description",
                              "type": "string"
                            },
                            "discount": {
                              "description": "Discount",
                              "type": "number"
                            },
                            "is_discount_percent": {
                              "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                              "type": "boolean"
                            },
                            "discount_before_tax": {
                              "description": "Discount before tax",
                              "type": "boolean"
                            },
                            "tax1": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax2": {
                              "description": "Tax 2 (%)",
                              "type": "number"
                            },
                            "tax1_included": {
                              "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax2_included": {
                              "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "estimate_emailed_date": {
                              "description": "Email sent date",
                              "type": "string"
                            },
                            "estimate_footer_text": {
                              "description": "Customer Notes",
                              "type": "string"
                            },
                            "estimate_terms_text": {
                              "description": "Terms & Conditions",
                              "type": "string"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "org_phone": {
                              "description": "Organization phone",
                              "type": "string"
                            },
                            "org_phone2": {
                              "description": "Organization phone",
                              "type": "string"
                            },
                            "org_vat": {
                              "description": "Organization VAT ",
                              "type": "string"
                            },
                            "org_vat2": {
                              "description": "Organization VAT 2",
                              "type": "string"
                            },
                            "bill_from_address": {
                              "description": "Bill from address",
                              "type": "string"
                            },
                            "bill_from_city": {
                              "description": "Bill from city",
                              "type": "string"
                            },
                            "bill_from_state": {
                              "description": "Bill from state",
                              "type": "string"
                            },
                            "bill_from_zip": {
                              "description": "Bill from zip",
                              "type": "string"
                            },
                            "bill_from_country_id": {
                              "description": "Bill from country",
                              "type": "integer"
                            },
                            "bill_to_address": {
                              "description": "Address",
                              "type": "string"
                            },
                            "bill_to_city": {
                              "description": "Bill to city",
                              "type": "string"
                            },
                            "bill_to_state": {
                              "description": "Bill to state",
                              "type": "string"
                            },
                            "bill_to_zip": {
                              "description": "Bill to ZIP",
                              "type": "string"
                            },
                            "bill_to_country_id": {
                              "description": "Country ID",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "module": {
                              "description": "Module",
                              "type": "string"
                            },
                            "model": {
                              "description": "Model",
                              "type": "string"
                            },
                            "model_id": {
                              "description": "Model id",
                              "type": "integer"
                            },
                            "group_id": {
                              "description": "Group id",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Estimate type",
                              "type": "integer"
                            },
                            "pricelist_id": {
                              "description": "Price list id",
                              "type": "integer"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate/delete/{id}": {
      "get": {
        "tags": [
          "Estimate"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate/get/{id}": {
      "get": {
        "tags": [
          "Estimate"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "estimate_number": {
                              "description": "Estimate number",
                              "type": "integer"
                            },
                            "estimate_number_print": {
                              "description": "Estimate number for printing ",
                              "type": "string"
                            },
                            "reference_number": {
                              "description": "Reference number",
                              "type": "string"
                            },
                            "assignee_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "customer_id": {
                              "description": "Customer id",
                              "type": "integer"
                            },
                            "customer_name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "customer_legal_name": {
                              "description": "Customer legal name ",
                              "type": "string"
                            },
                            "company_phone": {
                              "description": "Phone",
                              "type": "string"
                            },
                            "company_phone2": {
                              "description": "Company second phone",
                              "type": "string"
                            },
                            "company_vat": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "company_vat2": {
                              "description": "Additional Account VAT (or TAX ID)",
                              "type": "string"
                            },
                            "contact_person": {
                              "description": "Contact",
                              "type": "string"
                            },
                            "contact_person_position": {
                              "description": "Contact person position",
                              "type": "string"
                            },
                            "invoice_date": {
                              "description": "Date",
                              "type": "string"
                            },
                            "expire_date": {
                              "description": "Expiry date",
                              "type": "string"
                            },
                            "status_id": {
                              "description": "Statuses: <li>10 - Draft</li> <li>20 - Sent</li> <li>30 - Declined</li> <li>40 - Accepted</li> <li>50 - Invoiced</li> <li>60 - Expired</li>",
                              "type": "integer"
                            },
                            "template_id": {
                              "description": "Estimate template id",
                              "type": "integer"
                            },
                            "currency_id": {
                              "description": "Currency symbol",
                              "type": "integer"
                            },
                            "currency_code": {
                              "description": "Currency code",
                              "type": "string"
                            },
                            "exchange_rate": {
                              "description": "Exchange rate",
                              "type": "number"
                            },
                            "sub_total": {
                              "description": "Sub total",
                              "type": "number"
                            },
                            "tax_total": {
                              "description": "Tax total",
                              "type": "number"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "shipping_charge": {
                              "description": "Shipping charge",
                              "type": "number"
                            },
                            "adjustment": {
                              "description": "Adjustment",
                              "type": "number"
                            },
                            "adjustment_description": {
                              "description": "Adjustment description",
                              "type": "string"
                            },
                            "discount": {
                              "description": "Discount",
                              "type": "number"
                            },
                            "is_discount_percent": {
                              "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                              "type": "boolean"
                            },
                            "discount_before_tax": {
                              "description": "Discount before tax",
                              "type": "boolean"
                            },
                            "tax1": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax2": {
                              "description": "Tax 2 (%)",
                              "type": "number"
                            },
                            "tax1_included": {
                              "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax2_included": {
                              "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "estimate_emailed_date": {
                              "description": "Email sent date",
                              "type": "string"
                            },
                            "estimate_footer_text": {
                              "description": "Customer Notes",
                              "type": "string"
                            },
                            "estimate_terms_text": {
                              "description": "Terms & Conditions",
                              "type": "string"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "org_phone": {
                              "description": "Organization phone",
                              "type": "string"
                            },
                            "org_phone2": {
                              "description": "Organization phone",
                              "type": "string"
                            },
                            "org_vat": {
                              "description": "Organization VAT ",
                              "type": "string"
                            },
                            "org_vat2": {
                              "description": "Organization VAT 2",
                              "type": "string"
                            },
                            "bill_from_address": {
                              "description": "Bill from address",
                              "type": "string"
                            },
                            "bill_from_city": {
                              "description": "Bill from city",
                              "type": "string"
                            },
                            "bill_from_state": {
                              "description": "Bill from state",
                              "type": "string"
                            },
                            "bill_from_zip": {
                              "description": "Bill from zip",
                              "type": "string"
                            },
                            "bill_from_country_id": {
                              "description": "Bill from country",
                              "type": "integer"
                            },
                            "bill_to_address": {
                              "description": "Address",
                              "type": "string"
                            },
                            "bill_to_city": {
                              "description": "Bill to city",
                              "type": "string"
                            },
                            "bill_to_state": {
                              "description": "Bill to state",
                              "type": "string"
                            },
                            "bill_to_zip": {
                              "description": "Bill to ZIP",
                              "type": "string"
                            },
                            "bill_to_country_id": {
                              "description": "Country ID",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "module": {
                              "description": "Module",
                              "type": "string"
                            },
                            "model": {
                              "description": "Model",
                              "type": "string"
                            },
                            "model_id": {
                              "description": "Model id",
                              "type": "integer"
                            },
                            "group_id": {
                              "description": "Group id",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Estimate type",
                              "type": "integer"
                            },
                            "pricelist_id": {
                              "description": "Price list id",
                              "type": "integer"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate/list": {
      "get": {
        "tags": [
          "Estimate"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              },
                              "estimate_number": {
                                "description": "Estimate number",
                                "type": "integer"
                              },
                              "estimate_number_print": {
                                "description": "Estimate number for printing ",
                                "type": "string"
                              },
                              "reference_number": {
                                "description": "Reference number",
                                "type": "string"
                              },
                              "assignee_id": {
                                "description": "Assigned user id",
                                "type": "integer"
                              },
                              "customer_id": {
                                "description": "Customer id",
                                "type": "integer"
                              },
                              "customer_name": {
                                "description": "Customer name",
                                "type": "string"
                              },
                              "customer_legal_name": {
                                "description": "Customer legal name ",
                                "type": "string"
                              },
                              "company_phone": {
                                "description": "Phone",
                                "type": "string"
                              },
                              "company_phone2": {
                                "description": "Company second phone",
                                "type": "string"
                              },
                              "company_vat": {
                                "description": "Additional Account VAT (or TAX ID)",
                                "type": "string"
                              },
                              "company_vat2": {
                                "description": "Additional Account VAT (or TAX ID)",
                                "type": "string"
                              },
                              "contact_person": {
                                "description": "Contact",
                                "type": "string"
                              },
                              "contact_person_position": {
                                "description": "Contact person position",
                                "type": "string"
                              },
                              "invoice_date": {
                                "description": "Date",
                                "type": "string"
                              },
                              "expire_date": {
                                "description": "Expiry date",
                                "type": "string"
                              },
                              "status_id": {
                                "description": "Statuses: <li>10 - Draft</li> <li>20 - Sent</li> <li>30 - Declined</li> <li>40 - Accepted</li> <li>50 - Invoiced</li> <li>60 - Expired</li>",
                                "type": "integer"
                              },
                              "template_id": {
                                "description": "Estimate template id",
                                "type": "integer"
                              },
                              "currency_id": {
                                "description": "Currency symbol",
                                "type": "integer"
                              },
                              "currency_code": {
                                "description": "Currency code",
                                "type": "string"
                              },
                              "exchange_rate": {
                                "description": "Exchange rate",
                                "type": "number"
                              },
                              "sub_total": {
                                "description": "Sub total",
                                "type": "number"
                              },
                              "tax_total": {
                                "description": "Tax total",
                                "type": "number"
                              },
                              "total": {
                                "description": "Total",
                                "type": "number"
                              },
                              "shipping_charge": {
                                "description": "Shipping charge",
                                "type": "number"
                              },
                              "adjustment": {
                                "description": "Adjustment",
                                "type": "number"
                              },
                              "adjustment_description": {
                                "description": "Adjustment description",
                                "type": "string"
                              },
                              "discount": {
                                "description": "Discount",
                                "type": "number"
                              },
                              "is_discount_percent": {
                                "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                                "type": "boolean"
                              },
                              "discount_before_tax": {
                                "description": "Discount before tax",
                                "type": "boolean"
                              },
                              "tax1": {
                                "description": "Tax 1 (%)",
                                "type": "number"
                              },
                              "tax2": {
                                "description": "Tax 2 (%)",
                                "type": "number"
                              },
                              "tax1_included": {
                                "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                                "type": "boolean"
                              },
                              "tax2_included": {
                                "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                                "type": "boolean"
                              },
                              "estimate_emailed_date": {
                                "description": "Email sent date",
                                "type": "string"
                              },
                              "estimate_footer_text": {
                                "description": "Customer Notes",
                                "type": "string"
                              },
                              "estimate_terms_text": {
                                "description": "Terms & Conditions",
                                "type": "string"
                              },
                              "org_id": {
                                "description": "Organization id",
                                "type": "integer"
                              },
                              "org_phone": {
                                "description": "Organization phone",
                                "type": "string"
                              },
                              "org_phone2": {
                                "description": "Organization phone",
                                "type": "string"
                              },
                              "org_vat": {
                                "description": "Organization VAT ",
                                "type": "string"
                              },
                              "org_vat2": {
                                "description": "Organization VAT 2",
                                "type": "string"
                              },
                              "bill_from_address": {
                                "description": "Bill from address",
                                "type": "string"
                              },
                              "bill_from_city": {
                                "description": "Bill from city",
                                "type": "string"
                              },
                              "bill_from_state": {
                                "description": "Bill from state",
                                "type": "string"
                              },
                              "bill_from_zip": {
                                "description": "Bill from zip",
                                "type": "string"
                              },
                              "bill_from_country_id": {
                                "description": "Bill from country",
                                "type": "integer"
                              },
                              "bill_to_address": {
                                "description": "Address",
                                "type": "string"
                              },
                              "bill_to_city": {
                                "description": "Bill to city",
                                "type": "string"
                              },
                              "bill_to_state": {
                                "description": "Bill to state",
                                "type": "string"
                              },
                              "bill_to_zip": {
                                "description": "Bill to ZIP",
                                "type": "string"
                              },
                              "bill_to_country_id": {
                                "description": "Country ID",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "module": {
                                "description": "Module",
                                "type": "string"
                              },
                              "model": {
                                "description": "Model",
                                "type": "string"
                              },
                              "model_id": {
                                "description": "Model id",
                                "type": "integer"
                              },
                              "group_id": {
                                "description": "Group id",
                                "type": "integer"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              },
                              "type": {
                                "description": "Estimate type",
                                "type": "integer"
                              },
                              "pricelist_id": {
                                "description": "Price list id",
                                "type": "integer"
                              },
                              "uuid": {
                                "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate_item/create": {
      "post": {
        "tags": [
          "Estimate items"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "estimate_id": {
                    "description": "Estimate id",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "item_id": {
                    "description": "Item id",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "unit_price": {
                    "description": "Unit price",
                    "type": "number"
                  },
                  "quantity": {
                    "description": "Quantity",
                    "type": "number"
                  },
                  "tax1": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax1_included": {
                    "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax1_amount": {
                    "description": "Tax amount",
                    "type": "number"
                  },
                  "tax2": {
                    "description": "Tax 2 (%)",
                    "type": "number"
                  },
                  "tax2_included": {
                    "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax2_amount": {
                    "description": "Tax ",
                    "type": "number"
                  },
                  "discount_amount": {
                    "description": "Discount ",
                    "type": "number"
                  },
                  "discount": {
                    "description": "Discount",
                    "type": "string"
                  },
                  "discount_is_percent": {
                    "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                    "type": "integer"
                  },
                  "sub_total": {
                    "description": "Sub total",
                    "type": "number"
                  },
                  "tax_total": {
                    "description": "Tax total",
                    "type": "number"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate_item/update/{id}": {
      "post": {
        "tags": [
          "Estimate items"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "estimate_id": {
                    "description": "Estimate id",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "item_id": {
                    "description": "Item id",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "unit_price": {
                    "description": "Unit price",
                    "type": "number"
                  },
                  "quantity": {
                    "description": "Quantity",
                    "type": "number"
                  },
                  "tax1": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax1_included": {
                    "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax1_amount": {
                    "description": "Tax amount",
                    "type": "number"
                  },
                  "tax2": {
                    "description": "Tax 2 (%)",
                    "type": "number"
                  },
                  "tax2_included": {
                    "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax2_amount": {
                    "description": "Tax ",
                    "type": "number"
                  },
                  "discount_amount": {
                    "description": "Discount ",
                    "type": "number"
                  },
                  "discount": {
                    "description": "Discount",
                    "type": "string"
                  },
                  "discount_is_percent": {
                    "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                    "type": "integer"
                  },
                  "sub_total": {
                    "description": "Sub total",
                    "type": "number"
                  },
                  "tax_total": {
                    "description": "Tax total",
                    "type": "number"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "estimate_id": {
                              "description": "Estimate id",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "item_id": {
                              "description": "Item id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "unit_price": {
                              "description": "Unit price",
                              "type": "number"
                            },
                            "quantity": {
                              "description": "Quantity",
                              "type": "number"
                            },
                            "tax1": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax1_included": {
                              "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax1_amount": {
                              "description": "Tax amount",
                              "type": "number"
                            },
                            "tax2": {
                              "description": "Tax 2 (%)",
                              "type": "number"
                            },
                            "tax2_included": {
                              "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax2_amount": {
                              "description": "Tax ",
                              "type": "number"
                            },
                            "discount_amount": {
                              "description": "Discount ",
                              "type": "number"
                            },
                            "discount": {
                              "description": "Discount",
                              "type": "string"
                            },
                            "discount_is_percent": {
                              "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                              "type": "integer"
                            },
                            "sub_total": {
                              "description": "Sub total",
                              "type": "number"
                            },
                            "tax_total": {
                              "description": "Tax total",
                              "type": "number"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate_item/delete/{id}": {
      "get": {
        "tags": [
          "Estimate items"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate_item/get/{id}": {
      "get": {
        "tags": [
          "Estimate items"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "estimate_id": {
                              "description": "Estimate id",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "item_id": {
                              "description": "Item id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "unit_price": {
                              "description": "Unit price",
                              "type": "number"
                            },
                            "quantity": {
                              "description": "Quantity",
                              "type": "number"
                            },
                            "tax1": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax1_included": {
                              "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax1_amount": {
                              "description": "Tax amount",
                              "type": "number"
                            },
                            "tax2": {
                              "description": "Tax 2 (%)",
                              "type": "number"
                            },
                            "tax2_included": {
                              "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax2_amount": {
                              "description": "Tax ",
                              "type": "number"
                            },
                            "discount_amount": {
                              "description": "Discount ",
                              "type": "number"
                            },
                            "discount": {
                              "description": "Discount",
                              "type": "string"
                            },
                            "discount_is_percent": {
                              "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                              "type": "integer"
                            },
                            "sub_total": {
                              "description": "Sub total",
                              "type": "number"
                            },
                            "tax_total": {
                              "description": "Tax total",
                              "type": "number"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate_item/list": {
      "get": {
        "tags": [
          "Estimate items"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "estimate_id": {
                                "description": "Estimate id",
                                "type": "integer"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "item_id": {
                                "description": "Item id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "unit_price": {
                                "description": "Unit price",
                                "type": "number"
                              },
                              "quantity": {
                                "description": "Quantity",
                                "type": "number"
                              },
                              "tax1": {
                                "description": "Tax 1 (%)",
                                "type": "number"
                              },
                              "tax1_included": {
                                "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                                "type": "boolean"
                              },
                              "tax1_amount": {
                                "description": "Tax amount",
                                "type": "number"
                              },
                              "tax2": {
                                "description": "Tax 2 (%)",
                                "type": "number"
                              },
                              "tax2_included": {
                                "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                                "type": "boolean"
                              },
                              "tax2_amount": {
                                "description": "Tax ",
                                "type": "number"
                              },
                              "discount_amount": {
                                "description": "Discount ",
                                "type": "number"
                              },
                              "discount": {
                                "description": "Discount",
                                "type": "string"
                              },
                              "discount_is_percent": {
                                "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                                "type": "integer"
                              },
                              "sub_total": {
                                "description": "Sub total",
                                "type": "number"
                              },
                              "tax_total": {
                                "description": "Tax total",
                                "type": "number"
                              },
                              "total": {
                                "description": "Total",
                                "type": "number"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate_template/create": {
      "post": {
        "tags": [
          "Estimate template"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "code": {
                    "description": "Estimate template code",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "params": {
                    "description": "Estimate template parametres",
                    "type": "string"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate_template/update/{id}": {
      "post": {
        "tags": [
          "Estimate template"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "code": {
                    "description": "Estimate template code",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "params": {
                    "description": "Estimate template parametres",
                    "type": "string"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "code": {
                              "description": "Estimate template code",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "params": {
                              "description": "Estimate template parametres",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate_template/delete/{id}": {
      "get": {
        "tags": [
          "Estimate template"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate_template/get/{id}": {
      "get": {
        "tags": [
          "Estimate template"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "code": {
                              "description": "Estimate template code",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "params": {
                              "description": "Estimate template parametres",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate_template/list": {
      "get": {
        "tags": [
          "Estimate template"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "org_id": {
                                "description": "Organization id",
                                "type": "integer"
                              },
                              "code": {
                                "description": "Estimate template code",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "integer"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "params": {
                                "description": "Estimate template parametres",
                                "type": "string"
                              },
                              "uuid": {
                                "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate_contacts/create": {
      "post": {
        "tags": [
          "Estimate contacts"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "estimate_id": {
                    "description": "Estimate id",
                    "type": "integer"
                  },
                  "contact_id": {
                    "description": "Account id",
                    "type": "string"
                  },
                  "estimate_emailed": {
                    "description": "Email send",
                    "type": "boolean"
                  },
                  "estimate_emailed_date": {
                    "description": "Email sent date",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate_contacts/update/{id}": {
      "post": {
        "tags": [
          "Estimate contacts"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "estimate_id": {
                    "description": "Estimate id",
                    "type": "integer"
                  },
                  "contact_id": {
                    "description": "Account id",
                    "type": "string"
                  },
                  "estimate_emailed": {
                    "description": "Email send",
                    "type": "boolean"
                  },
                  "estimate_emailed_date": {
                    "description": "Email sent date",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "estimate_id": {
                              "description": "Estimate id",
                              "type": "integer"
                            },
                            "contact_id": {
                              "description": "Account id",
                              "type": "string"
                            },
                            "estimate_emailed": {
                              "description": "Email send",
                              "type": "boolean"
                            },
                            "estimate_emailed_date": {
                              "description": "Email sent date",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate_contacts/delete/{id}": {
      "get": {
        "tags": [
          "Estimate contacts"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate_contacts/get/{id}": {
      "get": {
        "tags": [
          "Estimate contacts"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "estimate_id": {
                              "description": "Estimate id",
                              "type": "integer"
                            },
                            "contact_id": {
                              "description": "Account id",
                              "type": "string"
                            },
                            "estimate_emailed": {
                              "description": "Email send",
                              "type": "boolean"
                            },
                            "estimate_emailed_date": {
                              "description": "Email sent date",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/estimate_contacts/list": {
      "get": {
        "tags": [
          "Estimate contacts"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "estimate_id": {
                                "description": "Estimate id",
                                "type": "integer"
                              },
                              "contact_id": {
                                "description": "Account id",
                                "type": "string"
                              },
                              "estimate_emailed": {
                                "description": "Email send",
                                "type": "boolean"
                              },
                              "estimate_emailed_date": {
                                "description": "Email sent date",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/transaction/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "date": {
                    "description": "Date",
                    "type": "string"
                  },
                  "reference": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "income": {
                    "description": "Transaction title",
                    "type": "number"
                  },
                  "outcome": {
                    "description": "Transaction outcome",
                    "type": "number"
                  },
                  "reference_id": {
                    "description": "The identifier of the record in Money to which the transaction is linked",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Type:<li>10 - Payment</li><li> 20 - Expance  </li>",
                    "type": "integer"
                  },
                  "status": {
                    "description": "Transaction status (Default- 0):<li>10 - Paid</li><li> 0 -Not paid.</li>",
                    "type": "integer"
                  },
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "invoice_id": {
                    "description": "Invoice ID",
                    "type": "integer"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "org_account_id": {
                    "description": "Organization account id",
                    "type": "integer"
                  },
                  "crm_account_id": {
                    "description": "Account id",
                    "type": "integer"
                  },
                  "manager_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "category_id": {
                    "description": "Category id Default- 0",
                    "type": "integer"
                  },
                  "project_money_stage_id": {
                    "description": "Project money stage",
                    "type": "integer"
                  },
                  "project_expense_id": {
                    "description": "Project expense id",
                    "type": "integer"
                  },
                  "is_generated": {
                    "description": "Is generated Default- 0",
                    "type": "boolean"
                  },
                  "is_charge": {
                    "description": "Charges",
                    "type": "boolean"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "integer"
                  },
                  "ref_uuid": {
                    "description": "Reference UUID",
                    "type": "string"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/transaction/update/{id}": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "date": {
                    "description": "Date",
                    "type": "string"
                  },
                  "reference": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "income": {
                    "description": "Transaction title",
                    "type": "number"
                  },
                  "outcome": {
                    "description": "Transaction outcome",
                    "type": "number"
                  },
                  "reference_id": {
                    "description": "The identifier of the record in Money to which the transaction is linked",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Type:<li>10 - Payment</li><li> 20 - Expance  </li>",
                    "type": "integer"
                  },
                  "status": {
                    "description": "Transaction status (Default- 0):<li>10 - Paid</li><li> 0 -Not paid.</li>",
                    "type": "integer"
                  },
                  "project_id": {
                    "description": "Project id",
                    "type": "integer"
                  },
                  "invoice_id": {
                    "description": "Invoice ID",
                    "type": "integer"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "org_account_id": {
                    "description": "Organization account id",
                    "type": "integer"
                  },
                  "crm_account_id": {
                    "description": "Account id",
                    "type": "integer"
                  },
                  "manager_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "category_id": {
                    "description": "Category id Default- 0",
                    "type": "integer"
                  },
                  "project_money_stage_id": {
                    "description": "Project money stage",
                    "type": "integer"
                  },
                  "project_expense_id": {
                    "description": "Project expense id",
                    "type": "integer"
                  },
                  "is_generated": {
                    "description": "Is generated Default- 0",
                    "type": "boolean"
                  },
                  "is_charge": {
                    "description": "Charges",
                    "type": "boolean"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "integer"
                  },
                  "ref_uuid": {
                    "description": "Reference UUID",
                    "type": "string"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "date": {
                              "description": "Date",
                              "type": "string"
                            },
                            "reference": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "income": {
                              "description": "Transaction title",
                              "type": "number"
                            },
                            "outcome": {
                              "description": "Transaction outcome",
                              "type": "number"
                            },
                            "reference_id": {
                              "description": "The identifier of the record in Money to which the transaction is linked",
                              "type": "integer"
                            },
                            "type": {
                              "description": "Type:<li>10 - Payment</li><li> 20 - Expance  </li>",
                              "type": "integer"
                            },
                            "status": {
                              "description": "Transaction status (Default- 0):<li>10 - Paid</li><li> 0 -Not paid.</li>",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "invoice_id": {
                              "description": "Invoice ID",
                              "type": "integer"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "org_account_id": {
                              "description": "Organization account id",
                              "type": "integer"
                            },
                            "crm_account_id": {
                              "description": "Account id",
                              "type": "integer"
                            },
                            "manager_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "category_id": {
                              "description": "Category id Default- 0",
                              "type": "integer"
                            },
                            "project_money_stage_id": {
                              "description": "Project money stage",
                              "type": "integer"
                            },
                            "project_expense_id": {
                              "description": "Project expense id",
                              "type": "integer"
                            },
                            "is_generated": {
                              "description": "Is generated Default- 0",
                              "type": "boolean"
                            },
                            "is_charge": {
                              "description": "Charges",
                              "type": "boolean"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "integer"
                            },
                            "ref_uuid": {
                              "description": "Reference UUID",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/transaction/delete/{id}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/transaction/get/{id}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "date": {
                              "description": "Date",
                              "type": "string"
                            },
                            "reference": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "income": {
                              "description": "Transaction title",
                              "type": "number"
                            },
                            "outcome": {
                              "description": "Transaction outcome",
                              "type": "number"
                            },
                            "reference_id": {
                              "description": "The identifier of the record in Money to which the transaction is linked",
                              "type": "integer"
                            },
                            "type": {
                              "description": "Type:<li>10 - Payment</li><li> 20 - Expance  </li>",
                              "type": "integer"
                            },
                            "status": {
                              "description": "Transaction status (Default- 0):<li>10 - Paid</li><li> 0 -Not paid.</li>",
                              "type": "integer"
                            },
                            "project_id": {
                              "description": "Project id",
                              "type": "integer"
                            },
                            "invoice_id": {
                              "description": "Invoice ID",
                              "type": "integer"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "org_account_id": {
                              "description": "Organization account id",
                              "type": "integer"
                            },
                            "crm_account_id": {
                              "description": "Account id",
                              "type": "integer"
                            },
                            "manager_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "category_id": {
                              "description": "Category id Default- 0",
                              "type": "integer"
                            },
                            "project_money_stage_id": {
                              "description": "Project money stage",
                              "type": "integer"
                            },
                            "project_expense_id": {
                              "description": "Project expense id",
                              "type": "integer"
                            },
                            "is_generated": {
                              "description": "Is generated Default- 0",
                              "type": "boolean"
                            },
                            "is_charge": {
                              "description": "Charges",
                              "type": "boolean"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "integer"
                            },
                            "ref_uuid": {
                              "description": "Reference UUID",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/transaction/list": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "date": {
                                "description": "Date",
                                "type": "string"
                              },
                              "reference": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "income": {
                                "description": "Transaction title",
                                "type": "number"
                              },
                              "outcome": {
                                "description": "Transaction outcome",
                                "type": "number"
                              },
                              "reference_id": {
                                "description": "The identifier of the record in Money to which the transaction is linked",
                                "type": "integer"
                              },
                              "type": {
                                "description": "Type:<li>10 - Payment</li><li> 20 - Expance  </li>",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Transaction status (Default- 0):<li>10 - Paid</li><li> 0 -Not paid.</li>",
                                "type": "integer"
                              },
                              "project_id": {
                                "description": "Project id",
                                "type": "integer"
                              },
                              "invoice_id": {
                                "description": "Invoice ID",
                                "type": "integer"
                              },
                              "org_id": {
                                "description": "Organization id",
                                "type": "integer"
                              },
                              "org_account_id": {
                                "description": "Organization account id",
                                "type": "integer"
                              },
                              "crm_account_id": {
                                "description": "Account id",
                                "type": "integer"
                              },
                              "manager_id": {
                                "description": "Assigned user id",
                                "type": "integer"
                              },
                              "category_id": {
                                "description": "Category id Default- 0",
                                "type": "integer"
                              },
                              "project_money_stage_id": {
                                "description": "Project money stage",
                                "type": "integer"
                              },
                              "project_expense_id": {
                                "description": "Project expense id",
                                "type": "integer"
                              },
                              "is_generated": {
                                "description": "Is generated Default- 0",
                                "type": "boolean"
                              },
                              "is_charge": {
                                "description": "Charges",
                                "type": "boolean"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "integer"
                              },
                              "ref_uuid": {
                                "description": "Reference UUID",
                                "type": "string"
                              },
                              "uuid": {
                                "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/recurring_invoice/create": {
      "post": {
        "tags": [
          "Recurring invoice"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "repeat_type": {
                    "description": "Repeat every",
                    "type": "integer"
                  },
                  "repeat_settings": {
                    "description": "Repeat Every",
                    "type": "string"
                  },
                  "start_date": {
                    "description": "Start date",
                    "type": "string"
                  },
                  "end_date": {
                    "description": "End date",
                    "type": "string"
                  },
                  "next_run_date": {
                    "description": "Recurring invoice next run",
                    "type": "string"
                  },
                  "never_expire": {
                    "description": "Recuring invoice never expire",
                    "type": "integer"
                  },
                  "due_receipt": {
                    "description": "Due receipt",
                    "type": "string"
                  },
                  "create_type": {
                    "description": "Type",
                    "type": "integer"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "assignee_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "customer_name": {
                    "description": "Customer name",
                    "type": "string"
                  },
                  "customer_legal_name": {
                    "description": "Customer legal name ",
                    "type": "string"
                  },
                  "contact_person": {
                    "description": "Contact",
                    "type": "string"
                  },
                  "contact_person_position": {
                    "description": "Contact person position",
                    "type": "string"
                  },
                  "show_add_sign_string": {
                    "description": "Show additional sigh string",
                    "type": "boolean"
                  },
                  "contact_person2": {
                    "description": "Second person",
                    "type": "string"
                  },
                  "contact_person2_position": {
                    "description": "Second contact position",
                    "type": "string"
                  },
                  "currency_id": {
                    "description": "Currency symbol",
                    "type": "integer"
                  },
                  "currency_code": {
                    "description": "Currency code",
                    "type": "string"
                  },
                  "exchange_rate": {
                    "description": "Exchange rate",
                    "type": "number"
                  },
                  "sub_total": {
                    "description": "Sub total",
                    "type": "number"
                  },
                  "tax_total": {
                    "description": "Tax total",
                    "type": "number"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "shipping_charge": {
                    "description": "Shipping charge",
                    "type": "number"
                  },
                  "adjustment": {
                    "description": "Adjustment",
                    "type": "number"
                  },
                  "adjustment_description": {
                    "description": "Adjustment description",
                    "type": "string"
                  },
                  "payment_options": {
                    "description": "Payment options",
                    "type": "string"
                  },
                  "invoice_footer_text": {
                    "description": "Customer Notes",
                    "type": "string"
                  },
                  "invoice_terms_text": {
                    "description": "Terms and Conditions",
                    "type": "string"
                  },
                  "bill_from_address": {
                    "description": "Bill from address",
                    "type": "string"
                  },
                  "bill_from_city": {
                    "description": "Bill from city",
                    "type": "string"
                  },
                  "bill_from_state": {
                    "description": "Bill from state",
                    "type": "string"
                  },
                  "bill_from_zip": {
                    "description": "Bill from zip",
                    "type": "string"
                  },
                  "bill_from_country_id": {
                    "description": "Bill from country",
                    "type": "integer"
                  },
                  "bill_to_address": {
                    "description": "Address",
                    "type": "string"
                  },
                  "bill_to_city": {
                    "description": "Bill to city",
                    "type": "string"
                  },
                  "bill_to_state": {
                    "description": "Bill to state",
                    "type": "string"
                  },
                  "bill_to_zip": {
                    "description": "Bill to ZIP",
                    "type": "string"
                  },
                  "bill_to_country_id": {
                    "description": "Country ID",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "module": {
                    "description": "Module",
                    "type": "string"
                  },
                  "model": {
                    "description": "Model",
                    "type": "string"
                  },
                  "model_id": {
                    "description": "Model id",
                    "type": "integer"
                  },
                  "group_id": {
                    "description": "Group id",
                    "type": "integer"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "company_phone": {
                    "description": "Phone",
                    "type": "string"
                  },
                  "company_phone2": {
                    "description": "Company second phone",
                    "type": "string"
                  },
                  "company_vat": {
                    "description": "VAT",
                    "type": "string"
                  },
                  "company_vat2": {
                    "description": "VAT2",
                    "type": "string"
                  },
                  "org_phone": {
                    "description": "Organization phone",
                    "type": "string"
                  },
                  "org_phone2": {
                    "description": "Organization phone",
                    "type": "string"
                  },
                  "org_vat": {
                    "description": "Organization VAT ",
                    "type": "string"
                  },
                  "org_vat2": {
                    "description": "Organization VAT 2",
                    "type": "string"
                  },
                  "tax1": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax2": {
                    "description": "Tax 2 (%)",
                    "type": "number"
                  },
                  "tax1_included": {
                    "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax2_included": {
                    "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "discount": {
                    "description": "Discount",
                    "type": "number"
                  },
                  "discount_before_tax": {
                    "description": "Discount before tax",
                    "type": "boolean"
                  },
                  "is_discount_percent": {
                    "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                    "type": "boolean"
                  },
                  "customer_id": {
                    "description": "Customer id",
                    "type": "integer"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  },
                  "pricelist_id": {
                    "description": "Price list id",
                    "type": "integer"
                  },
                  "paymethod_id": {
                    "description": "Payment method",
                    "type": "integer"
                  },
                  "reference": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/recurring_invoice/update/{id}": {
      "post": {
        "tags": [
          "Recurring invoice"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "repeat_type": {
                    "description": "Repeat every",
                    "type": "integer"
                  },
                  "repeat_settings": {
                    "description": "Repeat Every",
                    "type": "string"
                  },
                  "start_date": {
                    "description": "Start date",
                    "type": "string"
                  },
                  "end_date": {
                    "description": "End date",
                    "type": "string"
                  },
                  "next_run_date": {
                    "description": "Recurring invoice next run",
                    "type": "string"
                  },
                  "never_expire": {
                    "description": "Recuring invoice never expire",
                    "type": "integer"
                  },
                  "due_receipt": {
                    "description": "Due receipt",
                    "type": "string"
                  },
                  "create_type": {
                    "description": "Type",
                    "type": "integer"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "assignee_id": {
                    "description": "Assigned user id",
                    "type": "integer"
                  },
                  "customer_name": {
                    "description": "Customer name",
                    "type": "string"
                  },
                  "customer_legal_name": {
                    "description": "Customer legal name ",
                    "type": "string"
                  },
                  "contact_person": {
                    "description": "Contact",
                    "type": "string"
                  },
                  "contact_person_position": {
                    "description": "Contact person position",
                    "type": "string"
                  },
                  "show_add_sign_string": {
                    "description": "Show additional sigh string",
                    "type": "boolean"
                  },
                  "contact_person2": {
                    "description": "Second person",
                    "type": "string"
                  },
                  "contact_person2_position": {
                    "description": "Second contact position",
                    "type": "string"
                  },
                  "currency_id": {
                    "description": "Currency symbol",
                    "type": "integer"
                  },
                  "currency_code": {
                    "description": "Currency code",
                    "type": "string"
                  },
                  "exchange_rate": {
                    "description": "Exchange rate",
                    "type": "number"
                  },
                  "sub_total": {
                    "description": "Sub total",
                    "type": "number"
                  },
                  "tax_total": {
                    "description": "Tax total",
                    "type": "number"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "shipping_charge": {
                    "description": "Shipping charge",
                    "type": "number"
                  },
                  "adjustment": {
                    "description": "Adjustment",
                    "type": "number"
                  },
                  "adjustment_description": {
                    "description": "Adjustment description",
                    "type": "string"
                  },
                  "payment_options": {
                    "description": "Payment options",
                    "type": "string"
                  },
                  "invoice_footer_text": {
                    "description": "Customer Notes",
                    "type": "string"
                  },
                  "invoice_terms_text": {
                    "description": "Terms and Conditions",
                    "type": "string"
                  },
                  "bill_from_address": {
                    "description": "Bill from address",
                    "type": "string"
                  },
                  "bill_from_city": {
                    "description": "Bill from city",
                    "type": "string"
                  },
                  "bill_from_state": {
                    "description": "Bill from state",
                    "type": "string"
                  },
                  "bill_from_zip": {
                    "description": "Bill from zip",
                    "type": "string"
                  },
                  "bill_from_country_id": {
                    "description": "Bill from country",
                    "type": "integer"
                  },
                  "bill_to_address": {
                    "description": "Address",
                    "type": "string"
                  },
                  "bill_to_city": {
                    "description": "Bill to city",
                    "type": "string"
                  },
                  "bill_to_state": {
                    "description": "Bill to state",
                    "type": "string"
                  },
                  "bill_to_zip": {
                    "description": "Bill to ZIP",
                    "type": "string"
                  },
                  "bill_to_country_id": {
                    "description": "Country ID",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "module": {
                    "description": "Module",
                    "type": "string"
                  },
                  "model": {
                    "description": "Model",
                    "type": "string"
                  },
                  "model_id": {
                    "description": "Model id",
                    "type": "integer"
                  },
                  "group_id": {
                    "description": "Group id",
                    "type": "integer"
                  },
                  "org_id": {
                    "description": "Organization id",
                    "type": "integer"
                  },
                  "company_phone": {
                    "description": "Phone",
                    "type": "string"
                  },
                  "company_phone2": {
                    "description": "Company second phone",
                    "type": "string"
                  },
                  "company_vat": {
                    "description": "VAT",
                    "type": "string"
                  },
                  "company_vat2": {
                    "description": "VAT2",
                    "type": "string"
                  },
                  "org_phone": {
                    "description": "Organization phone",
                    "type": "string"
                  },
                  "org_phone2": {
                    "description": "Organization phone",
                    "type": "string"
                  },
                  "org_vat": {
                    "description": "Organization VAT ",
                    "type": "string"
                  },
                  "org_vat2": {
                    "description": "Organization VAT 2",
                    "type": "string"
                  },
                  "tax1": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax2": {
                    "description": "Tax 2 (%)",
                    "type": "number"
                  },
                  "tax1_included": {
                    "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax2_included": {
                    "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "discount": {
                    "description": "Discount",
                    "type": "number"
                  },
                  "discount_before_tax": {
                    "description": "Discount before tax",
                    "type": "boolean"
                  },
                  "is_discount_percent": {
                    "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                    "type": "boolean"
                  },
                  "customer_id": {
                    "description": "Customer id",
                    "type": "integer"
                  },
                  "uuid": {
                    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                    "type": "string"
                  },
                  "pricelist_id": {
                    "description": "Price list id",
                    "type": "integer"
                  },
                  "paymethod_id": {
                    "description": "Payment method",
                    "type": "integer"
                  },
                  "reference": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "repeat_type": {
                              "description": "Repeat every",
                              "type": "integer"
                            },
                            "repeat_settings": {
                              "description": "Repeat Every",
                              "type": "string"
                            },
                            "start_date": {
                              "description": "Start date",
                              "type": "string"
                            },
                            "end_date": {
                              "description": "End date",
                              "type": "string"
                            },
                            "next_run_date": {
                              "description": "Recurring invoice next run",
                              "type": "string"
                            },
                            "never_expire": {
                              "description": "Recuring invoice never expire",
                              "type": "integer"
                            },
                            "due_receipt": {
                              "description": "Due receipt",
                              "type": "string"
                            },
                            "create_type": {
                              "description": "Type",
                              "type": "integer"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "assignee_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "customer_name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "customer_legal_name": {
                              "description": "Customer legal name ",
                              "type": "string"
                            },
                            "contact_person": {
                              "description": "Contact",
                              "type": "string"
                            },
                            "contact_person_position": {
                              "description": "Contact person position",
                              "type": "string"
                            },
                            "show_add_sign_string": {
                              "description": "Show additional sigh string",
                              "type": "boolean"
                            },
                            "contact_person2": {
                              "description": "Second person",
                              "type": "string"
                            },
                            "contact_person2_position": {
                              "description": "Second contact position",
                              "type": "string"
                            },
                            "currency_id": {
                              "description": "Currency symbol",
                              "type": "integer"
                            },
                            "currency_code": {
                              "description": "Currency code",
                              "type": "string"
                            },
                            "exchange_rate": {
                              "description": "Exchange rate",
                              "type": "number"
                            },
                            "sub_total": {
                              "description": "Sub total",
                              "type": "number"
                            },
                            "tax_total": {
                              "description": "Tax total",
                              "type": "number"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "shipping_charge": {
                              "description": "Shipping charge",
                              "type": "number"
                            },
                            "adjustment": {
                              "description": "Adjustment",
                              "type": "number"
                            },
                            "adjustment_description": {
                              "description": "Adjustment description",
                              "type": "string"
                            },
                            "payment_options": {
                              "description": "Payment options",
                              "type": "string"
                            },
                            "invoice_footer_text": {
                              "description": "Customer Notes",
                              "type": "string"
                            },
                            "invoice_terms_text": {
                              "description": "Terms and Conditions",
                              "type": "string"
                            },
                            "bill_from_address": {
                              "description": "Bill from address",
                              "type": "string"
                            },
                            "bill_from_city": {
                              "description": "Bill from city",
                              "type": "string"
                            },
                            "bill_from_state": {
                              "description": "Bill from state",
                              "type": "string"
                            },
                            "bill_from_zip": {
                              "description": "Bill from zip",
                              "type": "string"
                            },
                            "bill_from_country_id": {
                              "description": "Bill from country",
                              "type": "integer"
                            },
                            "bill_to_address": {
                              "description": "Address",
                              "type": "string"
                            },
                            "bill_to_city": {
                              "description": "Bill to city",
                              "type": "string"
                            },
                            "bill_to_state": {
                              "description": "Bill to state",
                              "type": "string"
                            },
                            "bill_to_zip": {
                              "description": "Bill to ZIP",
                              "type": "string"
                            },
                            "bill_to_country_id": {
                              "description": "Country ID",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "module": {
                              "description": "Module",
                              "type": "string"
                            },
                            "model": {
                              "description": "Model",
                              "type": "string"
                            },
                            "model_id": {
                              "description": "Model id",
                              "type": "integer"
                            },
                            "group_id": {
                              "description": "Group id",
                              "type": "integer"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "company_phone": {
                              "description": "Phone",
                              "type": "string"
                            },
                            "company_phone2": {
                              "description": "Company second phone",
                              "type": "string"
                            },
                            "company_vat": {
                              "description": "VAT",
                              "type": "string"
                            },
                            "company_vat2": {
                              "description": "VAT2",
                              "type": "string"
                            },
                            "org_phone": {
                              "description": "Organization phone",
                              "type": "string"
                            },
                            "org_phone2": {
                              "description": "Organization phone",
                              "type": "string"
                            },
                            "org_vat": {
                              "description": "Organization VAT ",
                              "type": "string"
                            },
                            "org_vat2": {
                              "description": "Organization VAT 2",
                              "type": "string"
                            },
                            "tax1": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax2": {
                              "description": "Tax 2 (%)",
                              "type": "number"
                            },
                            "tax1_included": {
                              "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax2_included": {
                              "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "discount": {
                              "description": "Discount",
                              "type": "number"
                            },
                            "discount_before_tax": {
                              "description": "Discount before tax",
                              "type": "boolean"
                            },
                            "is_discount_percent": {
                              "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                              "type": "boolean"
                            },
                            "customer_id": {
                              "description": "Customer id",
                              "type": "integer"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            },
                            "pricelist_id": {
                              "description": "Price list id",
                              "type": "integer"
                            },
                            "paymethod_id": {
                              "description": "Payment method",
                              "type": "integer"
                            },
                            "reference": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/recurring_invoice/delete/{id}": {
      "get": {
        "tags": [
          "Recurring invoice"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/recurring_invoice/get/{id}": {
      "get": {
        "tags": [
          "Recurring invoice"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "repeat_type": {
                              "description": "Repeat every",
                              "type": "integer"
                            },
                            "repeat_settings": {
                              "description": "Repeat Every",
                              "type": "string"
                            },
                            "start_date": {
                              "description": "Start date",
                              "type": "string"
                            },
                            "end_date": {
                              "description": "End date",
                              "type": "string"
                            },
                            "next_run_date": {
                              "description": "Recurring invoice next run",
                              "type": "string"
                            },
                            "never_expire": {
                              "description": "Recuring invoice never expire",
                              "type": "integer"
                            },
                            "due_receipt": {
                              "description": "Due receipt",
                              "type": "string"
                            },
                            "create_type": {
                              "description": "Type",
                              "type": "integer"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "assignee_id": {
                              "description": "Assigned user id",
                              "type": "integer"
                            },
                            "customer_name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "customer_legal_name": {
                              "description": "Customer legal name ",
                              "type": "string"
                            },
                            "contact_person": {
                              "description": "Contact",
                              "type": "string"
                            },
                            "contact_person_position": {
                              "description": "Contact person position",
                              "type": "string"
                            },
                            "show_add_sign_string": {
                              "description": "Show additional sigh string",
                              "type": "boolean"
                            },
                            "contact_person2": {
                              "description": "Second person",
                              "type": "string"
                            },
                            "contact_person2_position": {
                              "description": "Second contact position",
                              "type": "string"
                            },
                            "currency_id": {
                              "description": "Currency symbol",
                              "type": "integer"
                            },
                            "currency_code": {
                              "description": "Currency code",
                              "type": "string"
                            },
                            "exchange_rate": {
                              "description": "Exchange rate",
                              "type": "number"
                            },
                            "sub_total": {
                              "description": "Sub total",
                              "type": "number"
                            },
                            "tax_total": {
                              "description": "Tax total",
                              "type": "number"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "shipping_charge": {
                              "description": "Shipping charge",
                              "type": "number"
                            },
                            "adjustment": {
                              "description": "Adjustment",
                              "type": "number"
                            },
                            "adjustment_description": {
                              "description": "Adjustment description",
                              "type": "string"
                            },
                            "payment_options": {
                              "description": "Payment options",
                              "type": "string"
                            },
                            "invoice_footer_text": {
                              "description": "Customer Notes",
                              "type": "string"
                            },
                            "invoice_terms_text": {
                              "description": "Terms and Conditions",
                              "type": "string"
                            },
                            "bill_from_address": {
                              "description": "Bill from address",
                              "type": "string"
                            },
                            "bill_from_city": {
                              "description": "Bill from city",
                              "type": "string"
                            },
                            "bill_from_state": {
                              "description": "Bill from state",
                              "type": "string"
                            },
                            "bill_from_zip": {
                              "description": "Bill from zip",
                              "type": "string"
                            },
                            "bill_from_country_id": {
                              "description": "Bill from country",
                              "type": "integer"
                            },
                            "bill_to_address": {
                              "description": "Address",
                              "type": "string"
                            },
                            "bill_to_city": {
                              "description": "Bill to city",
                              "type": "string"
                            },
                            "bill_to_state": {
                              "description": "Bill to state",
                              "type": "string"
                            },
                            "bill_to_zip": {
                              "description": "Bill to ZIP",
                              "type": "string"
                            },
                            "bill_to_country_id": {
                              "description": "Country ID",
                              "type": "integer"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "module": {
                              "description": "Module",
                              "type": "string"
                            },
                            "model": {
                              "description": "Model",
                              "type": "string"
                            },
                            "model_id": {
                              "description": "Model id",
                              "type": "integer"
                            },
                            "group_id": {
                              "description": "Group id",
                              "type": "integer"
                            },
                            "org_id": {
                              "description": "Organization id",
                              "type": "integer"
                            },
                            "company_phone": {
                              "description": "Phone",
                              "type": "string"
                            },
                            "company_phone2": {
                              "description": "Company second phone",
                              "type": "string"
                            },
                            "company_vat": {
                              "description": "VAT",
                              "type": "string"
                            },
                            "company_vat2": {
                              "description": "VAT2",
                              "type": "string"
                            },
                            "org_phone": {
                              "description": "Organization phone",
                              "type": "string"
                            },
                            "org_phone2": {
                              "description": "Organization phone",
                              "type": "string"
                            },
                            "org_vat": {
                              "description": "Organization VAT ",
                              "type": "string"
                            },
                            "org_vat2": {
                              "description": "Organization VAT 2",
                              "type": "string"
                            },
                            "tax1": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax2": {
                              "description": "Tax 2 (%)",
                              "type": "number"
                            },
                            "tax1_included": {
                              "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax2_included": {
                              "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "discount": {
                              "description": "Discount",
                              "type": "number"
                            },
                            "discount_before_tax": {
                              "description": "Discount before tax",
                              "type": "boolean"
                            },
                            "is_discount_percent": {
                              "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                              "type": "boolean"
                            },
                            "customer_id": {
                              "description": "Customer id",
                              "type": "integer"
                            },
                            "uuid": {
                              "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                              "type": "string"
                            },
                            "pricelist_id": {
                              "description": "Price list id",
                              "type": "integer"
                            },
                            "paymethod_id": {
                              "description": "Payment method",
                              "type": "integer"
                            },
                            "reference": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/recurring_invoice/list": {
      "get": {
        "tags": [
          "Recurring invoice"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "repeat_type": {
                                "description": "Repeat every",
                                "type": "integer"
                              },
                              "repeat_settings": {
                                "description": "Repeat Every",
                                "type": "string"
                              },
                              "start_date": {
                                "description": "Start date",
                                "type": "string"
                              },
                              "end_date": {
                                "description": "End date",
                                "type": "string"
                              },
                              "next_run_date": {
                                "description": "Recurring invoice next run",
                                "type": "string"
                              },
                              "never_expire": {
                                "description": "Recuring invoice never expire",
                                "type": "integer"
                              },
                              "due_receipt": {
                                "description": "Due receipt",
                                "type": "string"
                              },
                              "create_type": {
                                "description": "Type",
                                "type": "integer"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              },
                              "assignee_id": {
                                "description": "Assigned user id",
                                "type": "integer"
                              },
                              "customer_name": {
                                "description": "Customer name",
                                "type": "string"
                              },
                              "customer_legal_name": {
                                "description": "Customer legal name ",
                                "type": "string"
                              },
                              "contact_person": {
                                "description": "Contact",
                                "type": "string"
                              },
                              "contact_person_position": {
                                "description": "Contact person position",
                                "type": "string"
                              },
                              "show_add_sign_string": {
                                "description": "Show additional sigh string",
                                "type": "boolean"
                              },
                              "contact_person2": {
                                "description": "Second person",
                                "type": "string"
                              },
                              "contact_person2_position": {
                                "description": "Second contact position",
                                "type": "string"
                              },
                              "currency_id": {
                                "description": "Currency symbol",
                                "type": "integer"
                              },
                              "currency_code": {
                                "description": "Currency code",
                                "type": "string"
                              },
                              "exchange_rate": {
                                "description": "Exchange rate",
                                "type": "number"
                              },
                              "sub_total": {
                                "description": "Sub total",
                                "type": "number"
                              },
                              "tax_total": {
                                "description": "Tax total",
                                "type": "number"
                              },
                              "total": {
                                "description": "Total",
                                "type": "number"
                              },
                              "shipping_charge": {
                                "description": "Shipping charge",
                                "type": "number"
                              },
                              "adjustment": {
                                "description": "Adjustment",
                                "type": "number"
                              },
                              "adjustment_description": {
                                "description": "Adjustment description",
                                "type": "string"
                              },
                              "payment_options": {
                                "description": "Payment options",
                                "type": "string"
                              },
                              "invoice_footer_text": {
                                "description": "Customer Notes",
                                "type": "string"
                              },
                              "invoice_terms_text": {
                                "description": "Terms and Conditions",
                                "type": "string"
                              },
                              "bill_from_address": {
                                "description": "Bill from address",
                                "type": "string"
                              },
                              "bill_from_city": {
                                "description": "Bill from city",
                                "type": "string"
                              },
                              "bill_from_state": {
                                "description": "Bill from state",
                                "type": "string"
                              },
                              "bill_from_zip": {
                                "description": "Bill from zip",
                                "type": "string"
                              },
                              "bill_from_country_id": {
                                "description": "Bill from country",
                                "type": "integer"
                              },
                              "bill_to_address": {
                                "description": "Address",
                                "type": "string"
                              },
                              "bill_to_city": {
                                "description": "Bill to city",
                                "type": "string"
                              },
                              "bill_to_state": {
                                "description": "Bill to state",
                                "type": "string"
                              },
                              "bill_to_zip": {
                                "description": "Bill to ZIP",
                                "type": "string"
                              },
                              "bill_to_country_id": {
                                "description": "Country ID",
                                "type": "integer"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "module": {
                                "description": "Module",
                                "type": "string"
                              },
                              "model": {
                                "description": "Model",
                                "type": "string"
                              },
                              "model_id": {
                                "description": "Model id",
                                "type": "integer"
                              },
                              "group_id": {
                                "description": "Group id",
                                "type": "integer"
                              },
                              "org_id": {
                                "description": "Organization id",
                                "type": "integer"
                              },
                              "company_phone": {
                                "description": "Phone",
                                "type": "string"
                              },
                              "company_phone2": {
                                "description": "Company second phone",
                                "type": "string"
                              },
                              "company_vat": {
                                "description": "VAT",
                                "type": "string"
                              },
                              "company_vat2": {
                                "description": "VAT2",
                                "type": "string"
                              },
                              "org_phone": {
                                "description": "Organization phone",
                                "type": "string"
                              },
                              "org_phone2": {
                                "description": "Organization phone",
                                "type": "string"
                              },
                              "org_vat": {
                                "description": "Organization VAT ",
                                "type": "string"
                              },
                              "org_vat2": {
                                "description": "Organization VAT 2",
                                "type": "string"
                              },
                              "tax1": {
                                "description": "Tax 1 (%)",
                                "type": "number"
                              },
                              "tax2": {
                                "description": "Tax 2 (%)",
                                "type": "number"
                              },
                              "tax1_included": {
                                "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                                "type": "boolean"
                              },
                              "tax2_included": {
                                "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                                "type": "boolean"
                              },
                              "discount": {
                                "description": "Discount",
                                "type": "number"
                              },
                              "discount_before_tax": {
                                "description": "Discount before tax",
                                "type": "boolean"
                              },
                              "is_discount_percent": {
                                "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                                "type": "boolean"
                              },
                              "customer_id": {
                                "description": "Customer id",
                                "type": "integer"
                              },
                              "uuid": {
                                "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems",
                                "type": "string"
                              },
                              "pricelist_id": {
                                "description": "Price list id",
                                "type": "integer"
                              },
                              "paymethod_id": {
                                "description": "Payment method",
                                "type": "integer"
                              },
                              "reference": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/recurring_invoice_item/create": {
      "post": {
        "tags": [
          "Recurring Invoice settings"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "invoice_id": {
                    "description": "Invoice ID",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "item_id": {
                    "description": "Item id",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "unit_price": {
                    "description": "Unit price",
                    "type": "number"
                  },
                  "unit": {
                    "description": "",
                    "type": "string"
                  },
                  "quantity": {
                    "description": "Quantity",
                    "type": "number"
                  },
                  "tax1": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax1_included": {
                    "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax1_amount": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax2": {
                    "description": "Tax 2 (%)",
                    "type": "number"
                  },
                  "tax2_included": {
                    "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax2_amount": {
                    "description": "Tax ",
                    "type": "number"
                  },
                  "discount_amount": {
                    "description": "Discount ",
                    "type": "number"
                  },
                  "discount": {
                    "description": "Discount",
                    "type": "string"
                  },
                  "discount_is_percent": {
                    "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                    "type": "integer"
                  },
                  "sub_total": {
                    "description": "Sub total",
                    "type": "number"
                  },
                  "tax_total": {
                    "description": "Tax total",
                    "type": "number"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "online_payment_type": {
                    "description": "Online payment type",
                    "type": "integer"
                  },
                  "online_payment_subject_type": {
                    "description": "Online payment type",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/recurring_invoice_item/update/{id}": {
      "post": {
        "tags": [
          "Recurring Invoice settings"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "invoice_id": {
                    "description": "Invoice ID",
                    "type": "integer"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "item_id": {
                    "description": "Item id",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "unit_price": {
                    "description": "Unit price",
                    "type": "number"
                  },
                  "unit": {
                    "description": "",
                    "type": "string"
                  },
                  "quantity": {
                    "description": "Quantity",
                    "type": "number"
                  },
                  "tax1": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax1_included": {
                    "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax1_amount": {
                    "description": "Tax 1 (%)",
                    "type": "number"
                  },
                  "tax2": {
                    "description": "Tax 2 (%)",
                    "type": "number"
                  },
                  "tax2_included": {
                    "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                    "type": "boolean"
                  },
                  "tax2_amount": {
                    "description": "Tax ",
                    "type": "number"
                  },
                  "discount_amount": {
                    "description": "Discount ",
                    "type": "number"
                  },
                  "discount": {
                    "description": "Discount",
                    "type": "string"
                  },
                  "discount_is_percent": {
                    "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                    "type": "integer"
                  },
                  "sub_total": {
                    "description": "Sub total",
                    "type": "number"
                  },
                  "tax_total": {
                    "description": "Tax total",
                    "type": "number"
                  },
                  "total": {
                    "description": "Total",
                    "type": "number"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "online_payment_type": {
                    "description": "Online payment type",
                    "type": "integer"
                  },
                  "online_payment_subject_type": {
                    "description": "Online payment type",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "invoice_id": {
                              "description": "Invoice ID",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "item_id": {
                              "description": "Item id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "unit_price": {
                              "description": "Unit price",
                              "type": "number"
                            },
                            "unit": {
                              "description": "",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "Quantity",
                              "type": "number"
                            },
                            "tax1": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax1_included": {
                              "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax1_amount": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax2": {
                              "description": "Tax 2 (%)",
                              "type": "number"
                            },
                            "tax2_included": {
                              "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax2_amount": {
                              "description": "Tax ",
                              "type": "number"
                            },
                            "discount_amount": {
                              "description": "Discount ",
                              "type": "number"
                            },
                            "discount": {
                              "description": "Discount",
                              "type": "string"
                            },
                            "discount_is_percent": {
                              "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                              "type": "integer"
                            },
                            "sub_total": {
                              "description": "Sub total",
                              "type": "number"
                            },
                            "tax_total": {
                              "description": "Tax total",
                              "type": "number"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "online_payment_type": {
                              "description": "Online payment type",
                              "type": "integer"
                            },
                            "online_payment_subject_type": {
                              "description": "Online payment type",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/recurring_invoice_item/delete/{id}": {
      "get": {
        "tags": [
          "Recurring Invoice settings"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/recurring_invoice_item/get/{id}": {
      "get": {
        "tags": [
          "Recurring Invoice settings"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "invoice_id": {
                              "description": "Invoice ID",
                              "type": "integer"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "item_id": {
                              "description": "Item id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "unit_price": {
                              "description": "Unit price",
                              "type": "number"
                            },
                            "unit": {
                              "description": "",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "Quantity",
                              "type": "number"
                            },
                            "tax1": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax1_included": {
                              "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax1_amount": {
                              "description": "Tax 1 (%)",
                              "type": "number"
                            },
                            "tax2": {
                              "description": "Tax 2 (%)",
                              "type": "number"
                            },
                            "tax2_included": {
                              "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                              "type": "boolean"
                            },
                            "tax2_amount": {
                              "description": "Tax ",
                              "type": "number"
                            },
                            "discount_amount": {
                              "description": "Discount ",
                              "type": "number"
                            },
                            "discount": {
                              "description": "Discount",
                              "type": "string"
                            },
                            "discount_is_percent": {
                              "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                              "type": "integer"
                            },
                            "sub_total": {
                              "description": "Sub total",
                              "type": "number"
                            },
                            "tax_total": {
                              "description": "Tax total",
                              "type": "number"
                            },
                            "total": {
                              "description": "Total",
                              "type": "number"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "online_payment_type": {
                              "description": "Online payment type",
                              "type": "integer"
                            },
                            "online_payment_subject_type": {
                              "description": "Online payment type",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fin/recurring_invoice_item/list": {
      "get": {
        "tags": [
          "Recurring Invoice settings"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "invoice_id": {
                                "description": "Invoice ID",
                                "type": "integer"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "item_id": {
                                "description": "Item id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "unit_price": {
                                "description": "Unit price",
                                "type": "number"
                              },
                              "unit": {
                                "description": "",
                                "type": "string"
                              },
                              "quantity": {
                                "description": "Quantity",
                                "type": "number"
                              },
                              "tax1": {
                                "description": "Tax 1 (%)",
                                "type": "number"
                              },
                              "tax1_included": {
                                "description": "<li>1 - Include in price</li><li>0 - Not included</li>",
                                "type": "boolean"
                              },
                              "tax1_amount": {
                                "description": "Tax 1 (%)",
                                "type": "number"
                              },
                              "tax2": {
                                "description": "Tax 2 (%)",
                                "type": "number"
                              },
                              "tax2_included": {
                                "description": "TAX2:<li>1 - Include in price</li><li>0 - Not included</li>",
                                "type": "boolean"
                              },
                              "tax2_amount": {
                                "description": "Tax ",
                                "type": "number"
                              },
                              "discount_amount": {
                                "description": "Discount ",
                                "type": "number"
                              },
                              "discount": {
                                "description": "Discount",
                                "type": "string"
                              },
                              "discount_is_percent": {
                                "description": "Is discount percent (Default - 1):<li>1 - Yes</li><li>0 - No</li><br> Default - 1",
                                "type": "integer"
                              },
                              "sub_total": {
                                "description": "Sub total",
                                "type": "number"
                              },
                              "tax_total": {
                                "description": "Tax total",
                                "type": "number"
                              },
                              "total": {
                                "description": "Total",
                                "type": "number"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              },
                              "online_payment_type": {
                                "description": "Online payment type",
                                "type": "integer"
                              },
                              "online_payment_subject_type": {
                                "description": "Online payment type",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timetracker/timesheets/create": {
      "post": {
        "tags": [
          "Time sheet"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "parent_sheet_id": {
                    "description": "Parent sheet id",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "is_billable": {
                    "description": "Is billable",
                    "type": "boolean"
                  },
                  "aggregated_time_estimate": {
                    "description": "Aggregated time estimate",
                    "type": "integer"
                  },
                  "time_estimate": {
                    "description": "Time estimate",
                    "type": "integer"
                  },
                  "time_spent": {
                    "description": "Time spent",
                    "type": "integer"
                  },
                  "rate": {
                    "description": "Rate",
                    "type": "number"
                  },
                  "billing_rate": {
                    "description": "Billing rate",
                    "type": "number"
                  },
                  "amount_timespent": {
                    "description": "Amount time spent",
                    "type": "number"
                  },
                  "bill_amount_timespent": {
                    "description": "Parent sheet id",
                    "type": "number"
                  },
                  "amount_timeestimate": {
                    "description": "Amount time estimate",
                    "type": "number"
                  },
                  "bill_amount_timeestimate": {
                    "description": "Bill amount time estimate",
                    "type": "number"
                  },
                  "currency_id": {
                    "description": "Currency symbol",
                    "type": "integer"
                  },
                  "module": {
                    "description": "Module",
                    "type": "string"
                  },
                  "model": {
                    "description": "Model",
                    "type": "string"
                  },
                  "model_id": {
                    "description": "Model id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "bill_time": {
                    "description": "Bill time",
                    "type": "integer"
                  },
                  "unbill_time": {
                    "description": "Unbilled time",
                    "type": "integer"
                  },
                  "bill_time_type": {
                    "description": "Billed time type",
                    "type": "string"
                  },
                  "billing_status": {
                    "description": "Billing status",
                    "type": "integer"
                  },
                  "invoice_id": {
                    "description": "Invoice ID",
                    "type": "integer"
                  },
                  "bill_time_estimate": {
                    "description": "Bill time estimate",
                    "type": "integer"
                  },
                  "unbill_time_estimate": {
                    "description": "Unbill time estimate",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timetracker/timesheets/update/{id}": {
      "post": {
        "tags": [
          "Time sheet"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "parent_sheet_id": {
                    "description": "Parent sheet id",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "is_billable": {
                    "description": "Is billable",
                    "type": "boolean"
                  },
                  "aggregated_time_estimate": {
                    "description": "Aggregated time estimate",
                    "type": "integer"
                  },
                  "time_estimate": {
                    "description": "Time estimate",
                    "type": "integer"
                  },
                  "time_spent": {
                    "description": "Time spent",
                    "type": "integer"
                  },
                  "rate": {
                    "description": "Rate",
                    "type": "number"
                  },
                  "billing_rate": {
                    "description": "Billing rate",
                    "type": "number"
                  },
                  "amount_timespent": {
                    "description": "Amount time spent",
                    "type": "number"
                  },
                  "bill_amount_timespent": {
                    "description": "Parent sheet id",
                    "type": "number"
                  },
                  "amount_timeestimate": {
                    "description": "Amount time estimate",
                    "type": "number"
                  },
                  "bill_amount_timeestimate": {
                    "description": "Bill amount time estimate",
                    "type": "number"
                  },
                  "currency_id": {
                    "description": "Currency symbol",
                    "type": "integer"
                  },
                  "module": {
                    "description": "Module",
                    "type": "string"
                  },
                  "model": {
                    "description": "Model",
                    "type": "string"
                  },
                  "model_id": {
                    "description": "Model id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "bill_time": {
                    "description": "Bill time",
                    "type": "integer"
                  },
                  "unbill_time": {
                    "description": "Unbilled time",
                    "type": "integer"
                  },
                  "bill_time_type": {
                    "description": "Billed time type",
                    "type": "string"
                  },
                  "billing_status": {
                    "description": "Billing status",
                    "type": "integer"
                  },
                  "invoice_id": {
                    "description": "Invoice ID",
                    "type": "integer"
                  },
                  "bill_time_estimate": {
                    "description": "Bill time estimate",
                    "type": "integer"
                  },
                  "unbill_time_estimate": {
                    "description": "Unbill time estimate",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "parent_sheet_id": {
                              "description": "Parent sheet id",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "is_billable": {
                              "description": "Is billable",
                              "type": "boolean"
                            },
                            "aggregated_time_estimate": {
                              "description": "Aggregated time estimate",
                              "type": "integer"
                            },
                            "time_estimate": {
                              "description": "Time estimate",
                              "type": "integer"
                            },
                            "time_spent": {
                              "description": "Time spent",
                              "type": "integer"
                            },
                            "rate": {
                              "description": "Rate",
                              "type": "number"
                            },
                            "billing_rate": {
                              "description": "Billing rate",
                              "type": "number"
                            },
                            "amount_timespent": {
                              "description": "Amount time spent",
                              "type": "number"
                            },
                            "bill_amount_timespent": {
                              "description": "Parent sheet id",
                              "type": "number"
                            },
                            "amount_timeestimate": {
                              "description": "Amount time estimate",
                              "type": "number"
                            },
                            "bill_amount_timeestimate": {
                              "description": "Bill amount time estimate",
                              "type": "number"
                            },
                            "currency_id": {
                              "description": "Currency symbol",
                              "type": "integer"
                            },
                            "module": {
                              "description": "Module",
                              "type": "string"
                            },
                            "model": {
                              "description": "Model",
                              "type": "string"
                            },
                            "model_id": {
                              "description": "Model id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "bill_time": {
                              "description": "Bill time",
                              "type": "integer"
                            },
                            "unbill_time": {
                              "description": "Unbilled time",
                              "type": "integer"
                            },
                            "bill_time_type": {
                              "description": "Billed time type",
                              "type": "string"
                            },
                            "billing_status": {
                              "description": "Billing status",
                              "type": "integer"
                            },
                            "invoice_id": {
                              "description": "Invoice ID",
                              "type": "integer"
                            },
                            "bill_time_estimate": {
                              "description": "Bill time estimate",
                              "type": "integer"
                            },
                            "unbill_time_estimate": {
                              "description": "Unbill time estimate",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timetracker/timesheets/delete/{id}": {
      "get": {
        "tags": [
          "Time sheet"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timetracker/timesheets/get/{id}": {
      "get": {
        "tags": [
          "Time sheet"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "parent_sheet_id": {
                              "description": "Parent sheet id",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "is_billable": {
                              "description": "Is billable",
                              "type": "boolean"
                            },
                            "aggregated_time_estimate": {
                              "description": "Aggregated time estimate",
                              "type": "integer"
                            },
                            "time_estimate": {
                              "description": "Time estimate",
                              "type": "integer"
                            },
                            "time_spent": {
                              "description": "Time spent",
                              "type": "integer"
                            },
                            "rate": {
                              "description": "Rate",
                              "type": "number"
                            },
                            "billing_rate": {
                              "description": "Billing rate",
                              "type": "number"
                            },
                            "amount_timespent": {
                              "description": "Amount time spent",
                              "type": "number"
                            },
                            "bill_amount_timespent": {
                              "description": "Parent sheet id",
                              "type": "number"
                            },
                            "amount_timeestimate": {
                              "description": "Amount time estimate",
                              "type": "number"
                            },
                            "bill_amount_timeestimate": {
                              "description": "Bill amount time estimate",
                              "type": "number"
                            },
                            "currency_id": {
                              "description": "Currency symbol",
                              "type": "integer"
                            },
                            "module": {
                              "description": "Module",
                              "type": "string"
                            },
                            "model": {
                              "description": "Model",
                              "type": "string"
                            },
                            "model_id": {
                              "description": "Model id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "bill_time": {
                              "description": "Bill time",
                              "type": "integer"
                            },
                            "unbill_time": {
                              "description": "Unbilled time",
                              "type": "integer"
                            },
                            "bill_time_type": {
                              "description": "Billed time type",
                              "type": "string"
                            },
                            "billing_status": {
                              "description": "Billing status",
                              "type": "integer"
                            },
                            "invoice_id": {
                              "description": "Invoice ID",
                              "type": "integer"
                            },
                            "bill_time_estimate": {
                              "description": "Bill time estimate",
                              "type": "integer"
                            },
                            "unbill_time_estimate": {
                              "description": "Unbill time estimate",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timetracker/timesheets/list": {
      "get": {
        "tags": [
          "Time sheet"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "parent_sheet_id": {
                                "description": "Parent sheet id",
                                "type": "integer"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "is_billable": {
                                "description": "Is billable",
                                "type": "boolean"
                              },
                              "aggregated_time_estimate": {
                                "description": "Aggregated time estimate",
                                "type": "integer"
                              },
                              "time_estimate": {
                                "description": "Time estimate",
                                "type": "integer"
                              },
                              "time_spent": {
                                "description": "Time spent",
                                "type": "integer"
                              },
                              "rate": {
                                "description": "Rate",
                                "type": "number"
                              },
                              "billing_rate": {
                                "description": "Billing rate",
                                "type": "number"
                              },
                              "amount_timespent": {
                                "description": "Amount time spent",
                                "type": "number"
                              },
                              "bill_amount_timespent": {
                                "description": "Parent sheet id",
                                "type": "number"
                              },
                              "amount_timeestimate": {
                                "description": "Amount time estimate",
                                "type": "number"
                              },
                              "bill_amount_timeestimate": {
                                "description": "Bill amount time estimate",
                                "type": "number"
                              },
                              "currency_id": {
                                "description": "Currency symbol",
                                "type": "integer"
                              },
                              "module": {
                                "description": "Module",
                                "type": "string"
                              },
                              "model": {
                                "description": "Model",
                                "type": "string"
                              },
                              "model_id": {
                                "description": "Model id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "bill_time": {
                                "description": "Bill time",
                                "type": "integer"
                              },
                              "unbill_time": {
                                "description": "Unbilled time",
                                "type": "integer"
                              },
                              "bill_time_type": {
                                "description": "Billed time type",
                                "type": "string"
                              },
                              "billing_status": {
                                "description": "Billing status",
                                "type": "integer"
                              },
                              "invoice_id": {
                                "description": "Invoice ID",
                                "type": "integer"
                              },
                              "bill_time_estimate": {
                                "description": "Bill time estimate",
                                "type": "integer"
                              },
                              "unbill_time_estimate": {
                                "description": "Unbill time estimate",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timetracker/timelogs/create": {
      "post": {
        "tags": [
          "TIme Log"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "is_billable": {
                    "description": "Is billable",
                    "type": "boolean"
                  },
                  "time_spent": {
                    "description": "Time spent",
                    "type": "integer"
                  },
                  "rate": {
                    "description": "Rate",
                    "type": "number"
                  },
                  "billing_rate": {
                    "description": "Billing rate",
                    "type": "number"
                  },
                  "amount": {
                    "description": "Amount",
                    "type": "number"
                  },
                  "billing_amount": {
                    "description": "Billing amount",
                    "type": "number"
                  },
                  "currency_id": {
                    "description": "Currency symbol",
                    "type": "integer"
                  },
                  "timesheet_id": {
                    "description": "Timesheet id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "user_id": {
                    "description": "Project and user relation",
                    "type": "integer"
                  },
                  "is_manual": {
                    "description": "Manual time tracker",
                    "type": "boolean"
                  },
                  "start_timestamp": {
                    "description": "Start time stamp",
                    "type": "integer"
                  },
                  "stop_timestamp": {
                    "description": "Stop times tamp",
                    "type": "integer"
                  },
                  "is_approved": {
                    "description": "Is approved",
                    "type": "boolean"
                  },
                  "invoice_id": {
                    "description": "Invoice ID",
                    "type": "integer"
                  },
                  "status": {
                    "description": "Time log status:<ul>                     <li>10 - Running</li>                     <li>20 - Pause</li>                     <li>30 - Stopped</li>                     <li>0 - New</li>                 </ul>",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timetracker/timelogs/update/{id}": {
      "post": {
        "tags": [
          "TIme Log"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "is_billable": {
                    "description": "Is billable",
                    "type": "boolean"
                  },
                  "time_spent": {
                    "description": "Time spent",
                    "type": "integer"
                  },
                  "rate": {
                    "description": "Rate",
                    "type": "number"
                  },
                  "billing_rate": {
                    "description": "Billing rate",
                    "type": "number"
                  },
                  "amount": {
                    "description": "Amount",
                    "type": "number"
                  },
                  "billing_amount": {
                    "description": "Billing amount",
                    "type": "number"
                  },
                  "currency_id": {
                    "description": "Currency symbol",
                    "type": "integer"
                  },
                  "timesheet_id": {
                    "description": "Timesheet id",
                    "type": "integer"
                  },
                  "created_date": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated_date": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "user_id": {
                    "description": "Project and user relation",
                    "type": "integer"
                  },
                  "is_manual": {
                    "description": "Manual time tracker",
                    "type": "boolean"
                  },
                  "start_timestamp": {
                    "description": "Start time stamp",
                    "type": "integer"
                  },
                  "stop_timestamp": {
                    "description": "Stop times tamp",
                    "type": "integer"
                  },
                  "is_approved": {
                    "description": "Is approved",
                    "type": "boolean"
                  },
                  "invoice_id": {
                    "description": "Invoice ID",
                    "type": "integer"
                  },
                  "status": {
                    "description": "Time log status:<ul>                     <li>10 - Running</li>                     <li>20 - Pause</li>                     <li>30 - Stopped</li>                     <li>0 - New</li>                 </ul>",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "is_billable": {
                              "description": "Is billable",
                              "type": "boolean"
                            },
                            "time_spent": {
                              "description": "Time spent",
                              "type": "integer"
                            },
                            "rate": {
                              "description": "Rate",
                              "type": "number"
                            },
                            "billing_rate": {
                              "description": "Billing rate",
                              "type": "number"
                            },
                            "amount": {
                              "description": "Amount",
                              "type": "number"
                            },
                            "billing_amount": {
                              "description": "Billing amount",
                              "type": "number"
                            },
                            "currency_id": {
                              "description": "Currency symbol",
                              "type": "integer"
                            },
                            "timesheet_id": {
                              "description": "Timesheet id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "user_id": {
                              "description": "Project and user relation",
                              "type": "integer"
                            },
                            "is_manual": {
                              "description": "Manual time tracker",
                              "type": "boolean"
                            },
                            "start_timestamp": {
                              "description": "Start time stamp",
                              "type": "integer"
                            },
                            "stop_timestamp": {
                              "description": "Stop times tamp",
                              "type": "integer"
                            },
                            "is_approved": {
                              "description": "Is approved",
                              "type": "boolean"
                            },
                            "invoice_id": {
                              "description": "Invoice ID",
                              "type": "integer"
                            },
                            "status": {
                              "description": "Time log status:<ul>                     <li>10 - Running</li>                     <li>20 - Pause</li>                     <li>30 - Stopped</li>                     <li>0 - New</li>                 </ul>",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timetracker/timelogs/delete/{id}": {
      "get": {
        "tags": [
          "TIme Log"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timetracker/timelogs/get/{id}": {
      "get": {
        "tags": [
          "TIme Log"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "is_billable": {
                              "description": "Is billable",
                              "type": "boolean"
                            },
                            "time_spent": {
                              "description": "Time spent",
                              "type": "integer"
                            },
                            "rate": {
                              "description": "Rate",
                              "type": "number"
                            },
                            "billing_rate": {
                              "description": "Billing rate",
                              "type": "number"
                            },
                            "amount": {
                              "description": "Amount",
                              "type": "number"
                            },
                            "billing_amount": {
                              "description": "Billing amount",
                              "type": "number"
                            },
                            "currency_id": {
                              "description": "Currency symbol",
                              "type": "integer"
                            },
                            "timesheet_id": {
                              "description": "Timesheet id",
                              "type": "integer"
                            },
                            "created_date": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated_date": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "user_id": {
                              "description": "Project and user relation",
                              "type": "integer"
                            },
                            "is_manual": {
                              "description": "Manual time tracker",
                              "type": "boolean"
                            },
                            "start_timestamp": {
                              "description": "Start time stamp",
                              "type": "integer"
                            },
                            "stop_timestamp": {
                              "description": "Stop times tamp",
                              "type": "integer"
                            },
                            "is_approved": {
                              "description": "Is approved",
                              "type": "boolean"
                            },
                            "invoice_id": {
                              "description": "Invoice ID",
                              "type": "integer"
                            },
                            "status": {
                              "description": "Time log status:<ul>                     <li>10 - Running</li>                     <li>20 - Pause</li>                     <li>30 - Stopped</li>                     <li>0 - New</li>                 </ul>",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timetracker/timelogs/list": {
      "get": {
        "tags": [
          "TIme Log"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "is_billable": {
                                "description": "Is billable",
                                "type": "boolean"
                              },
                              "time_spent": {
                                "description": "Time spent",
                                "type": "integer"
                              },
                              "rate": {
                                "description": "Rate",
                                "type": "number"
                              },
                              "billing_rate": {
                                "description": "Billing rate",
                                "type": "number"
                              },
                              "amount": {
                                "description": "Amount",
                                "type": "number"
                              },
                              "billing_amount": {
                                "description": "Billing amount",
                                "type": "number"
                              },
                              "currency_id": {
                                "description": "Currency symbol",
                                "type": "integer"
                              },
                              "timesheet_id": {
                                "description": "Timesheet id",
                                "type": "integer"
                              },
                              "created_date": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated_date": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "user_id": {
                                "description": "Project and user relation",
                                "type": "integer"
                              },
                              "is_manual": {
                                "description": "Manual time tracker",
                                "type": "boolean"
                              },
                              "start_timestamp": {
                                "description": "Start time stamp",
                                "type": "integer"
                              },
                              "stop_timestamp": {
                                "description": "Stop times tamp",
                                "type": "integer"
                              },
                              "is_approved": {
                                "description": "Is approved",
                                "type": "boolean"
                              },
                              "invoice_id": {
                                "description": "Invoice ID",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Time log status:<ul>                     <li>10 - Running</li>                     <li>20 - Pause</li>                     <li>30 - Stopped</li>                     <li>0 - New</li>                 </ul>",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/product/create": {
      "post": {
        "tags": [
          "Items"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "type": {
                    "description": "Item type <li>1 - Product</li> <li>2 - Service</li>",
                    "type": "integer"
                  },
                  "code": {
                    "description": "Item code",
                    "type": "string"
                  },
                  "category_id": {
                    "description": "Item category id",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "full_description": {
                    "description": "Full item description",
                    "type": "string"
                  },
                  "created": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "uom_id": {
                    "description": "UOM id",
                    "type": "integer"
                  },
                  "code_upc": {
                    "description": "UPS",
                    "type": "string"
                  },
                  "code_ean": {
                    "description": "The International Article Number (also known as European Article Number or EAN) ",
                    "type": "string"
                  },
                  "code_mpn": {
                    "description": "Manufacturer Part Number",
                    "type": "string"
                  },
                  "code_isbn": {
                    "description": "International Standard Book Number",
                    "type": "string"
                  },
                  "manufacturer_id": {
                    "description": "Manufacturer id",
                    "type": "integer"
                  },
                  "taxable": {
                    "description": "Taxable",
                    "type": "boolean"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "online_payment_type": {
                    "description": "Online payment type",
                    "type": "integer"
                  },
                  "online_payment_subject_type": {
                    "description": "Online payment type",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/product/update/{id}": {
      "post": {
        "tags": [
          "Items"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "type": {
                    "description": "Item type <li>1 - Product</li> <li>2 - Service</li>",
                    "type": "integer"
                  },
                  "code": {
                    "description": "Item code",
                    "type": "string"
                  },
                  "category_id": {
                    "description": "Item category id",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "full_description": {
                    "description": "Full item description",
                    "type": "string"
                  },
                  "created": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "uom_id": {
                    "description": "UOM id",
                    "type": "integer"
                  },
                  "code_upc": {
                    "description": "UPS",
                    "type": "string"
                  },
                  "code_ean": {
                    "description": "The International Article Number (also known as European Article Number or EAN) ",
                    "type": "string"
                  },
                  "code_mpn": {
                    "description": "Manufacturer Part Number",
                    "type": "string"
                  },
                  "code_isbn": {
                    "description": "International Standard Book Number",
                    "type": "string"
                  },
                  "manufacturer_id": {
                    "description": "Manufacturer id",
                    "type": "integer"
                  },
                  "taxable": {
                    "description": "Taxable",
                    "type": "boolean"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  },
                  "online_payment_type": {
                    "description": "Online payment type",
                    "type": "integer"
                  },
                  "online_payment_subject_type": {
                    "description": "Online payment type",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "type": {
                              "description": "Item type <li>1 - Product</li> <li>2 - Service</li>",
                              "type": "integer"
                            },
                            "code": {
                              "description": "Item code",
                              "type": "string"
                            },
                            "category_id": {
                              "description": "Item category id",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "full_description": {
                              "description": "Full item description",
                              "type": "string"
                            },
                            "created": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "uom_id": {
                              "description": "UOM id",
                              "type": "integer"
                            },
                            "code_upc": {
                              "description": "UPS",
                              "type": "string"
                            },
                            "code_ean": {
                              "description": "The International Article Number (also known as European Article Number or EAN) ",
                              "type": "string"
                            },
                            "code_mpn": {
                              "description": "Manufacturer Part Number",
                              "type": "string"
                            },
                            "code_isbn": {
                              "description": "International Standard Book Number",
                              "type": "string"
                            },
                            "manufacturer_id": {
                              "description": "Manufacturer id",
                              "type": "integer"
                            },
                            "taxable": {
                              "description": "Taxable",
                              "type": "boolean"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "online_payment_type": {
                              "description": "Online payment type",
                              "type": "integer"
                            },
                            "online_payment_subject_type": {
                              "description": "Online payment type",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/product/delete/{id}": {
      "get": {
        "tags": [
          "Items"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/product/get/{id}": {
      "get": {
        "tags": [
          "Items"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "type": {
                              "description": "Item type <li>1 - Product</li> <li>2 - Service</li>",
                              "type": "integer"
                            },
                            "code": {
                              "description": "Item code",
                              "type": "string"
                            },
                            "category_id": {
                              "description": "Item category id",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "full_description": {
                              "description": "Full item description",
                              "type": "string"
                            },
                            "created": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "uom_id": {
                              "description": "UOM id",
                              "type": "integer"
                            },
                            "code_upc": {
                              "description": "UPS",
                              "type": "string"
                            },
                            "code_ean": {
                              "description": "The International Article Number (also known as European Article Number or EAN) ",
                              "type": "string"
                            },
                            "code_mpn": {
                              "description": "Manufacturer Part Number",
                              "type": "string"
                            },
                            "code_isbn": {
                              "description": "International Standard Book Number",
                              "type": "string"
                            },
                            "manufacturer_id": {
                              "description": "Manufacturer id",
                              "type": "integer"
                            },
                            "taxable": {
                              "description": "Taxable",
                              "type": "boolean"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            },
                            "online_payment_type": {
                              "description": "Online payment type",
                              "type": "integer"
                            },
                            "online_payment_subject_type": {
                              "description": "Online payment type",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/product/list": {
      "get": {
        "tags": [
          "Items"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              },
                              "type": {
                                "description": "Item type <li>1 - Product</li> <li>2 - Service</li>",
                                "type": "integer"
                              },
                              "code": {
                                "description": "Item code",
                                "type": "string"
                              },
                              "category_id": {
                                "description": "Item category id",
                                "type": "integer"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "full_description": {
                                "description": "Full item description",
                                "type": "string"
                              },
                              "created": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "uom_id": {
                                "description": "UOM id",
                                "type": "integer"
                              },
                              "code_upc": {
                                "description": "UPS",
                                "type": "string"
                              },
                              "code_ean": {
                                "description": "The International Article Number (also known as European Article Number or EAN) ",
                                "type": "string"
                              },
                              "code_mpn": {
                                "description": "Manufacturer Part Number",
                                "type": "string"
                              },
                              "code_isbn": {
                                "description": "International Standard Book Number",
                                "type": "string"
                              },
                              "manufacturer_id": {
                                "description": "Manufacturer id",
                                "type": "integer"
                              },
                              "taxable": {
                                "description": "Taxable",
                                "type": "boolean"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              },
                              "online_payment_type": {
                                "description": "Online payment type",
                                "type": "integer"
                              },
                              "online_payment_subject_type": {
                                "description": "Online payment type",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/category/create": {
      "post": {
        "tags": [
          "Categories"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "parent_id": {
                    "description": "Parent id",
                    "type": "integer"
                  },
                  "created": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/category/update/{id}": {
      "post": {
        "tags": [
          "Categories"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "parent_id": {
                    "description": "Parent id",
                    "type": "integer"
                  },
                  "created": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "parent_id": {
                              "description": "Parent id",
                              "type": "integer"
                            },
                            "created": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/category/delete/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/category/get/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "parent_id": {
                              "description": "Parent id",
                              "type": "integer"
                            },
                            "created": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/category/list": {
      "get": {
        "tags": [
          "Categories"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              },
                              "parent_id": {
                                "description": "Parent id",
                                "type": "integer"
                              },
                              "created": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/pricelist/create": {
      "post": {
        "tags": [
          "Price list"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "created": {
                    "description": "Created",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/pricelist/update/{id}": {
      "post": {
        "tags": [
          "Price list"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "ordering": {
                    "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "created": {
                    "description": "Created",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "created": {
                              "description": "Created",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/pricelist/delete/{id}": {
      "get": {
        "tags": [
          "Price list"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/pricelist/get/{id}": {
      "get": {
        "tags": [
          "Price list"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "ordering": {
                              "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                              "type": "integer"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "created": {
                              "description": "Created",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/pricelist/list": {
      "get": {
        "tags": [
          "Price list"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              },
                              "ordering": {
                                "description": "Sorting index. The system sorts from less to more. For example, a record with a field value of 1 will be higher than a record with a field value of 2.",
                                "type": "integer"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "created": {
                                "description": "Created",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/pricelist_item/create": {
      "post": {
        "tags": [
          "Price list and item relation"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "pricelist_id": {
                    "description": "Price list id",
                    "type": "integer"
                  },
                  "item_id": {
                    "description": "Item id",
                    "type": "integer"
                  },
                  "price": {
                    "description": "Item id",
                    "type": "number"
                  },
                  "created": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/pricelist_item/update/{id}": {
      "post": {
        "tags": [
          "Price list and item relation"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "pricelist_id": {
                    "description": "Price list id",
                    "type": "integer"
                  },
                  "item_id": {
                    "description": "Item id",
                    "type": "integer"
                  },
                  "price": {
                    "description": "Item id",
                    "type": "number"
                  },
                  "created": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "pricelist_id": {
                              "description": "Price list id",
                              "type": "integer"
                            },
                            "item_id": {
                              "description": "Item id",
                              "type": "integer"
                            },
                            "price": {
                              "description": "Item id",
                              "type": "number"
                            },
                            "created": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/pricelist_item/delete/{id}": {
      "get": {
        "tags": [
          "Price list and item relation"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/pricelist_item/get/{id}": {
      "get": {
        "tags": [
          "Price list and item relation"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "pricelist_id": {
                              "description": "Price list id",
                              "type": "integer"
                            },
                            "item_id": {
                              "description": "Item id",
                              "type": "integer"
                            },
                            "price": {
                              "description": "Item id",
                              "type": "number"
                            },
                            "created": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/pricelist_item/list": {
      "get": {
        "tags": [
          "Price list and item relation"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "pricelist_id": {
                                "description": "Price list id",
                                "type": "integer"
                              },
                              "item_id": {
                                "description": "Item id",
                                "type": "integer"
                              },
                              "price": {
                                "description": "Item id",
                                "type": "number"
                              },
                              "created": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/manufacturer/create": {
      "post": {
        "tags": [
          "Price"
        ],
        "description": "Create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "created": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "currency_id": {
                    "description": "Currency symbol",
                    "type": "integer"
                  },
                  "crm_company_id": {
                    "description": "CRM company id",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully create an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/manufacturer/update/{id}": {
      "post": {
        "tags": [
          "Price"
        ],
        "description": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "active": {
                    "description": "If = 0, Inactive.<br>Default value = 1.",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "created": {
                    "description": "Created date",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "updated": {
                    "description": "Updated date",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "User id",
                    "type": "integer"
                  },
                  "currency_id": {
                    "description": "Currency symbol",
                    "type": "integer"
                  },
                  "crm_company_id": {
                    "description": "CRM company id",
                    "type": "integer"
                  },
                  "ref": {
                    "description": "Name of the import source of the object (system, etc.)",
                    "type": "string"
                  },
                  "ref_id": {
                    "description": "UUID in the system from where the import was made.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "created": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "currency_id": {
                              "description": "Currency symbol",
                              "type": "integer"
                            },
                            "crm_company_id": {
                              "description": "CRM company id",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/manufacturer/delete/{id}": {
      "get": {
        "tags": [
          "Price"
        ],
        "description": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/manufacturer/get/{id}": {
      "get": {
        "tags": [
          "Price"
        ],
        "description": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Entry id",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "active": {
                              "description": "If = 0, Inactive.<br>Default value = 1.",
                              "type": "boolean"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "created": {
                              "description": "Created date",
                              "type": "string"
                            },
                            "created_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "updated": {
                              "description": "Updated date",
                              "type": "string"
                            },
                            "updated_by": {
                              "description": "User id",
                              "type": "integer"
                            },
                            "currency_id": {
                              "description": "Currency symbol",
                              "type": "integer"
                            },
                            "crm_company_id": {
                              "description": "CRM company id",
                              "type": "integer"
                            },
                            "ref": {
                              "description": "Name of the import source of the object (system, etc.)",
                              "type": "string"
                            },
                            "ref_id": {
                              "description": "UUID in the system from where the import was made.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/manufacturer/list": {
      "get": {
        "tags": [
          "Price"
        ],
        "description": "List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully returned a list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "count": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Entry id",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "active": {
                                "description": "If = 0, Inactive.<br>Default value = 1.",
                                "type": "boolean"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "created": {
                                "description": "Created date",
                                "type": "string"
                              },
                              "created_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "updated": {
                                "description": "Updated date",
                                "type": "string"
                              },
                              "updated_by": {
                                "description": "User id",
                                "type": "integer"
                              },
                              "currency_id": {
                                "description": "Currency symbol",
                                "type": "integer"
                              },
                              "crm_company_id": {
                                "description": "CRM company id",
                                "type": "integer"
                              },
                              "ref": {
                                "description": "Name of the import source of the object (system, etc.)",
                                "type": "string"
                              },
                              "ref_id": {
                                "description": "UUID in the system from where the import was made.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}