{
  "openapi": "3.0.1",
  "info": {
    "title": "Sage 200 Sales API",
    "description": "The aim of the Sage 200 Sales API is to expose the sales data from Sage 200 on-premise applications.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://sage200.sage.es/api/sales"
    }
  ],
  "paths": {
    "/Banks": {
      "post": {
        "tags": [
          "Banks"
        ],
        "summary": "Creates a bank",
        "operationId": "POST_Banks_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Bank resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bank"
              },
              "example": {
                "Id": "string",
                "Code": "string",
                "Name": "string",
                "BICCode": "string",
                "Timestamp": "2021-02-25T14:44:51.012Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.012Z",
                    "DataType": "String"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Bank"
              },
              "example": {
                "Id": "string",
                "Code": "string",
                "Name": "string",
                "BICCode": "string",
                "Timestamp": "2021-02-25T14:44:51.012Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.012Z",
                    "DataType": "String"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Banks/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "BICCode": "string",
                  "Timestamp": "2021-02-25T14:44:51.012Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.012Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Banks/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "BICCode": "string",
                  "Timestamp": "2021-02-25T14:44:51.012Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.012Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Banks"
        ],
        "summary": "Returns all banks",
        "operationId": "QUERY_Banks_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bank"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Banks",
                  "value": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "BICCode": "string",
                      "Timestamp": "2021-02-25T14:44:51.019Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.019Z",
                          "DataType": "String"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bank"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Banks",
                  "value": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "BICCode": "string",
                      "Timestamp": "2021-02-25T14:44:51.019Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.019Z",
                          "DataType": "String"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Banks({Id})": {
      "get": {
        "tags": [
          "Banks"
        ],
        "summary": "Returns a bank",
        "operationId": "GET_Banks_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Bank id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bank id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bank"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Banks/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "BICCode": "string",
                  "Timestamp": "2021-02-25T14:44:51.028Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.028Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bank"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Banks/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "BICCode": "string",
                  "Timestamp": "2021-02-25T14:44:51.028Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.028Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Banks"
        ],
        "summary": "Updates a bank",
        "operationId": "PUT_Banks_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Bank id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bank id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Bank resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bank"
              },
              "example": {
                "Id": "string",
                "Code": "string",
                "Name": "string",
                "BICCode": "string",
                "Timestamp": "2021-02-25T14:44:51.034Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.034Z",
                    "DataType": "String"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Bank"
              },
              "example": {
                "Id": "string",
                "Code": "string",
                "Name": "string",
                "BICCode": "string",
                "Timestamp": "2021-02-25T14:44:51.034Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.034Z",
                    "DataType": "String"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Banks/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "BICCode": "string",
                  "Timestamp": "2021-02-25T14:44:51.034Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.034Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Banks/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "BICCode": "string",
                  "Timestamp": "2021-02-25T14:44:51.034Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.034Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Cities": {
      "get": {
        "tags": [
          "Cities"
        ],
        "summary": "Returns all cities",
        "operationId": "QUERY_Cities_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/City"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Cities",
                  "value": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "RegionId": "string",
                      "Timestamp": "2021-02-25T14:44:51.046Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.046Z",
                          "DataType": "String"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/City"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Cities",
                  "value": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "RegionId": "string",
                      "Timestamp": "2021-02-25T14:44:51.046Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.046Z",
                          "DataType": "String"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Cities({Id})": {
      "get": {
        "tags": [
          "Cities"
        ],
        "summary": "Returns a city",
        "operationId": "GET_Cities_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "City id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "City id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/City"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Cities/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "RegionId": "string",
                  "Timestamp": "2021-02-25T14:44:51.053Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.053Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/City"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Cities/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "RegionId": "string",
                  "Timestamp": "2021-02-25T14:44:51.053Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.053Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cities"
        ],
        "summary": "Updates a city",
        "operationId": "PUT_Cities_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "City id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "City id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "City resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/City"
              },
              "example": {
                "Id": "string",
                "Code": "string",
                "Name": "string",
                "RegionId": "string",
                "Timestamp": "2021-02-25T14:44:51.065Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.065Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/City"
              },
              "example": {
                "Id": "string",
                "Code": "string",
                "Name": "string",
                "RegionId": "string",
                "Timestamp": "2021-02-25T14:44:51.065Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.065Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Cities/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "RegionId": "string",
                  "Timestamp": "2021-02-25T14:44:51.065Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.065Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Cities/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "RegionId": "string",
                  "Timestamp": "2021-02-25T14:44:51.065Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.065Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Colours": {
      "post": {
        "tags": [
          "Colours"
        ],
        "summary": "Creates a colour",
        "operationId": "POST_Colours_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Colour resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Colour"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.081Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.081Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Colour"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.081Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.081Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Colours/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.082Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.082Z",
                      "DataType": "Date"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Colours/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.082Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.082Z",
                      "DataType": "Date"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Colours"
        ],
        "summary": "Returns all colours",
        "operationId": "QUERY_Colours_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Colour"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Colours",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.096Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.096Z",
                          "DataType": "Date"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Colour"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Colours",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.096Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.096Z",
                          "DataType": "Date"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Colours({Id})": {
      "get": {
        "tags": [
          "Colours"
        ],
        "summary": "Returns a colour",
        "operationId": "GET_Colours_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Colour id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Colour id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Colour"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Colours/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.103Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.103Z",
                      "DataType": "Date"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Colour"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Colours/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.103Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.103Z",
                      "DataType": "Date"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Colours"
        ],
        "summary": "Updates a colour",
        "operationId": "PUT_Colours_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Colour id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Colour id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Colour resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Colour"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.115Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.115Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Colour"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.115Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.115Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Colours/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.115Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.115Z",
                      "DataType": "Date"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Colours/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.115Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.115Z",
                      "DataType": "Date"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Colours"
        ],
        "summary": "Deletes a colour",
        "operationId": "DELETE_Colours_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Colour id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Colour id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Companies": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Returns all companies",
        "operationId": "QUERY_Companies_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Company"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Companies",
                  "value": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "TaxNumber": "string",
                      "EconomicalActivity": "string",
                      "CompanyAdministrator": "string",
                      "Logo": "string",
                      "Timestamp": "2021-02-25T14:44:51.166Z",
                      "TaxNumberType": "Passport",
                      "Addresses": [
                        {
                          "Id": "string",
                          "FullAddress": "string",
                          "Street": "string",
                          "Number": "string",
                          "Letter": "string",
                          "Stair": "string",
                          "Floor": "string",
                          "Door": "string",
                          "CountryId": "string",
                          "Country": "string",
                          "RegionId": "string",
                          "Region": "string",
                          "PostalCode": "string",
                          "CityId": "string",
                          "City": "string",
                          "Email": "string",
                          "Telephone": "string",
                          "Mobile": "string",
                          "Fax": "string",
                          "AddressName": "string",
                          "AlternativeBusinessName": "string",
                          "Timestamp": "2021-02-25T14:44:51.166Z",
                          "Type": "Main",
                          "StreetType": "Place"
                        }
                      ],
                      "BankAccounts": [
                        {
                          "Id": "string",
                          "BankId": "string",
                          "Name": "string",
                          "IBAN": "string",
                          "Timestamp": "2021-02-25T14:44:51.166Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.166Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Company"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Companies",
                  "value": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "TaxNumber": "string",
                      "EconomicalActivity": "string",
                      "CompanyAdministrator": "string",
                      "Logo": "string",
                      "Timestamp": "2021-02-25T14:44:51.166Z",
                      "TaxNumberType": "Passport",
                      "Addresses": [
                        {
                          "Id": "string",
                          "FullAddress": "string",
                          "Street": "string",
                          "Number": "string",
                          "Letter": "string",
                          "Stair": "string",
                          "Floor": "string",
                          "Door": "string",
                          "CountryId": "string",
                          "Country": "string",
                          "RegionId": "string",
                          "Region": "string",
                          "PostalCode": "string",
                          "CityId": "string",
                          "City": "string",
                          "Email": "string",
                          "Telephone": "string",
                          "Mobile": "string",
                          "Fax": "string",
                          "AddressName": "string",
                          "AlternativeBusinessName": "string",
                          "Timestamp": "2021-02-25T14:44:51.166Z",
                          "Type": "Main",
                          "StreetType": "Place"
                        }
                      ],
                      "BankAccounts": [
                        {
                          "Id": "string",
                          "BankId": "string",
                          "Name": "string",
                          "IBAN": "string",
                          "Timestamp": "2021-02-25T14:44:51.166Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.166Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Companies({Id})": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Returns a company",
        "operationId": "GET_Companies_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Company id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Company id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Companies/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "TaxNumber": "string",
                  "EconomicalActivity": "string",
                  "CompanyAdministrator": "string",
                  "Logo": "string",
                  "Timestamp": "2021-02-25T14:44:51.175Z",
                  "TaxNumberType": "Undefined",
                  "Addresses": [
                    {
                      "Id": "string",
                      "FullAddress": "string",
                      "Street": "string",
                      "Number": "string",
                      "Letter": "string",
                      "Stair": "string",
                      "Floor": "string",
                      "Door": "string",
                      "CountryId": "string",
                      "Country": "string",
                      "RegionId": "string",
                      "Region": "string",
                      "PostalCode": "string",
                      "CityId": "string",
                      "City": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "AddressName": "string",
                      "AlternativeBusinessName": "string",
                      "Timestamp": "2021-02-25T14:44:51.175Z",
                      "Type": "Undefined",
                      "StreetType": "Street"
                    }
                  ],
                  "BankAccounts": [
                    {
                      "Id": "string",
                      "BankId": "string",
                      "Name": "string",
                      "IBAN": "string",
                      "Timestamp": "2021-02-25T14:44:51.175Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.175Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Companies/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "TaxNumber": "string",
                  "EconomicalActivity": "string",
                  "CompanyAdministrator": "string",
                  "Logo": "string",
                  "Timestamp": "2021-02-25T14:44:51.175Z",
                  "TaxNumberType": "Undefined",
                  "Addresses": [
                    {
                      "Id": "string",
                      "FullAddress": "string",
                      "Street": "string",
                      "Number": "string",
                      "Letter": "string",
                      "Stair": "string",
                      "Floor": "string",
                      "Door": "string",
                      "CountryId": "string",
                      "Country": "string",
                      "RegionId": "string",
                      "Region": "string",
                      "PostalCode": "string",
                      "CityId": "string",
                      "City": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "AddressName": "string",
                      "AlternativeBusinessName": "string",
                      "Timestamp": "2021-02-25T14:44:51.175Z",
                      "Type": "Undefined",
                      "StreetType": "Street"
                    }
                  ],
                  "BankAccounts": [
                    {
                      "Id": "string",
                      "BankId": "string",
                      "Name": "string",
                      "IBAN": "string",
                      "Timestamp": "2021-02-25T14:44:51.175Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.175Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Returns all countries",
        "operationId": "QUERY_Countries_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Countries",
                  "value": [
                    {
                      "Id": "string",
                      "Code": 0,
                      "ISOCode": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.192Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.192Z",
                          "DataType": "String"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Countries",
                  "value": [
                    {
                      "Id": "string",
                      "Code": 0,
                      "ISOCode": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.192Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.192Z",
                          "DataType": "String"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Countries({Id})": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Returns a country",
        "operationId": "GET_Countries_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Country id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Countries/$entity",
                  "Id": "string",
                  "Code": 0,
                  "ISOCode": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.198Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.198Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Countries/$entity",
                  "Id": "string",
                  "Code": 0,
                  "ISOCode": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.198Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.198Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Countries"
        ],
        "summary": "Updates a country",
        "operationId": "PUT_Countries_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Country id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Country resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              },
              "example": {
                "Id": "string",
                "Code": 0,
                "ISOCode": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.203Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.203Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              },
              "example": {
                "Id": "string",
                "Code": 0,
                "ISOCode": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.203Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.203Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Countries/$entity",
                  "Id": "string",
                  "Code": 0,
                  "ISOCode": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.204Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.204Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Countries/$entity",
                  "Id": "string",
                  "Code": 0,
                  "ISOCode": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.204Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.204Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Currencies": {
      "post": {
        "tags": [
          "Currencies"
        ],
        "summary": "Creates a currency",
        "operationId": "POST_Currencies_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Currency resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              },
              "example": {
                "Id": "string",
                "Code": "string",
                "Name": "string",
                "CurrentRate": 72,
                "DecimalPlaces": 0,
                "Timestamp": "2021-02-25T14:44:51.213Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.213Z",
                    "DataType": "Date"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              },
              "example": {
                "Id": "string",
                "Code": "string",
                "Name": "string",
                "CurrentRate": 72,
                "DecimalPlaces": 0,
                "Timestamp": "2021-02-25T14:44:51.213Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.213Z",
                    "DataType": "Date"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Currencies/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "CurrentRate": 53,
                  "DecimalPlaces": 0,
                  "Timestamp": "2021-02-25T14:44:51.213Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.213Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Currencies/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "CurrentRate": 53,
                  "DecimalPlaces": 0,
                  "Timestamp": "2021-02-25T14:44:51.213Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.213Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Returns all currencies",
        "operationId": "QUERY_Currencies_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Currency"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Currencies",
                  "value": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "CurrentRate": 36,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.220Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.220Z",
                          "DataType": "Undefined"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Currency"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Currencies",
                  "value": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "CurrentRate": 36,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.220Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.220Z",
                          "DataType": "Undefined"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Currencies({Id})": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Returns a currency",
        "operationId": "GET_Currencies_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Currency id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Currency id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Currencies/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "CurrentRate": 53,
                  "DecimalPlaces": 0,
                  "Timestamp": "2021-02-25T14:44:51.226Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.226Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Currencies/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "CurrentRate": 53,
                  "DecimalPlaces": 0,
                  "Timestamp": "2021-02-25T14:44:51.226Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.226Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Currencies"
        ],
        "summary": "Updates a currency",
        "operationId": "PUT_Currencies_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Currency id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Currency id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Currency resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              },
              "example": {
                "Id": "string",
                "Code": "string",
                "Name": "string",
                "CurrentRate": 72,
                "DecimalPlaces": 0,
                "Timestamp": "2021-02-25T14:44:51.231Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.231Z",
                    "DataType": "Date"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              },
              "example": {
                "Id": "string",
                "Code": "string",
                "Name": "string",
                "CurrentRate": 72,
                "DecimalPlaces": 0,
                "Timestamp": "2021-02-25T14:44:51.231Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.231Z",
                    "DataType": "Date"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Currencies/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "CurrentRate": 53,
                  "DecimalPlaces": 0,
                  "Timestamp": "2021-02-25T14:44:51.231Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.231Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Currencies/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "CurrentRate": 53,
                  "DecimalPlaces": 0,
                  "Timestamp": "2021-02-25T14:44:51.231Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.231Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/CustomerGroups": {
      "post": {
        "tags": [
          "CustomerGroups"
        ],
        "summary": "Creates a customer group",
        "operationId": "POST_CustomerGroups_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "CustomerGroup resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGroup"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.239Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.239Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGroup"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.239Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.239Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#CustomerGroups/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.239Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.239Z",
                      "DataType": "Date"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#CustomerGroups/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.239Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.239Z",
                      "DataType": "Date"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CustomerGroups"
        ],
        "summary": "Returns all customer groups",
        "operationId": "QUERY_CustomerGroups_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGroup"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#CustomerGroups",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.246Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.246Z",
                          "DataType": "String"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGroup"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#CustomerGroups",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.246Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.246Z",
                          "DataType": "String"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/CustomerGroups({Id})": {
      "get": {
        "tags": [
          "CustomerGroups"
        ],
        "summary": "Returns a customer group",
        "operationId": "GET_CustomerGroups_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "CustomerGroup id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "CustomerGroup id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#CustomerGroups/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.251Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.251Z",
                      "DataType": "Date"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#CustomerGroups/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.251Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.251Z",
                      "DataType": "Date"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerGroups"
        ],
        "summary": "Updates a customer group",
        "operationId": "PUT_CustomerGroups_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "CustomerGroup id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "CustomerGroup id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "CustomerGroup resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGroup"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.256Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.256Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGroup"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.256Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.256Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#CustomerGroups/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.257Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.257Z",
                      "DataType": "Date"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#CustomerGroups/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.257Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.257Z",
                      "DataType": "Date"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Customers": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Creates a customer",
        "operationId": "POST_Customers_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Customer resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Name": "string",
                "BusinessName": "string",
                "CommercialName": "string",
                "Code": "string",
                "Active": false,
                "TaxNumber": "string",
                "Notes": "string",
                "FinancialLimit": 22,
                "VATTaxRateId": "string",
                "ProductPriceRateId": "string",
                "ProductDiscountRateId": "string",
                "DiscountPercentRate": 0,
                "RappelDiscountPercentRate": 83,
                "PaymentMethodDiscountRate": 15,
                "RouteId": "string",
                "ZoneId": "string",
                "SalesPersonId": "string",
                "CommissionRate": 18,
                "LegalRepresentativeName": "string",
                "CustomerGroupId": "string",
                "Timestamp": "2021-02-25T14:44:51.292Z",
                "TaxNumberType": "ResidenceCertificate",
                "CustomerType": "Lead",
                "TaxType": "EuropeanUnion",
                "Contacts": [
                  {
                    "Id": "string",
                    "Name": "string",
                    "AddressId": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "Timestamp": "2021-02-25T14:44:51.292Z"
                  }
                ],
                "PaymentMethod": {
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Name": "string",
                  "Instalments": 0,
                  "FirstInstalmentDay": 0,
                  "DaysBetweenInstalments": 0,
                  "Timestamp": "2021-02-25T14:44:51.292Z"
                },
                "Addresses": [
                  {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:51.292Z",
                    "Type": "Commercial",
                    "StreetType": "Ride"
                  }
                ],
                "BankAccount": {
                  "Id": "string",
                  "BankId": "string",
                  "Name": "string",
                  "IBAN": "string",
                  "Timestamp": "2021-02-25T14:44:51.292Z"
                },
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.292Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Name": "string",
                "BusinessName": "string",
                "CommercialName": "string",
                "Code": "string",
                "Active": false,
                "TaxNumber": "string",
                "Notes": "string",
                "FinancialLimit": 22,
                "VATTaxRateId": "string",
                "ProductPriceRateId": "string",
                "ProductDiscountRateId": "string",
                "DiscountPercentRate": 0,
                "RappelDiscountPercentRate": 83,
                "PaymentMethodDiscountRate": 15,
                "RouteId": "string",
                "ZoneId": "string",
                "SalesPersonId": "string",
                "CommissionRate": 18,
                "LegalRepresentativeName": "string",
                "CustomerGroupId": "string",
                "Timestamp": "2021-02-25T14:44:51.292Z",
                "TaxNumberType": "ResidenceCertificate",
                "CustomerType": "Lead",
                "TaxType": "EuropeanUnion",
                "Contacts": [
                  {
                    "Id": "string",
                    "Name": "string",
                    "AddressId": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "Timestamp": "2021-02-25T14:44:51.292Z"
                  }
                ],
                "PaymentMethod": {
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Name": "string",
                  "Instalments": 0,
                  "FirstInstalmentDay": 0,
                  "DaysBetweenInstalments": 0,
                  "Timestamp": "2021-02-25T14:44:51.292Z"
                },
                "Addresses": [
                  {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:51.292Z",
                    "Type": "Commercial",
                    "StreetType": "Ride"
                  }
                ],
                "BankAccount": {
                  "Id": "string",
                  "BankId": "string",
                  "Name": "string",
                  "IBAN": "string",
                  "Timestamp": "2021-02-25T14:44:51.292Z"
                },
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.292Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Customers/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Name": "string",
                  "BusinessName": "string",
                  "CommercialName": "string",
                  "Code": "string",
                  "Active": true,
                  "TaxNumber": "string",
                  "Notes": "string",
                  "FinancialLimit": 66,
                  "VATTaxRateId": "string",
                  "ProductPriceRateId": "string",
                  "ProductDiscountRateId": "string",
                  "DiscountPercentRate": 13,
                  "RappelDiscountPercentRate": 53,
                  "PaymentMethodDiscountRate": 51,
                  "RouteId": "string",
                  "ZoneId": "string",
                  "SalesPersonId": "string",
                  "CommissionRate": 19,
                  "LegalRepresentativeName": "string",
                  "CustomerGroupId": "string",
                  "Timestamp": "2021-02-25T14:44:51.292Z",
                  "TaxNumberType": "Undefined",
                  "CustomerType": "Customer",
                  "TaxType": "Undefined",
                  "Contacts": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "AddressId": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "Timestamp": "2021-02-25T14:44:51.292Z"
                    }
                  ],
                  "PaymentMethod": {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": 0,
                    "Name": "string",
                    "Instalments": 0,
                    "FirstInstalmentDay": 0,
                    "DaysBetweenInstalments": 0,
                    "Timestamp": "2021-02-25T14:44:51.292Z"
                  },
                  "Addresses": [
                    {
                      "Id": "string",
                      "FullAddress": "string",
                      "Street": "string",
                      "Number": "string",
                      "Letter": "string",
                      "Stair": "string",
                      "Floor": "string",
                      "Door": "string",
                      "CountryId": "string",
                      "Country": "string",
                      "RegionId": "string",
                      "Region": "string",
                      "PostalCode": "string",
                      "CityId": "string",
                      "City": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "AddressName": "string",
                      "AlternativeBusinessName": "string",
                      "Timestamp": "2021-02-25T14:44:51.292Z",
                      "Type": "Main",
                      "StreetType": "Town"
                    }
                  ],
                  "BankAccount": {
                    "Id": "string",
                    "BankId": "string",
                    "Name": "string",
                    "IBAN": "string",
                    "Timestamp": "2021-02-25T14:44:51.292Z"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.292Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Customers/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Name": "string",
                  "BusinessName": "string",
                  "CommercialName": "string",
                  "Code": "string",
                  "Active": true,
                  "TaxNumber": "string",
                  "Notes": "string",
                  "FinancialLimit": 66,
                  "VATTaxRateId": "string",
                  "ProductPriceRateId": "string",
                  "ProductDiscountRateId": "string",
                  "DiscountPercentRate": 13,
                  "RappelDiscountPercentRate": 53,
                  "PaymentMethodDiscountRate": 51,
                  "RouteId": "string",
                  "ZoneId": "string",
                  "SalesPersonId": "string",
                  "CommissionRate": 19,
                  "LegalRepresentativeName": "string",
                  "CustomerGroupId": "string",
                  "Timestamp": "2021-02-25T14:44:51.292Z",
                  "TaxNumberType": "Undefined",
                  "CustomerType": "Customer",
                  "TaxType": "Undefined",
                  "Contacts": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "AddressId": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "Timestamp": "2021-02-25T14:44:51.292Z"
                    }
                  ],
                  "PaymentMethod": {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": 0,
                    "Name": "string",
                    "Instalments": 0,
                    "FirstInstalmentDay": 0,
                    "DaysBetweenInstalments": 0,
                    "Timestamp": "2021-02-25T14:44:51.292Z"
                  },
                  "Addresses": [
                    {
                      "Id": "string",
                      "FullAddress": "string",
                      "Street": "string",
                      "Number": "string",
                      "Letter": "string",
                      "Stair": "string",
                      "Floor": "string",
                      "Door": "string",
                      "CountryId": "string",
                      "Country": "string",
                      "RegionId": "string",
                      "Region": "string",
                      "PostalCode": "string",
                      "CityId": "string",
                      "City": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "AddressName": "string",
                      "AlternativeBusinessName": "string",
                      "Timestamp": "2021-02-25T14:44:51.292Z",
                      "Type": "Main",
                      "StreetType": "Town"
                    }
                  ],
                  "BankAccount": {
                    "Id": "string",
                    "BankId": "string",
                    "Name": "string",
                    "IBAN": "string",
                    "Timestamp": "2021-02-25T14:44:51.292Z"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.292Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Returns all customers",
        "operationId": "QUERY_Customers_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Customers",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Name": "string",
                      "BusinessName": "string",
                      "CommercialName": "string",
                      "Code": "string",
                      "Active": false,
                      "TaxNumber": "string",
                      "Notes": "string",
                      "FinancialLimit": 46,
                      "VATTaxRateId": "string",
                      "ProductPriceRateId": "string",
                      "ProductDiscountRateId": "string",
                      "DiscountPercentRate": 77,
                      "RappelDiscountPercentRate": 93,
                      "PaymentMethodDiscountRate": 50,
                      "RouteId": "string",
                      "ZoneId": "string",
                      "SalesPersonId": "string",
                      "CommissionRate": 58,
                      "LegalRepresentativeName": "string",
                      "CustomerGroupId": "string",
                      "Timestamp": "2021-02-25T14:44:51.298Z",
                      "TaxNumberType": "Undefined",
                      "CustomerType": "Undefined",
                      "TaxType": "ImportExport",
                      "Contacts": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "AddressId": "string",
                          "Email": "string",
                          "Telephone": "string",
                          "Mobile": "string",
                          "Fax": "string",
                          "Timestamp": "2021-02-25T14:44:51.298Z"
                        }
                      ],
                      "PaymentMethod": {
                        "Id": "string",
                        "CompanyId": "string",
                        "Code": 0,
                        "Name": "string",
                        "Instalments": 0,
                        "FirstInstalmentDay": 0,
                        "DaysBetweenInstalments": 0,
                        "Timestamp": "2021-02-25T14:44:51.298Z"
                      },
                      "Addresses": [
                        {
                          "Id": "string",
                          "FullAddress": "string",
                          "Street": "string",
                          "Number": "string",
                          "Letter": "string",
                          "Stair": "string",
                          "Floor": "string",
                          "Door": "string",
                          "CountryId": "string",
                          "Country": "string",
                          "RegionId": "string",
                          "Region": "string",
                          "PostalCode": "string",
                          "CityId": "string",
                          "City": "string",
                          "Email": "string",
                          "Telephone": "string",
                          "Mobile": "string",
                          "Fax": "string",
                          "AddressName": "string",
                          "AlternativeBusinessName": "string",
                          "Timestamp": "2021-02-25T14:44:51.298Z",
                          "Type": "Undefined",
                          "StreetType": "Hill"
                        }
                      ],
                      "BankAccount": {
                        "Id": "string",
                        "BankId": "string",
                        "Name": "string",
                        "IBAN": "string",
                        "Timestamp": "2021-02-25T14:44:51.298Z"
                      },
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.298Z",
                          "DataType": "Decimal"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Customers",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Name": "string",
                      "BusinessName": "string",
                      "CommercialName": "string",
                      "Code": "string",
                      "Active": false,
                      "TaxNumber": "string",
                      "Notes": "string",
                      "FinancialLimit": 46,
                      "VATTaxRateId": "string",
                      "ProductPriceRateId": "string",
                      "ProductDiscountRateId": "string",
                      "DiscountPercentRate": 77,
                      "RappelDiscountPercentRate": 93,
                      "PaymentMethodDiscountRate": 50,
                      "RouteId": "string",
                      "ZoneId": "string",
                      "SalesPersonId": "string",
                      "CommissionRate": 58,
                      "LegalRepresentativeName": "string",
                      "CustomerGroupId": "string",
                      "Timestamp": "2021-02-25T14:44:51.298Z",
                      "TaxNumberType": "Undefined",
                      "CustomerType": "Undefined",
                      "TaxType": "ImportExport",
                      "Contacts": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "AddressId": "string",
                          "Email": "string",
                          "Telephone": "string",
                          "Mobile": "string",
                          "Fax": "string",
                          "Timestamp": "2021-02-25T14:44:51.298Z"
                        }
                      ],
                      "PaymentMethod": {
                        "Id": "string",
                        "CompanyId": "string",
                        "Code": 0,
                        "Name": "string",
                        "Instalments": 0,
                        "FirstInstalmentDay": 0,
                        "DaysBetweenInstalments": 0,
                        "Timestamp": "2021-02-25T14:44:51.298Z"
                      },
                      "Addresses": [
                        {
                          "Id": "string",
                          "FullAddress": "string",
                          "Street": "string",
                          "Number": "string",
                          "Letter": "string",
                          "Stair": "string",
                          "Floor": "string",
                          "Door": "string",
                          "CountryId": "string",
                          "Country": "string",
                          "RegionId": "string",
                          "Region": "string",
                          "PostalCode": "string",
                          "CityId": "string",
                          "City": "string",
                          "Email": "string",
                          "Telephone": "string",
                          "Mobile": "string",
                          "Fax": "string",
                          "AddressName": "string",
                          "AlternativeBusinessName": "string",
                          "Timestamp": "2021-02-25T14:44:51.298Z",
                          "Type": "Undefined",
                          "StreetType": "Hill"
                        }
                      ],
                      "BankAccount": {
                        "Id": "string",
                        "BankId": "string",
                        "Name": "string",
                        "IBAN": "string",
                        "Timestamp": "2021-02-25T14:44:51.298Z"
                      },
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.298Z",
                          "DataType": "Decimal"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Customers({Id})": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Returns a customer",
        "operationId": "GET_Customers_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Customer id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Customers/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Name": "string",
                  "BusinessName": "string",
                  "CommercialName": "string",
                  "Code": "string",
                  "Active": true,
                  "TaxNumber": "string",
                  "Notes": "string",
                  "FinancialLimit": 66,
                  "VATTaxRateId": "string",
                  "ProductPriceRateId": "string",
                  "ProductDiscountRateId": "string",
                  "DiscountPercentRate": 13,
                  "RappelDiscountPercentRate": 53,
                  "PaymentMethodDiscountRate": 51,
                  "RouteId": "string",
                  "ZoneId": "string",
                  "SalesPersonId": "string",
                  "CommissionRate": 19,
                  "LegalRepresentativeName": "string",
                  "CustomerGroupId": "string",
                  "Timestamp": "2021-02-25T14:44:51.303Z",
                  "TaxNumberType": "Undefined",
                  "CustomerType": "Customer",
                  "TaxType": "Undefined",
                  "Contacts": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "AddressId": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "Timestamp": "2021-02-25T14:44:51.303Z"
                    }
                  ],
                  "PaymentMethod": {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": 0,
                    "Name": "string",
                    "Instalments": 0,
                    "FirstInstalmentDay": 0,
                    "DaysBetweenInstalments": 0,
                    "Timestamp": "2021-02-25T14:44:51.303Z"
                  },
                  "Addresses": [
                    {
                      "Id": "string",
                      "FullAddress": "string",
                      "Street": "string",
                      "Number": "string",
                      "Letter": "string",
                      "Stair": "string",
                      "Floor": "string",
                      "Door": "string",
                      "CountryId": "string",
                      "Country": "string",
                      "RegionId": "string",
                      "Region": "string",
                      "PostalCode": "string",
                      "CityId": "string",
                      "City": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "AddressName": "string",
                      "AlternativeBusinessName": "string",
                      "Timestamp": "2021-02-25T14:44:51.303Z",
                      "Type": "Main",
                      "StreetType": "Town"
                    }
                  ],
                  "BankAccount": {
                    "Id": "string",
                    "BankId": "string",
                    "Name": "string",
                    "IBAN": "string",
                    "Timestamp": "2021-02-25T14:44:51.303Z"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.303Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Customers/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Name": "string",
                  "BusinessName": "string",
                  "CommercialName": "string",
                  "Code": "string",
                  "Active": true,
                  "TaxNumber": "string",
                  "Notes": "string",
                  "FinancialLimit": 66,
                  "VATTaxRateId": "string",
                  "ProductPriceRateId": "string",
                  "ProductDiscountRateId": "string",
                  "DiscountPercentRate": 13,
                  "RappelDiscountPercentRate": 53,
                  "PaymentMethodDiscountRate": 51,
                  "RouteId": "string",
                  "ZoneId": "string",
                  "SalesPersonId": "string",
                  "CommissionRate": 19,
                  "LegalRepresentativeName": "string",
                  "CustomerGroupId": "string",
                  "Timestamp": "2021-02-25T14:44:51.303Z",
                  "TaxNumberType": "Undefined",
                  "CustomerType": "Customer",
                  "TaxType": "Undefined",
                  "Contacts": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "AddressId": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "Timestamp": "2021-02-25T14:44:51.303Z"
                    }
                  ],
                  "PaymentMethod": {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": 0,
                    "Name": "string",
                    "Instalments": 0,
                    "FirstInstalmentDay": 0,
                    "DaysBetweenInstalments": 0,
                    "Timestamp": "2021-02-25T14:44:51.303Z"
                  },
                  "Addresses": [
                    {
                      "Id": "string",
                      "FullAddress": "string",
                      "Street": "string",
                      "Number": "string",
                      "Letter": "string",
                      "Stair": "string",
                      "Floor": "string",
                      "Door": "string",
                      "CountryId": "string",
                      "Country": "string",
                      "RegionId": "string",
                      "Region": "string",
                      "PostalCode": "string",
                      "CityId": "string",
                      "City": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "AddressName": "string",
                      "AlternativeBusinessName": "string",
                      "Timestamp": "2021-02-25T14:44:51.303Z",
                      "Type": "Main",
                      "StreetType": "Town"
                    }
                  ],
                  "BankAccount": {
                    "Id": "string",
                    "BankId": "string",
                    "Name": "string",
                    "IBAN": "string",
                    "Timestamp": "2021-02-25T14:44:51.303Z"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.303Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Updates a customer",
        "operationId": "PUT_Customers_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Customer id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Customer resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Name": "string",
                "BusinessName": "string",
                "CommercialName": "string",
                "Code": "string",
                "Active": false,
                "TaxNumber": "string",
                "Notes": "string",
                "FinancialLimit": 22,
                "VATTaxRateId": "string",
                "ProductPriceRateId": "string",
                "ProductDiscountRateId": "string",
                "DiscountPercentRate": 0,
                "RappelDiscountPercentRate": 83,
                "PaymentMethodDiscountRate": 15,
                "RouteId": "string",
                "ZoneId": "string",
                "SalesPersonId": "string",
                "CommissionRate": 18,
                "LegalRepresentativeName": "string",
                "CustomerGroupId": "string",
                "Timestamp": "2021-02-25T14:44:51.310Z",
                "TaxNumberType": "ResidenceCertificate",
                "CustomerType": "Lead",
                "TaxType": "EuropeanUnion",
                "Contacts": [
                  {
                    "Id": "string",
                    "Name": "string",
                    "AddressId": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "Timestamp": "2021-02-25T14:44:51.310Z"
                  }
                ],
                "PaymentMethod": {
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Name": "string",
                  "Instalments": 0,
                  "FirstInstalmentDay": 0,
                  "DaysBetweenInstalments": 0,
                  "Timestamp": "2021-02-25T14:44:51.310Z"
                },
                "Addresses": [
                  {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:51.310Z",
                    "Type": "Commercial",
                    "StreetType": "Ride"
                  }
                ],
                "BankAccount": {
                  "Id": "string",
                  "BankId": "string",
                  "Name": "string",
                  "IBAN": "string",
                  "Timestamp": "2021-02-25T14:44:51.310Z"
                },
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.310Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Name": "string",
                "BusinessName": "string",
                "CommercialName": "string",
                "Code": "string",
                "Active": false,
                "TaxNumber": "string",
                "Notes": "string",
                "FinancialLimit": 22,
                "VATTaxRateId": "string",
                "ProductPriceRateId": "string",
                "ProductDiscountRateId": "string",
                "DiscountPercentRate": 0,
                "RappelDiscountPercentRate": 83,
                "PaymentMethodDiscountRate": 15,
                "RouteId": "string",
                "ZoneId": "string",
                "SalesPersonId": "string",
                "CommissionRate": 18,
                "LegalRepresentativeName": "string",
                "CustomerGroupId": "string",
                "Timestamp": "2021-02-25T14:44:51.310Z",
                "TaxNumberType": "ResidenceCertificate",
                "CustomerType": "Lead",
                "TaxType": "EuropeanUnion",
                "Contacts": [
                  {
                    "Id": "string",
                    "Name": "string",
                    "AddressId": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "Timestamp": "2021-02-25T14:44:51.310Z"
                  }
                ],
                "PaymentMethod": {
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Name": "string",
                  "Instalments": 0,
                  "FirstInstalmentDay": 0,
                  "DaysBetweenInstalments": 0,
                  "Timestamp": "2021-02-25T14:44:51.310Z"
                },
                "Addresses": [
                  {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:51.310Z",
                    "Type": "Commercial",
                    "StreetType": "Ride"
                  }
                ],
                "BankAccount": {
                  "Id": "string",
                  "BankId": "string",
                  "Name": "string",
                  "IBAN": "string",
                  "Timestamp": "2021-02-25T14:44:51.310Z"
                },
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.310Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Customers/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Name": "string",
                  "BusinessName": "string",
                  "CommercialName": "string",
                  "Code": "string",
                  "Active": true,
                  "TaxNumber": "string",
                  "Notes": "string",
                  "FinancialLimit": 66,
                  "VATTaxRateId": "string",
                  "ProductPriceRateId": "string",
                  "ProductDiscountRateId": "string",
                  "DiscountPercentRate": 13,
                  "RappelDiscountPercentRate": 53,
                  "PaymentMethodDiscountRate": 51,
                  "RouteId": "string",
                  "ZoneId": "string",
                  "SalesPersonId": "string",
                  "CommissionRate": 19,
                  "LegalRepresentativeName": "string",
                  "CustomerGroupId": "string",
                  "Timestamp": "2021-02-25T14:44:51.310Z",
                  "TaxNumberType": "Undefined",
                  "CustomerType": "Customer",
                  "TaxType": "Undefined",
                  "Contacts": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "AddressId": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "Timestamp": "2021-02-25T14:44:51.310Z"
                    }
                  ],
                  "PaymentMethod": {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": 0,
                    "Name": "string",
                    "Instalments": 0,
                    "FirstInstalmentDay": 0,
                    "DaysBetweenInstalments": 0,
                    "Timestamp": "2021-02-25T14:44:51.310Z"
                  },
                  "Addresses": [
                    {
                      "Id": "string",
                      "FullAddress": "string",
                      "Street": "string",
                      "Number": "string",
                      "Letter": "string",
                      "Stair": "string",
                      "Floor": "string",
                      "Door": "string",
                      "CountryId": "string",
                      "Country": "string",
                      "RegionId": "string",
                      "Region": "string",
                      "PostalCode": "string",
                      "CityId": "string",
                      "City": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "AddressName": "string",
                      "AlternativeBusinessName": "string",
                      "Timestamp": "2021-02-25T14:44:51.310Z",
                      "Type": "Main",
                      "StreetType": "Town"
                    }
                  ],
                  "BankAccount": {
                    "Id": "string",
                    "BankId": "string",
                    "Name": "string",
                    "IBAN": "string",
                    "Timestamp": "2021-02-25T14:44:51.310Z"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.310Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Customers/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Name": "string",
                  "BusinessName": "string",
                  "CommercialName": "string",
                  "Code": "string",
                  "Active": true,
                  "TaxNumber": "string",
                  "Notes": "string",
                  "FinancialLimit": 66,
                  "VATTaxRateId": "string",
                  "ProductPriceRateId": "string",
                  "ProductDiscountRateId": "string",
                  "DiscountPercentRate": 13,
                  "RappelDiscountPercentRate": 53,
                  "PaymentMethodDiscountRate": 51,
                  "RouteId": "string",
                  "ZoneId": "string",
                  "SalesPersonId": "string",
                  "CommissionRate": 19,
                  "LegalRepresentativeName": "string",
                  "CustomerGroupId": "string",
                  "Timestamp": "2021-02-25T14:44:51.310Z",
                  "TaxNumberType": "Undefined",
                  "CustomerType": "Customer",
                  "TaxType": "Undefined",
                  "Contacts": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "AddressId": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "Timestamp": "2021-02-25T14:44:51.310Z"
                    }
                  ],
                  "PaymentMethod": {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": 0,
                    "Name": "string",
                    "Instalments": 0,
                    "FirstInstalmentDay": 0,
                    "DaysBetweenInstalments": 0,
                    "Timestamp": "2021-02-25T14:44:51.310Z"
                  },
                  "Addresses": [
                    {
                      "Id": "string",
                      "FullAddress": "string",
                      "Street": "string",
                      "Number": "string",
                      "Letter": "string",
                      "Stair": "string",
                      "Floor": "string",
                      "Door": "string",
                      "CountryId": "string",
                      "Country": "string",
                      "RegionId": "string",
                      "Region": "string",
                      "PostalCode": "string",
                      "CityId": "string",
                      "City": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "AddressName": "string",
                      "AlternativeBusinessName": "string",
                      "Timestamp": "2021-02-25T14:44:51.310Z",
                      "Type": "Main",
                      "StreetType": "Town"
                    }
                  ],
                  "BankAccount": {
                    "Id": "string",
                    "BankId": "string",
                    "Name": "string",
                    "IBAN": "string",
                    "Timestamp": "2021-02-25T14:44:51.310Z"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.310Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Deletes a customer",
        "operationId": "DELETE_Customers_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Customer id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Healthcheck": {
      "get": {
        "tags": [
          "Healthcheck"
        ],
        "summary": "Checks api health",
        "operationId": "Get_Healthcheck",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The server cannot produce a response matching the accept header"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The server cannot produce a response matching the accept header"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "501": {
            "description": "Server Error"
          },
          "502": {
            "description": "Server Error"
          },
          "503": {
            "description": "Server Error"
          },
          "504": {
            "description": "Server Error"
          }
        }
      }
    },
    "/IncomeTaxRates": {
      "get": {
        "tags": [
          "IncomeTaxRates"
        ],
        "summary": "Returns all income tax rates",
        "operationId": "QUERY_IncomeTaxRates_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncomeTaxRate"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#IncomeTaxRates",
                  "value": [
                    {
                      "Id": "string",
                      "Code": 0,
                      "Name": "string",
                      "TaxRate": 36,
                      "Timestamp": "2021-02-25T14:44:51.333Z",
                      "Type": "EmployeesCashReturn",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.333Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncomeTaxRate"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#IncomeTaxRates",
                  "value": [
                    {
                      "Id": "string",
                      "Code": 0,
                      "Name": "string",
                      "TaxRate": 36,
                      "Timestamp": "2021-02-25T14:44:51.333Z",
                      "Type": "EmployeesCashReturn",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.333Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/IncomeTaxRates({Id})": {
      "get": {
        "tags": [
          "IncomeTaxRates"
        ],
        "summary": "Returns an income tax rate",
        "operationId": "GET_IncomeTaxRates_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "IncomeTaxRate id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "IncomeTaxRate id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomeTaxRate"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#IncomeTaxRates/$entity",
                  "Id": "string",
                  "Code": 0,
                  "Name": "string",
                  "TaxRate": 33,
                  "Timestamp": "2021-02-25T14:44:51.337Z",
                  "Type": "EmployeesCashReturn",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.337Z",
                      "DataType": "Decimal"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomeTaxRate"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#IncomeTaxRates/$entity",
                  "Id": "string",
                  "Code": 0,
                  "Name": "string",
                  "TaxRate": 33,
                  "Timestamp": "2021-02-25T14:44:51.337Z",
                  "Type": "EmployeesCashReturn",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.337Z",
                      "DataType": "Decimal"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/PaymentMethods": {
      "get": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "Returns all payment methods",
        "operationId": "QUERY_PaymentMethods_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#PaymentMethods",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": 0,
                      "Name": "string",
                      "Instalments": 0,
                      "FirstInstalmentDay": 0,
                      "DaysBetweenInstalments": 0,
                      "Timestamp": "2021-02-25T14:44:51.345Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.345Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#PaymentMethods",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": 0,
                      "Name": "string",
                      "Instalments": 0,
                      "FirstInstalmentDay": 0,
                      "DaysBetweenInstalments": 0,
                      "Timestamp": "2021-02-25T14:44:51.345Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.345Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/PaymentMethods({Id})": {
      "get": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "Returns a payment method",
        "operationId": "GET_PaymentMethods_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "PaymentMethod id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "PaymentMethod id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#PaymentMethods/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Name": "string",
                  "Instalments": 0,
                  "FirstInstalmentDay": 0,
                  "DaysBetweenInstalments": 0,
                  "Timestamp": "2021-02-25T14:44:51.349Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.349Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#PaymentMethods/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Name": "string",
                  "Instalments": 0,
                  "FirstInstalmentDay": 0,
                  "DaysBetweenInstalments": 0,
                  "Timestamp": "2021-02-25T14:44:51.349Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.349Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductFamilies": {
      "post": {
        "tags": [
          "ProductFamilies"
        ],
        "summary": "Creates a product family",
        "operationId": "POST_ProductFamilies_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ProductFamily resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFamily"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.361Z",
                "Subfamilies": [
                  {
                    "Id": "string",
                    "Code": "string",
                    "Name": "string",
                    "Timestamp": "2021-02-25T14:44:51.361Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.361Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFamily"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.361Z",
                "Subfamilies": [
                  {
                    "Id": "string",
                    "Code": "string",
                    "Name": "string",
                    "Timestamp": "2021-02-25T14:44:51.361Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.361Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductFamilies/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.361Z",
                  "Subfamilies": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.361Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.361Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductFamilies/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.361Z",
                  "Subfamilies": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.361Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.361Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductFamilies"
        ],
        "summary": "Returns all product families",
        "operationId": "QUERY_ProductFamilies_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductFamily"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductFamilies",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.367Z",
                      "Subfamilies": [
                        {
                          "Id": "string",
                          "Code": "string",
                          "Name": "string",
                          "Timestamp": "2021-02-25T14:44:51.367Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.367Z",
                          "DataType": "Undefined"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductFamily"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductFamilies",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.367Z",
                      "Subfamilies": [
                        {
                          "Id": "string",
                          "Code": "string",
                          "Name": "string",
                          "Timestamp": "2021-02-25T14:44:51.367Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.367Z",
                          "DataType": "Undefined"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductFamilies({Id})": {
      "get": {
        "tags": [
          "ProductFamilies"
        ],
        "summary": "Returns a product family",
        "operationId": "GET_ProductFamilies_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductFamily id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductFamily id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFamily"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductFamilies/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.371Z",
                  "Subfamilies": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.371Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.371Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFamily"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductFamilies/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.371Z",
                  "Subfamilies": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.371Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.371Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductFamilies"
        ],
        "summary": "Updates a product family",
        "operationId": "PUT_ProductFamilies_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductFamily id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductFamily id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ProductFamily resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFamily"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.378Z",
                "Subfamilies": [
                  {
                    "Id": "string",
                    "Code": "string",
                    "Name": "string",
                    "Timestamp": "2021-02-25T14:44:51.378Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.378Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFamily"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.378Z",
                "Subfamilies": [
                  {
                    "Id": "string",
                    "Code": "string",
                    "Name": "string",
                    "Timestamp": "2021-02-25T14:44:51.378Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.378Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductFamilies/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.378Z",
                  "Subfamilies": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.378Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.378Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductFamilies/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.378Z",
                  "Subfamilies": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.378Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.378Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductFamilies"
        ],
        "summary": "Deletes a product family",
        "operationId": "DELETE_ProductFamilies_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductFamily id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductFamily id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductKits": {
      "post": {
        "tags": [
          "ProductKits"
        ],
        "summary": "Creates a product kit",
        "operationId": "POST_ProductKits_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ProductKit resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductKit"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "Description": "string",
                "ProductId": "string",
                "Quantity": 9,
                "QuantityMeasureUnit": 4,
                "ColourId": "string",
                "BlockStock": true,
                "DetailProductKitComponentQuote": false,
                "DetailProductKitComponentOrder": true,
                "DetailProductKitComponentDeliveryNote": true,
                "PriceProductKitComponent0": false,
                "Timestamp": "2021-02-25T14:44:51.403Z",
                "MeasureUnit": {
                  "Id": "string",
                  "Name": "string",
                  "ConversionFactor": 83,
                  "Timestamp": "2021-02-25T14:44:51.403Z"
                },
                "Components": [
                  {
                    "Id": "string",
                    "ProductId": "string",
                    "Quantity": 15,
                    "QuantityMeasureUnit": 15,
                    "ProductSizeId": "string",
                    "ColourId": "string",
                    "Timestamp": "2021-02-25T14:44:51.403Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.403Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductKit"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "Description": "string",
                "ProductId": "string",
                "Quantity": 9,
                "QuantityMeasureUnit": 4,
                "ColourId": "string",
                "BlockStock": true,
                "DetailProductKitComponentQuote": false,
                "DetailProductKitComponentOrder": true,
                "DetailProductKitComponentDeliveryNote": true,
                "PriceProductKitComponent0": false,
                "Timestamp": "2021-02-25T14:44:51.403Z",
                "MeasureUnit": {
                  "Id": "string",
                  "Name": "string",
                  "ConversionFactor": 83,
                  "Timestamp": "2021-02-25T14:44:51.403Z"
                },
                "Components": [
                  {
                    "Id": "string",
                    "ProductId": "string",
                    "Quantity": 15,
                    "QuantityMeasureUnit": 15,
                    "ProductSizeId": "string",
                    "ColourId": "string",
                    "Timestamp": "2021-02-25T14:44:51.403Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.403Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductKits/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Description": "string",
                  "ProductId": "string",
                  "Quantity": 19,
                  "QuantityMeasureUnit": 93,
                  "ColourId": "string",
                  "BlockStock": true,
                  "DetailProductKitComponentQuote": true,
                  "DetailProductKitComponentOrder": false,
                  "DetailProductKitComponentDeliveryNote": true,
                  "PriceProductKitComponent0": true,
                  "Timestamp": "2021-02-25T14:44:51.403Z",
                  "MeasureUnit": {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 53,
                    "Timestamp": "2021-02-25T14:44:51.403Z"
                  },
                  "Components": [
                    {
                      "Id": "string",
                      "ProductId": "string",
                      "Quantity": 51,
                      "QuantityMeasureUnit": 51,
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Timestamp": "2021-02-25T14:44:51.403Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.403Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductKits/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Description": "string",
                  "ProductId": "string",
                  "Quantity": 19,
                  "QuantityMeasureUnit": 93,
                  "ColourId": "string",
                  "BlockStock": true,
                  "DetailProductKitComponentQuote": true,
                  "DetailProductKitComponentOrder": false,
                  "DetailProductKitComponentDeliveryNote": true,
                  "PriceProductKitComponent0": true,
                  "Timestamp": "2021-02-25T14:44:51.403Z",
                  "MeasureUnit": {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 53,
                    "Timestamp": "2021-02-25T14:44:51.403Z"
                  },
                  "Components": [
                    {
                      "Id": "string",
                      "ProductId": "string",
                      "Quantity": 51,
                      "QuantityMeasureUnit": 51,
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Timestamp": "2021-02-25T14:44:51.403Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.403Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductKits"
        ],
        "summary": "Returns all product kits",
        "operationId": "QUERY_ProductKits_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductKit"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductKits",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": 0,
                      "Description": "string",
                      "ProductId": "string",
                      "Quantity": 26,
                      "QuantityMeasureUnit": 99,
                      "ColourId": "string",
                      "BlockStock": false,
                      "DetailProductKitComponentQuote": true,
                      "DetailProductKitComponentOrder": false,
                      "DetailProductKitComponentDeliveryNote": false,
                      "PriceProductKitComponent0": true,
                      "Timestamp": "2021-02-25T14:44:51.410Z",
                      "MeasureUnit": {
                        "Id": "string",
                        "Name": "string",
                        "ConversionFactor": 43,
                        "Timestamp": "2021-02-25T14:44:51.410Z"
                      },
                      "Components": [
                        {
                          "Id": "string",
                          "ProductId": "string",
                          "Quantity": 86,
                          "QuantityMeasureUnit": 86,
                          "ProductSizeId": "string",
                          "ColourId": "string",
                          "Timestamp": "2021-02-25T14:44:51.410Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.410Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductKit"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductKits",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": 0,
                      "Description": "string",
                      "ProductId": "string",
                      "Quantity": 26,
                      "QuantityMeasureUnit": 99,
                      "ColourId": "string",
                      "BlockStock": false,
                      "DetailProductKitComponentQuote": true,
                      "DetailProductKitComponentOrder": false,
                      "DetailProductKitComponentDeliveryNote": false,
                      "PriceProductKitComponent0": true,
                      "Timestamp": "2021-02-25T14:44:51.410Z",
                      "MeasureUnit": {
                        "Id": "string",
                        "Name": "string",
                        "ConversionFactor": 43,
                        "Timestamp": "2021-02-25T14:44:51.410Z"
                      },
                      "Components": [
                        {
                          "Id": "string",
                          "ProductId": "string",
                          "Quantity": 86,
                          "QuantityMeasureUnit": 86,
                          "ProductSizeId": "string",
                          "ColourId": "string",
                          "Timestamp": "2021-02-25T14:44:51.410Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.410Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductKits({Id})": {
      "get": {
        "tags": [
          "ProductKits"
        ],
        "summary": "Returns a product kit",
        "operationId": "GET_ProductKits_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductKit id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductKit id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductKit"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductKits/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Description": "string",
                  "ProductId": "string",
                  "Quantity": 19,
                  "QuantityMeasureUnit": 93,
                  "ColourId": "string",
                  "BlockStock": true,
                  "DetailProductKitComponentQuote": true,
                  "DetailProductKitComponentOrder": false,
                  "DetailProductKitComponentDeliveryNote": true,
                  "PriceProductKitComponent0": true,
                  "Timestamp": "2021-02-25T14:44:51.415Z",
                  "MeasureUnit": {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 53,
                    "Timestamp": "2021-02-25T14:44:51.415Z"
                  },
                  "Components": [
                    {
                      "Id": "string",
                      "ProductId": "string",
                      "Quantity": 51,
                      "QuantityMeasureUnit": 51,
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Timestamp": "2021-02-25T14:44:51.415Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.415Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductKit"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductKits/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Description": "string",
                  "ProductId": "string",
                  "Quantity": 19,
                  "QuantityMeasureUnit": 93,
                  "ColourId": "string",
                  "BlockStock": true,
                  "DetailProductKitComponentQuote": true,
                  "DetailProductKitComponentOrder": false,
                  "DetailProductKitComponentDeliveryNote": true,
                  "PriceProductKitComponent0": true,
                  "Timestamp": "2021-02-25T14:44:51.415Z",
                  "MeasureUnit": {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 53,
                    "Timestamp": "2021-02-25T14:44:51.415Z"
                  },
                  "Components": [
                    {
                      "Id": "string",
                      "ProductId": "string",
                      "Quantity": 51,
                      "QuantityMeasureUnit": 51,
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Timestamp": "2021-02-25T14:44:51.415Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.415Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductKits"
        ],
        "summary": "Updates a product kit",
        "operationId": "PUT_ProductKits_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductKit id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductKit id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ProductKit resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductKit"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "Description": "string",
                "ProductId": "string",
                "Quantity": 9,
                "QuantityMeasureUnit": 4,
                "ColourId": "string",
                "BlockStock": true,
                "DetailProductKitComponentQuote": false,
                "DetailProductKitComponentOrder": true,
                "DetailProductKitComponentDeliveryNote": true,
                "PriceProductKitComponent0": false,
                "Timestamp": "2021-02-25T14:44:51.419Z",
                "MeasureUnit": {
                  "Id": "string",
                  "Name": "string",
                  "ConversionFactor": 83,
                  "Timestamp": "2021-02-25T14:44:51.419Z"
                },
                "Components": [
                  {
                    "Id": "string",
                    "ProductId": "string",
                    "Quantity": 15,
                    "QuantityMeasureUnit": 15,
                    "ProductSizeId": "string",
                    "ColourId": "string",
                    "Timestamp": "2021-02-25T14:44:51.419Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.419Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductKit"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "Description": "string",
                "ProductId": "string",
                "Quantity": 9,
                "QuantityMeasureUnit": 4,
                "ColourId": "string",
                "BlockStock": true,
                "DetailProductKitComponentQuote": false,
                "DetailProductKitComponentOrder": true,
                "DetailProductKitComponentDeliveryNote": true,
                "PriceProductKitComponent0": false,
                "Timestamp": "2021-02-25T14:44:51.419Z",
                "MeasureUnit": {
                  "Id": "string",
                  "Name": "string",
                  "ConversionFactor": 83,
                  "Timestamp": "2021-02-25T14:44:51.419Z"
                },
                "Components": [
                  {
                    "Id": "string",
                    "ProductId": "string",
                    "Quantity": 15,
                    "QuantityMeasureUnit": 15,
                    "ProductSizeId": "string",
                    "ColourId": "string",
                    "Timestamp": "2021-02-25T14:44:51.419Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.419Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductKits/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Description": "string",
                  "ProductId": "string",
                  "Quantity": 19,
                  "QuantityMeasureUnit": 93,
                  "ColourId": "string",
                  "BlockStock": true,
                  "DetailProductKitComponentQuote": true,
                  "DetailProductKitComponentOrder": false,
                  "DetailProductKitComponentDeliveryNote": true,
                  "PriceProductKitComponent0": true,
                  "Timestamp": "2021-02-25T14:44:51.419Z",
                  "MeasureUnit": {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 53,
                    "Timestamp": "2021-02-25T14:44:51.419Z"
                  },
                  "Components": [
                    {
                      "Id": "string",
                      "ProductId": "string",
                      "Quantity": 51,
                      "QuantityMeasureUnit": 51,
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Timestamp": "2021-02-25T14:44:51.419Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.419Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductKits/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Description": "string",
                  "ProductId": "string",
                  "Quantity": 19,
                  "QuantityMeasureUnit": 93,
                  "ColourId": "string",
                  "BlockStock": true,
                  "DetailProductKitComponentQuote": true,
                  "DetailProductKitComponentOrder": false,
                  "DetailProductKitComponentDeliveryNote": true,
                  "PriceProductKitComponent0": true,
                  "Timestamp": "2021-02-25T14:44:51.419Z",
                  "MeasureUnit": {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 53,
                    "Timestamp": "2021-02-25T14:44:51.419Z"
                  },
                  "Components": [
                    {
                      "Id": "string",
                      "ProductId": "string",
                      "Quantity": 51,
                      "QuantityMeasureUnit": 51,
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Timestamp": "2021-02-25T14:44:51.419Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.419Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductKits"
        ],
        "summary": "Deletes a product kit",
        "operationId": "DELETE_ProductKits_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductKit id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductKit id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductPacks": {
      "post": {
        "tags": [
          "ProductPacks"
        ],
        "summary": "Creates a product pack",
        "operationId": "POST_ProductPacks_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ProductPack resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPack"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "AlternativeCode": "string",
                "ProductId": "string",
                "Name": "string",
                "ShortDescription": "string",
                "LongDescription": "string",
                "Quantity": 73,
                "DiscountRate": 22,
                "Discount2Rate": 55,
                "Discount3Rate": 50,
                "MeasureUnitId": "string",
                "Timestamp": "2021-02-25T14:44:51.435Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.435Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPack"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "AlternativeCode": "string",
                "ProductId": "string",
                "Name": "string",
                "ShortDescription": "string",
                "LongDescription": "string",
                "Quantity": 73,
                "DiscountRate": 22,
                "Discount2Rate": 55,
                "Discount3Rate": 50,
                "MeasureUnitId": "string",
                "Timestamp": "2021-02-25T14:44:51.435Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.435Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPacks/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "AlternativeCode": "string",
                  "ProductId": "string",
                  "Name": "string",
                  "ShortDescription": "string",
                  "LongDescription": "string",
                  "Quantity": 56,
                  "DiscountRate": 66,
                  "Discount2Rate": 39,
                  "Discount3Rate": 71,
                  "MeasureUnitId": "string",
                  "Timestamp": "2021-02-25T14:44:51.435Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.435Z",
                      "DataType": "Boolean"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPacks/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "AlternativeCode": "string",
                  "ProductId": "string",
                  "Name": "string",
                  "ShortDescription": "string",
                  "LongDescription": "string",
                  "Quantity": 56,
                  "DiscountRate": 66,
                  "Discount2Rate": 39,
                  "Discount3Rate": 71,
                  "MeasureUnitId": "string",
                  "Timestamp": "2021-02-25T14:44:51.435Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.435Z",
                      "DataType": "Boolean"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductPacks"
        ],
        "summary": "Returns all product packs",
        "operationId": "QUERY_ProductPacks_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductPack"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPacks",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": 0,
                      "AlternativeCode": "string",
                      "ProductId": "string",
                      "Name": "string",
                      "ShortDescription": "string",
                      "LongDescription": "string",
                      "Quantity": 38,
                      "DiscountRate": 99,
                      "Discount2Rate": 2,
                      "Discount3Rate": 40,
                      "MeasureUnitId": "string",
                      "Timestamp": "2021-02-25T14:44:51.443Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.443Z",
                          "DataType": "Date"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductPack"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPacks",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": 0,
                      "AlternativeCode": "string",
                      "ProductId": "string",
                      "Name": "string",
                      "ShortDescription": "string",
                      "LongDescription": "string",
                      "Quantity": 38,
                      "DiscountRate": 99,
                      "Discount2Rate": 2,
                      "Discount3Rate": 40,
                      "MeasureUnitId": "string",
                      "Timestamp": "2021-02-25T14:44:51.443Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.443Z",
                          "DataType": "Date"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductPacks({Id})": {
      "get": {
        "tags": [
          "ProductPacks"
        ],
        "summary": "Returns a product pack",
        "operationId": "GET_ProductPacks_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductPack id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductPack id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPack"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPacks/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "AlternativeCode": "string",
                  "ProductId": "string",
                  "Name": "string",
                  "ShortDescription": "string",
                  "LongDescription": "string",
                  "Quantity": 56,
                  "DiscountRate": 66,
                  "Discount2Rate": 39,
                  "Discount3Rate": 71,
                  "MeasureUnitId": "string",
                  "Timestamp": "2021-02-25T14:44:51.448Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.448Z",
                      "DataType": "Boolean"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPack"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPacks/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "AlternativeCode": "string",
                  "ProductId": "string",
                  "Name": "string",
                  "ShortDescription": "string",
                  "LongDescription": "string",
                  "Quantity": 56,
                  "DiscountRate": 66,
                  "Discount2Rate": 39,
                  "Discount3Rate": 71,
                  "MeasureUnitId": "string",
                  "Timestamp": "2021-02-25T14:44:51.448Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.448Z",
                      "DataType": "Boolean"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductPacks"
        ],
        "summary": "Updates a product pack",
        "operationId": "PUT_ProductPacks_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductPack id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductPack id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ProductPack resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPack"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "AlternativeCode": "string",
                "ProductId": "string",
                "Name": "string",
                "ShortDescription": "string",
                "LongDescription": "string",
                "Quantity": 73,
                "DiscountRate": 22,
                "Discount2Rate": 55,
                "Discount3Rate": 50,
                "MeasureUnitId": "string",
                "Timestamp": "2021-02-25T14:44:51.453Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.453Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPack"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "AlternativeCode": "string",
                "ProductId": "string",
                "Name": "string",
                "ShortDescription": "string",
                "LongDescription": "string",
                "Quantity": 73,
                "DiscountRate": 22,
                "Discount2Rate": 55,
                "Discount3Rate": 50,
                "MeasureUnitId": "string",
                "Timestamp": "2021-02-25T14:44:51.453Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.453Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPacks/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "AlternativeCode": "string",
                  "ProductId": "string",
                  "Name": "string",
                  "ShortDescription": "string",
                  "LongDescription": "string",
                  "Quantity": 56,
                  "DiscountRate": 66,
                  "Discount2Rate": 39,
                  "Discount3Rate": 71,
                  "MeasureUnitId": "string",
                  "Timestamp": "2021-02-25T14:44:51.453Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.453Z",
                      "DataType": "Boolean"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPacks/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "AlternativeCode": "string",
                  "ProductId": "string",
                  "Name": "string",
                  "ShortDescription": "string",
                  "LongDescription": "string",
                  "Quantity": 56,
                  "DiscountRate": 66,
                  "Discount2Rate": 39,
                  "Discount3Rate": 71,
                  "MeasureUnitId": "string",
                  "Timestamp": "2021-02-25T14:44:51.453Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.453Z",
                      "DataType": "Boolean"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductPacks"
        ],
        "summary": "Deletes a product pack",
        "operationId": "DELETE_ProductPacks_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductPack id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductPack id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductPictures": {
      "post": {
        "tags": [
          "ProductPictures"
        ],
        "summary": "Creates a product picture",
        "operationId": "POST_ProductPictures_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ProductPicture resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPicture"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "ProductId": "string",
                "Description": "string",
                "Picture": "string",
                "Timestamp": "2021-02-25T14:44:51.465Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.465Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPicture"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "ProductId": "string",
                "Description": "string",
                "Picture": "string",
                "Timestamp": "2021-02-25T14:44:51.465Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.465Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPictures/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "ProductId": "string",
                  "Description": "string",
                  "Picture": "string",
                  "Timestamp": "2021-02-25T14:44:51.465Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.465Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPictures/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "ProductId": "string",
                  "Description": "string",
                  "Picture": "string",
                  "Timestamp": "2021-02-25T14:44:51.465Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.465Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductPictures"
        ],
        "summary": "Returns all product pictures",
        "operationId": "QUERY_ProductPictures_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductPicture"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPictures",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "ProductId": "string",
                      "Description": "string",
                      "Picture": "string",
                      "Timestamp": "2021-02-25T14:44:51.473Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.473Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductPicture"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPictures",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "ProductId": "string",
                      "Description": "string",
                      "Picture": "string",
                      "Timestamp": "2021-02-25T14:44:51.473Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.473Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductPictures({Id})": {
      "get": {
        "tags": [
          "ProductPictures"
        ],
        "summary": "Returns a product picture",
        "operationId": "GET_ProductPictures_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductPicture id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductPicture id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPicture"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPictures/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "ProductId": "string",
                  "Description": "string",
                  "Picture": "string",
                  "Timestamp": "2021-02-25T14:44:51.478Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.478Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPicture"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPictures/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "ProductId": "string",
                  "Description": "string",
                  "Picture": "string",
                  "Timestamp": "2021-02-25T14:44:51.478Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.478Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductPictures"
        ],
        "summary": "Updates a product picture",
        "operationId": "PUT_ProductPictures_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductPicture id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductPicture id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ProductPicture resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPicture"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "ProductId": "string",
                "Description": "string",
                "Picture": "string",
                "Timestamp": "2021-02-25T14:44:51.482Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.482Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPicture"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "ProductId": "string",
                "Description": "string",
                "Picture": "string",
                "Timestamp": "2021-02-25T14:44:51.482Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.482Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPictures/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "ProductId": "string",
                  "Description": "string",
                  "Picture": "string",
                  "Timestamp": "2021-02-25T14:44:51.482Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.482Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPictures/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "ProductId": "string",
                  "Description": "string",
                  "Picture": "string",
                  "Timestamp": "2021-02-25T14:44:51.482Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.482Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductPictures"
        ],
        "summary": "Deletes a product picture",
        "operationId": "DELETE_ProductPictures_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductPicture id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductPicture id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductPriceOffers": {
      "get": {
        "tags": [
          "ProductPriceOffers"
        ],
        "summary": "Returns all product price offers",
        "operationId": "QUERY_ProductPriceOffers_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductPriceOffer"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPriceOffers",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "ProductId": "string",
                      "StartDate": "2021-02-25T14:44:51.500Z",
                      "EndDate": "2021-02-25T14:44:51.500Z",
                      "MinimumUnitsForOffer": 26,
                      "MinimumUnitsForGift": 99,
                      "GiftProductId": "string",
                      "Price": 38,
                      "DiscountRate": 99,
                      "ApplyDiscount": false,
                      "Timestamp": "2021-02-25T14:44:51.500Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.500Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductPriceOffer"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPriceOffers",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "ProductId": "string",
                      "StartDate": "2021-02-25T14:44:51.500Z",
                      "EndDate": "2021-02-25T14:44:51.500Z",
                      "MinimumUnitsForOffer": 26,
                      "MinimumUnitsForGift": 99,
                      "GiftProductId": "string",
                      "Price": 38,
                      "DiscountRate": 99,
                      "ApplyDiscount": false,
                      "Timestamp": "2021-02-25T14:44:51.500Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.500Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductPriceOffers({Id})": {
      "get": {
        "tags": [
          "ProductPriceOffers"
        ],
        "summary": "Returns a product price offer",
        "operationId": "GET_ProductPriceOffers_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductPriceOffer id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductPriceOffer id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceOffer"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPriceOffers/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "ProductId": "string",
                  "StartDate": "2021-02-25T14:44:51.506Z",
                  "EndDate": "2021-02-25T14:44:51.506Z",
                  "MinimumUnitsForOffer": 19,
                  "MinimumUnitsForGift": 93,
                  "GiftProductId": "string",
                  "Price": 56,
                  "DiscountRate": 66,
                  "ApplyDiscount": false,
                  "Timestamp": "2021-02-25T14:44:51.506Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.506Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceOffer"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPriceOffers/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "ProductId": "string",
                  "StartDate": "2021-02-25T14:44:51.506Z",
                  "EndDate": "2021-02-25T14:44:51.506Z",
                  "MinimumUnitsForOffer": 19,
                  "MinimumUnitsForGift": 93,
                  "GiftProductId": "string",
                  "Price": 56,
                  "DiscountRate": 66,
                  "ApplyDiscount": false,
                  "Timestamp": "2021-02-25T14:44:51.506Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.506Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductPriceRates": {
      "get": {
        "tags": [
          "ProductPriceRates"
        ],
        "summary": "Returns all product price rates",
        "operationId": "QUERY_ProductPriceRates_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductPriceRate"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPriceRates",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Source": "string",
                      "RateId": "string",
                      "ProductId": "string",
                      "ProductRateName": "string",
                      "Active": true,
                      "CustomerId": "string",
                      "ProductFamilyId": "string",
                      "ProductSubfamilyId": "string",
                      "ProductPackId": "string",
                      "CurrencyId": "string",
                      "StartDate": "2021-02-25T14:44:51.530Z",
                      "EndDate": "2021-02-25T14:44:51.530Z",
                      "Timestamp": "2021-02-25T14:44:51.530Z",
                      "PricePolicy": "Percentage",
                      "PriceConditions": [
                        {
                          "Id": "string",
                          "UpToUnits": 38,
                          "FromSizeId": "string",
                          "ToSizeId": "string",
                          "ColourId": "string",
                          "Price": 38,
                          "DiscountRate": 38,
                          "Discount2Rate": 38,
                          "Discount3Rate": 38,
                          "Timestamp": "2021-02-25T14:44:51.530Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.530Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductPriceRate"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPriceRates",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Source": "string",
                      "RateId": "string",
                      "ProductId": "string",
                      "ProductRateName": "string",
                      "Active": true,
                      "CustomerId": "string",
                      "ProductFamilyId": "string",
                      "ProductSubfamilyId": "string",
                      "ProductPackId": "string",
                      "CurrencyId": "string",
                      "StartDate": "2021-02-25T14:44:51.530Z",
                      "EndDate": "2021-02-25T14:44:51.530Z",
                      "Timestamp": "2021-02-25T14:44:51.530Z",
                      "PricePolicy": "Percentage",
                      "PriceConditions": [
                        {
                          "Id": "string",
                          "UpToUnits": 38,
                          "FromSizeId": "string",
                          "ToSizeId": "string",
                          "ColourId": "string",
                          "Price": 38,
                          "DiscountRate": 38,
                          "Discount2Rate": 38,
                          "Discount3Rate": 38,
                          "Timestamp": "2021-02-25T14:44:51.530Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.530Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductPriceRates({Id})": {
      "get": {
        "tags": [
          "ProductPriceRates"
        ],
        "summary": "Returns a product pirice rate",
        "operationId": "GET_ProductPriceRates_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductPriceRate id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductPriceRate id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceRate"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPriceRates/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Source": "string",
                  "RateId": "string",
                  "ProductId": "string",
                  "ProductRateName": "string",
                  "Active": true,
                  "CustomerId": "string",
                  "ProductFamilyId": "string",
                  "ProductSubfamilyId": "string",
                  "ProductPackId": "string",
                  "CurrencyId": "string",
                  "StartDate": "2021-02-25T14:44:51.535Z",
                  "EndDate": "2021-02-25T14:44:51.535Z",
                  "Timestamp": "2021-02-25T14:44:51.535Z",
                  "PricePolicy": "Percentage",
                  "PriceConditions": [
                    {
                      "Id": "string",
                      "UpToUnits": 24,
                      "FromSizeId": "string",
                      "ToSizeId": "string",
                      "ColourId": "string",
                      "Price": 24,
                      "DiscountRate": 24,
                      "Discount2Rate": 24,
                      "Discount3Rate": 24,
                      "Timestamp": "2021-02-25T14:44:51.535Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.535Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPriceRate"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductPriceRates/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Source": "string",
                  "RateId": "string",
                  "ProductId": "string",
                  "ProductRateName": "string",
                  "Active": true,
                  "CustomerId": "string",
                  "ProductFamilyId": "string",
                  "ProductSubfamilyId": "string",
                  "ProductPackId": "string",
                  "CurrencyId": "string",
                  "StartDate": "2021-02-25T14:44:51.535Z",
                  "EndDate": "2021-02-25T14:44:51.535Z",
                  "Timestamp": "2021-02-25T14:44:51.535Z",
                  "PricePolicy": "Percentage",
                  "PriceConditions": [
                    {
                      "Id": "string",
                      "UpToUnits": 24,
                      "FromSizeId": "string",
                      "ToSizeId": "string",
                      "ColourId": "string",
                      "Price": 24,
                      "DiscountRate": 24,
                      "Discount2Rate": 24,
                      "Discount3Rate": 24,
                      "Timestamp": "2021-02-25T14:44:51.535Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.535Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Products": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Creates a product",
        "operationId": "POST_Products_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Product resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Description": "string",
                "Active": false,
                "Barcode": "string",
                "VATTaxRateId": "string",
                "SalesPriceIncludingTaxes": true,
                "CostPrice": 22,
                "SalesPrice": 55,
                "DiscountRate": 50,
                "Discount2Rate": 27,
                "Discount3Rate": 0,
                "CurrencyId": "string",
                "FamilyId": "string",
                "SubfamilyId": "string",
                "Brand": "string",
                "SeasonId": "string",
                "BasicMeasureUnitId": "string",
                "AlternativeMeasureUnitId": "string",
                "PurchasesMeasureUnitId": "string",
                "SalesMeasureUnitId": "string",
                "Notes": "string",
                "IsInternetPublishable": true,
                "IsKit": true,
                "UseSizes": true,
                "SizeGroupId": "string",
                "UseColours": true,
                "UseSerialNumbers": true,
                "UseConsignment": true,
                "Timestamp": "2021-02-25T14:44:51.561Z",
                "Type": "NonMaterial",
                "ProductMeasureUnits": [
                  {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 49,
                    "Timestamp": "2021-02-25T14:44:51.561Z"
                  }
                ],
                "Colours": [
                  {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": "string",
                    "Name": "string",
                    "Timestamp": "2021-02-25T14:44:51.561Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.561Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Description": "string",
                "Active": false,
                "Barcode": "string",
                "VATTaxRateId": "string",
                "SalesPriceIncludingTaxes": true,
                "CostPrice": 22,
                "SalesPrice": 55,
                "DiscountRate": 50,
                "Discount2Rate": 27,
                "Discount3Rate": 0,
                "CurrencyId": "string",
                "FamilyId": "string",
                "SubfamilyId": "string",
                "Brand": "string",
                "SeasonId": "string",
                "BasicMeasureUnitId": "string",
                "AlternativeMeasureUnitId": "string",
                "PurchasesMeasureUnitId": "string",
                "SalesMeasureUnitId": "string",
                "Notes": "string",
                "IsInternetPublishable": true,
                "IsKit": true,
                "UseSizes": true,
                "SizeGroupId": "string",
                "UseColours": true,
                "UseSerialNumbers": true,
                "UseConsignment": true,
                "Timestamp": "2021-02-25T14:44:51.561Z",
                "Type": "NonMaterial",
                "ProductMeasureUnits": [
                  {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 49,
                    "Timestamp": "2021-02-25T14:44:51.561Z"
                  }
                ],
                "Colours": [
                  {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": "string",
                    "Name": "string",
                    "Timestamp": "2021-02-25T14:44:51.561Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.561Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Products/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Description": "string",
                  "Active": false,
                  "Barcode": "string",
                  "VATTaxRateId": "string",
                  "SalesPriceIncludingTaxes": true,
                  "CostPrice": 66,
                  "SalesPrice": 39,
                  "DiscountRate": 71,
                  "Discount2Rate": 58,
                  "Discount3Rate": 13,
                  "CurrencyId": "string",
                  "FamilyId": "string",
                  "SubfamilyId": "string",
                  "Brand": "string",
                  "SeasonId": "string",
                  "BasicMeasureUnitId": "string",
                  "AlternativeMeasureUnitId": "string",
                  "PurchasesMeasureUnitId": "string",
                  "SalesMeasureUnitId": "string",
                  "Notes": "string",
                  "IsInternetPublishable": false,
                  "IsKit": true,
                  "UseSizes": true,
                  "SizeGroupId": "string",
                  "UseColours": false,
                  "UseSerialNumbers": true,
                  "UseConsignment": true,
                  "Timestamp": "2021-02-25T14:44:51.561Z",
                  "Type": "Material",
                  "ProductMeasureUnits": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "ConversionFactor": 32,
                      "Timestamp": "2021-02-25T14:44:51.561Z"
                    }
                  ],
                  "Colours": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.561Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.561Z",
                      "DataType": "Decimal"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Products/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Description": "string",
                  "Active": false,
                  "Barcode": "string",
                  "VATTaxRateId": "string",
                  "SalesPriceIncludingTaxes": true,
                  "CostPrice": 66,
                  "SalesPrice": 39,
                  "DiscountRate": 71,
                  "Discount2Rate": 58,
                  "Discount3Rate": 13,
                  "CurrencyId": "string",
                  "FamilyId": "string",
                  "SubfamilyId": "string",
                  "Brand": "string",
                  "SeasonId": "string",
                  "BasicMeasureUnitId": "string",
                  "AlternativeMeasureUnitId": "string",
                  "PurchasesMeasureUnitId": "string",
                  "SalesMeasureUnitId": "string",
                  "Notes": "string",
                  "IsInternetPublishable": false,
                  "IsKit": true,
                  "UseSizes": true,
                  "SizeGroupId": "string",
                  "UseColours": false,
                  "UseSerialNumbers": true,
                  "UseConsignment": true,
                  "Timestamp": "2021-02-25T14:44:51.561Z",
                  "Type": "Material",
                  "ProductMeasureUnits": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "ConversionFactor": 32,
                      "Timestamp": "2021-02-25T14:44:51.561Z"
                    }
                  ],
                  "Colours": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.561Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.561Z",
                      "DataType": "Decimal"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Returns all products",
        "operationId": "QUERY_Products_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Products",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Description": "string",
                      "Active": false,
                      "Barcode": "string",
                      "VATTaxRateId": "string",
                      "SalesPriceIncludingTaxes": true,
                      "CostPrice": 46,
                      "SalesPrice": 97,
                      "DiscountRate": 69,
                      "Discount2Rate": 58,
                      "Discount3Rate": 77,
                      "CurrencyId": "string",
                      "FamilyId": "string",
                      "SubfamilyId": "string",
                      "Brand": "string",
                      "SeasonId": "string",
                      "BasicMeasureUnitId": "string",
                      "AlternativeMeasureUnitId": "string",
                      "PurchasesMeasureUnitId": "string",
                      "SalesMeasureUnitId": "string",
                      "Notes": "string",
                      "IsInternetPublishable": false,
                      "IsKit": false,
                      "UseSizes": false,
                      "SizeGroupId": "string",
                      "UseColours": true,
                      "UseSerialNumbers": false,
                      "UseConsignment": true,
                      "Timestamp": "2021-02-25T14:44:51.567Z",
                      "Type": "Material",
                      "ProductMeasureUnits": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "ConversionFactor": 49,
                          "Timestamp": "2021-02-25T14:44:51.567Z"
                        }
                      ],
                      "Colours": [
                        {
                          "Id": "string",
                          "CompanyId": "string",
                          "Code": "string",
                          "Name": "string",
                          "Timestamp": "2021-02-25T14:44:51.567Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.567Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Products",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Description": "string",
                      "Active": false,
                      "Barcode": "string",
                      "VATTaxRateId": "string",
                      "SalesPriceIncludingTaxes": true,
                      "CostPrice": 46,
                      "SalesPrice": 97,
                      "DiscountRate": 69,
                      "Discount2Rate": 58,
                      "Discount3Rate": 77,
                      "CurrencyId": "string",
                      "FamilyId": "string",
                      "SubfamilyId": "string",
                      "Brand": "string",
                      "SeasonId": "string",
                      "BasicMeasureUnitId": "string",
                      "AlternativeMeasureUnitId": "string",
                      "PurchasesMeasureUnitId": "string",
                      "SalesMeasureUnitId": "string",
                      "Notes": "string",
                      "IsInternetPublishable": false,
                      "IsKit": false,
                      "UseSizes": false,
                      "SizeGroupId": "string",
                      "UseColours": true,
                      "UseSerialNumbers": false,
                      "UseConsignment": true,
                      "Timestamp": "2021-02-25T14:44:51.567Z",
                      "Type": "Material",
                      "ProductMeasureUnits": [
                        {
                          "Id": "string",
                          "Name": "string",
                          "ConversionFactor": 49,
                          "Timestamp": "2021-02-25T14:44:51.567Z"
                        }
                      ],
                      "Colours": [
                        {
                          "Id": "string",
                          "CompanyId": "string",
                          "Code": "string",
                          "Name": "string",
                          "Timestamp": "2021-02-25T14:44:51.567Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.567Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Products({Id})": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Returns a product",
        "operationId": "GET_Products_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Product id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Products/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Description": "string",
                  "Active": false,
                  "Barcode": "string",
                  "VATTaxRateId": "string",
                  "SalesPriceIncludingTaxes": true,
                  "CostPrice": 66,
                  "SalesPrice": 39,
                  "DiscountRate": 71,
                  "Discount2Rate": 58,
                  "Discount3Rate": 13,
                  "CurrencyId": "string",
                  "FamilyId": "string",
                  "SubfamilyId": "string",
                  "Brand": "string",
                  "SeasonId": "string",
                  "BasicMeasureUnitId": "string",
                  "AlternativeMeasureUnitId": "string",
                  "PurchasesMeasureUnitId": "string",
                  "SalesMeasureUnitId": "string",
                  "Notes": "string",
                  "IsInternetPublishable": false,
                  "IsKit": true,
                  "UseSizes": true,
                  "SizeGroupId": "string",
                  "UseColours": false,
                  "UseSerialNumbers": true,
                  "UseConsignment": true,
                  "Timestamp": "2021-02-25T14:44:51.573Z",
                  "Type": "Material",
                  "ProductMeasureUnits": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "ConversionFactor": 32,
                      "Timestamp": "2021-02-25T14:44:51.573Z"
                    }
                  ],
                  "Colours": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.573Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.573Z",
                      "DataType": "Decimal"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Products/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Description": "string",
                  "Active": false,
                  "Barcode": "string",
                  "VATTaxRateId": "string",
                  "SalesPriceIncludingTaxes": true,
                  "CostPrice": 66,
                  "SalesPrice": 39,
                  "DiscountRate": 71,
                  "Discount2Rate": 58,
                  "Discount3Rate": 13,
                  "CurrencyId": "string",
                  "FamilyId": "string",
                  "SubfamilyId": "string",
                  "Brand": "string",
                  "SeasonId": "string",
                  "BasicMeasureUnitId": "string",
                  "AlternativeMeasureUnitId": "string",
                  "PurchasesMeasureUnitId": "string",
                  "SalesMeasureUnitId": "string",
                  "Notes": "string",
                  "IsInternetPublishable": false,
                  "IsKit": true,
                  "UseSizes": true,
                  "SizeGroupId": "string",
                  "UseColours": false,
                  "UseSerialNumbers": true,
                  "UseConsignment": true,
                  "Timestamp": "2021-02-25T14:44:51.573Z",
                  "Type": "Material",
                  "ProductMeasureUnits": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "ConversionFactor": 32,
                      "Timestamp": "2021-02-25T14:44:51.573Z"
                    }
                  ],
                  "Colours": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.573Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.573Z",
                      "DataType": "Decimal"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Updates a product",
        "operationId": "PUT_Products_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Product id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Product resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Description": "string",
                "Active": false,
                "Barcode": "string",
                "VATTaxRateId": "string",
                "SalesPriceIncludingTaxes": true,
                "CostPrice": 22,
                "SalesPrice": 55,
                "DiscountRate": 50,
                "Discount2Rate": 27,
                "Discount3Rate": 0,
                "CurrencyId": "string",
                "FamilyId": "string",
                "SubfamilyId": "string",
                "Brand": "string",
                "SeasonId": "string",
                "BasicMeasureUnitId": "string",
                "AlternativeMeasureUnitId": "string",
                "PurchasesMeasureUnitId": "string",
                "SalesMeasureUnitId": "string",
                "Notes": "string",
                "IsInternetPublishable": true,
                "IsKit": true,
                "UseSizes": true,
                "SizeGroupId": "string",
                "UseColours": true,
                "UseSerialNumbers": true,
                "UseConsignment": true,
                "Timestamp": "2021-02-25T14:44:51.578Z",
                "Type": "NonMaterial",
                "ProductMeasureUnits": [
                  {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 49,
                    "Timestamp": "2021-02-25T14:44:51.578Z"
                  }
                ],
                "Colours": [
                  {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": "string",
                    "Name": "string",
                    "Timestamp": "2021-02-25T14:44:51.578Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.578Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Description": "string",
                "Active": false,
                "Barcode": "string",
                "VATTaxRateId": "string",
                "SalesPriceIncludingTaxes": true,
                "CostPrice": 22,
                "SalesPrice": 55,
                "DiscountRate": 50,
                "Discount2Rate": 27,
                "Discount3Rate": 0,
                "CurrencyId": "string",
                "FamilyId": "string",
                "SubfamilyId": "string",
                "Brand": "string",
                "SeasonId": "string",
                "BasicMeasureUnitId": "string",
                "AlternativeMeasureUnitId": "string",
                "PurchasesMeasureUnitId": "string",
                "SalesMeasureUnitId": "string",
                "Notes": "string",
                "IsInternetPublishable": true,
                "IsKit": true,
                "UseSizes": true,
                "SizeGroupId": "string",
                "UseColours": true,
                "UseSerialNumbers": true,
                "UseConsignment": true,
                "Timestamp": "2021-02-25T14:44:51.578Z",
                "Type": "NonMaterial",
                "ProductMeasureUnits": [
                  {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 49,
                    "Timestamp": "2021-02-25T14:44:51.578Z"
                  }
                ],
                "Colours": [
                  {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": "string",
                    "Name": "string",
                    "Timestamp": "2021-02-25T14:44:51.578Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.578Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Products/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Description": "string",
                  "Active": false,
                  "Barcode": "string",
                  "VATTaxRateId": "string",
                  "SalesPriceIncludingTaxes": true,
                  "CostPrice": 66,
                  "SalesPrice": 39,
                  "DiscountRate": 71,
                  "Discount2Rate": 58,
                  "Discount3Rate": 13,
                  "CurrencyId": "string",
                  "FamilyId": "string",
                  "SubfamilyId": "string",
                  "Brand": "string",
                  "SeasonId": "string",
                  "BasicMeasureUnitId": "string",
                  "AlternativeMeasureUnitId": "string",
                  "PurchasesMeasureUnitId": "string",
                  "SalesMeasureUnitId": "string",
                  "Notes": "string",
                  "IsInternetPublishable": false,
                  "IsKit": true,
                  "UseSizes": true,
                  "SizeGroupId": "string",
                  "UseColours": false,
                  "UseSerialNumbers": true,
                  "UseConsignment": true,
                  "Timestamp": "2021-02-25T14:44:51.578Z",
                  "Type": "Material",
                  "ProductMeasureUnits": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "ConversionFactor": 32,
                      "Timestamp": "2021-02-25T14:44:51.578Z"
                    }
                  ],
                  "Colours": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.578Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.578Z",
                      "DataType": "Decimal"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Products/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Description": "string",
                  "Active": false,
                  "Barcode": "string",
                  "VATTaxRateId": "string",
                  "SalesPriceIncludingTaxes": true,
                  "CostPrice": 66,
                  "SalesPrice": 39,
                  "DiscountRate": 71,
                  "Discount2Rate": 58,
                  "Discount3Rate": 13,
                  "CurrencyId": "string",
                  "FamilyId": "string",
                  "SubfamilyId": "string",
                  "Brand": "string",
                  "SeasonId": "string",
                  "BasicMeasureUnitId": "string",
                  "AlternativeMeasureUnitId": "string",
                  "PurchasesMeasureUnitId": "string",
                  "SalesMeasureUnitId": "string",
                  "Notes": "string",
                  "IsInternetPublishable": false,
                  "IsKit": true,
                  "UseSizes": true,
                  "SizeGroupId": "string",
                  "UseColours": false,
                  "UseSerialNumbers": true,
                  "UseConsignment": true,
                  "Timestamp": "2021-02-25T14:44:51.578Z",
                  "Type": "Material",
                  "ProductMeasureUnits": [
                    {
                      "Id": "string",
                      "Name": "string",
                      "ConversionFactor": 32,
                      "Timestamp": "2021-02-25T14:44:51.578Z"
                    }
                  ],
                  "Colours": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.578Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.578Z",
                      "DataType": "Decimal"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Deletes a product",
        "operationId": "DELETE_Products_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Product id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Products({Id})/GetPrice": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Get a product price applying all the parameters specified",
        "operationId": "GetPrice_Entity_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Product id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ODataActionParameters resource",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": false
                },
                "description": "ODataActionParameters resource",
                "nullable": true
              },
              "example": {
                "CompanyId": "string",
                "CustomerId": "string",
                "TargetDate": "string",
                "Units": 98,
                "RateId": "string",
                "Param": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": false
                },
                "description": "ODataActionParameters resource",
                "nullable": true
              },
              "example": {
                "CompanyId": "string",
                "CustomerId": "string",
                "TargetDate": "string",
                "Units": 98,
                "RateId": "string",
                "Param": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "Discount": 28,
                  "Discount2": 88,
                  "Discount3": 43,
                  "Price": 98
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "Discount": 28,
                  "Discount2": 88,
                  "Discount3": 43,
                  "Price": 98
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductSeasons": {
      "post": {
        "tags": [
          "ProductSeasons"
        ],
        "summary": "Creates a product season",
        "operationId": "POST_ProductSeasons_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ProductSeason resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSeason"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Description": "string",
                "StartDay": 0,
                "StartMonth": 0,
                "EndDay": 0,
                "EndMonth": 0,
                "Timestamp": "2021-02-25T14:44:51.598Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.598Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSeason"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Description": "string",
                "StartDay": 0,
                "StartMonth": 0,
                "EndDay": 0,
                "EndMonth": 0,
                "Timestamp": "2021-02-25T14:44:51.598Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.598Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSeasons/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Description": "string",
                  "StartDay": 0,
                  "StartMonth": 0,
                  "EndDay": 0,
                  "EndMonth": 0,
                  "Timestamp": "2021-02-25T14:44:51.598Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.598Z",
                      "DataType": "Integer"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSeasons/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Description": "string",
                  "StartDay": 0,
                  "StartMonth": 0,
                  "EndDay": 0,
                  "EndMonth": 0,
                  "Timestamp": "2021-02-25T14:44:51.598Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.598Z",
                      "DataType": "Integer"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductSeasons"
        ],
        "summary": "Returns all product seasons",
        "operationId": "QUERY_ProductSeasons_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSeason"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSeasons",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Description": "string",
                      "StartDay": 0,
                      "StartMonth": 0,
                      "EndDay": 0,
                      "EndMonth": 0,
                      "Timestamp": "2021-02-25T14:44:51.604Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.604Z",
                          "DataType": "Undefined"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSeason"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSeasons",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Description": "string",
                      "StartDay": 0,
                      "StartMonth": 0,
                      "EndDay": 0,
                      "EndMonth": 0,
                      "Timestamp": "2021-02-25T14:44:51.604Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.604Z",
                          "DataType": "Undefined"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductSeasons({Id})": {
      "get": {
        "tags": [
          "ProductSeasons"
        ],
        "summary": "Returns a product season",
        "operationId": "GET_ProductSeasons_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductSeason id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductSeason id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSeason"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSeasons/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Description": "string",
                  "StartDay": 0,
                  "StartMonth": 0,
                  "EndDay": 0,
                  "EndMonth": 0,
                  "Timestamp": "2021-02-25T14:44:51.611Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.611Z",
                      "DataType": "Integer"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSeason"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSeasons/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Description": "string",
                  "StartDay": 0,
                  "StartMonth": 0,
                  "EndDay": 0,
                  "EndMonth": 0,
                  "Timestamp": "2021-02-25T14:44:51.611Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.611Z",
                      "DataType": "Integer"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductSeasons"
        ],
        "summary": "Updates a product season",
        "operationId": "PUT_ProductSeasons_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductSeason id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductSeason id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ProductSeason resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSeason"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Description": "string",
                "StartDay": 0,
                "StartMonth": 0,
                "EndDay": 0,
                "EndMonth": 0,
                "Timestamp": "2021-02-25T14:44:51.615Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.615Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSeason"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Description": "string",
                "StartDay": 0,
                "StartMonth": 0,
                "EndDay": 0,
                "EndMonth": 0,
                "Timestamp": "2021-02-25T14:44:51.615Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.615Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSeasons/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Description": "string",
                  "StartDay": 0,
                  "StartMonth": 0,
                  "EndDay": 0,
                  "EndMonth": 0,
                  "Timestamp": "2021-02-25T14:44:51.615Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.615Z",
                      "DataType": "Integer"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSeasons/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Description": "string",
                  "StartDay": 0,
                  "StartMonth": 0,
                  "EndDay": 0,
                  "EndMonth": 0,
                  "Timestamp": "2021-02-25T14:44:51.615Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.615Z",
                      "DataType": "Integer"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductSeasons"
        ],
        "summary": "Deletes a product season",
        "operationId": "DELETE_ProductSeasons_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductSeason id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductSeason id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductSizeGroups": {
      "post": {
        "tags": [
          "ProductSizeGroups"
        ],
        "summary": "Creates a product size group",
        "operationId": "POST_ProductSizeGroups_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ProductSizeGroup resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSizeGroup"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "Description": "string",
                "Timestamp": "2021-02-25T14:44:51.630Z",
                "Sizes": [
                  {
                    "Id": "string",
                    "Position": 0,
                    "Code": "string",
                    "Description": "string",
                    "Timestamp": "2021-02-25T14:44:51.630Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.630Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSizeGroup"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "Description": "string",
                "Timestamp": "2021-02-25T14:44:51.630Z",
                "Sizes": [
                  {
                    "Id": "string",
                    "Position": 0,
                    "Code": "string",
                    "Description": "string",
                    "Timestamp": "2021-02-25T14:44:51.630Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.630Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSizeGroups/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Description": "string",
                  "Timestamp": "2021-02-25T14:44:51.630Z",
                  "Sizes": [
                    {
                      "Id": "string",
                      "Position": 0,
                      "Code": "string",
                      "Description": "string",
                      "Timestamp": "2021-02-25T14:44:51.630Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.630Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSizeGroups/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Description": "string",
                  "Timestamp": "2021-02-25T14:44:51.630Z",
                  "Sizes": [
                    {
                      "Id": "string",
                      "Position": 0,
                      "Code": "string",
                      "Description": "string",
                      "Timestamp": "2021-02-25T14:44:51.630Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.630Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductSizeGroups"
        ],
        "summary": "Returns all product size groups",
        "operationId": "QUERY_ProductSizeGroups_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSizeGroup"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSizeGroups",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": 0,
                      "Description": "string",
                      "Timestamp": "2021-02-25T14:44:51.636Z",
                      "Sizes": [
                        {
                          "Id": "string",
                          "Position": 0,
                          "Code": "string",
                          "Description": "string",
                          "Timestamp": "2021-02-25T14:44:51.636Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.636Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSizeGroup"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSizeGroups",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": 0,
                      "Description": "string",
                      "Timestamp": "2021-02-25T14:44:51.636Z",
                      "Sizes": [
                        {
                          "Id": "string",
                          "Position": 0,
                          "Code": "string",
                          "Description": "string",
                          "Timestamp": "2021-02-25T14:44:51.636Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.636Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductSizeGroups({Id})": {
      "get": {
        "tags": [
          "ProductSizeGroups"
        ],
        "summary": "Returns a product size group",
        "operationId": "GET_ProductSizeGroups_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductSizeGroup id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductSizeGroup id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSizeGroup"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSizeGroups/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Description": "string",
                  "Timestamp": "2021-02-25T14:44:51.642Z",
                  "Sizes": [
                    {
                      "Id": "string",
                      "Position": 0,
                      "Code": "string",
                      "Description": "string",
                      "Timestamp": "2021-02-25T14:44:51.642Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.642Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSizeGroup"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSizeGroups/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Description": "string",
                  "Timestamp": "2021-02-25T14:44:51.642Z",
                  "Sizes": [
                    {
                      "Id": "string",
                      "Position": 0,
                      "Code": "string",
                      "Description": "string",
                      "Timestamp": "2021-02-25T14:44:51.642Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.642Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductSizeGroups"
        ],
        "summary": "Updates a product size group",
        "operationId": "PUT_ProductSizeGroups_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductSizeGroup id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductSizeGroup id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ProductSizeGroup resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSizeGroup"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "Description": "string",
                "Timestamp": "2021-02-25T14:44:51.646Z",
                "Sizes": [
                  {
                    "Id": "string",
                    "Position": 0,
                    "Code": "string",
                    "Description": "string",
                    "Timestamp": "2021-02-25T14:44:51.646Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.646Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSizeGroup"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "Description": "string",
                "Timestamp": "2021-02-25T14:44:51.646Z",
                "Sizes": [
                  {
                    "Id": "string",
                    "Position": 0,
                    "Code": "string",
                    "Description": "string",
                    "Timestamp": "2021-02-25T14:44:51.646Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.646Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSizeGroups/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Description": "string",
                  "Timestamp": "2021-02-25T14:44:51.646Z",
                  "Sizes": [
                    {
                      "Id": "string",
                      "Position": 0,
                      "Code": "string",
                      "Description": "string",
                      "Timestamp": "2021-02-25T14:44:51.646Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.646Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductSizeGroups/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Description": "string",
                  "Timestamp": "2021-02-25T14:44:51.646Z",
                  "Sizes": [
                    {
                      "Id": "string",
                      "Position": 0,
                      "Code": "string",
                      "Description": "string",
                      "Timestamp": "2021-02-25T14:44:51.646Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.646Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductSizeGroups"
        ],
        "summary": "Deletes a product size group",
        "operationId": "DELETE_ProductSizeGroups_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductSizeGroup id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductSizeGroup id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductStock": {
      "get": {
        "tags": [
          "ProductStock"
        ],
        "summary": "Returns all product stock entries",
        "operationId": "QUERY_ProductStock_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductStock"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductStock",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "StoreId": "string",
                      "ProductId": "string",
                      "Quantity": 42,
                      "QuantityPendingToBeReceived": 26,
                      "QuantityPendingToBeServed": 99,
                      "QuantityReserved": 63,
                      "QuantityPendingToBeProduced": 38,
                      "QuantityReservedOrders": 99,
                      "QuantityVirtual": 2,
                      "QuantityAvailable": 40,
                      "CostPriceAverage": 89,
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "ExpirationDate": "2021-02-25T14:44:51.675Z",
                      "Timestamp": "2021-02-25T14:44:51.675Z",
                      "ProductSerialNumbers": [
                        {
                          "Id": "string",
                          "CompanyId": "string",
                          "Code": "string",
                          "Date": "2021-02-25T14:44:51.675Z",
                          "ProductId": "string",
                          "ProductSizeId": "string",
                          "ColourId": "string",
                          "Consignment": "string",
                          "StoreId": "string",
                          "Number": "string",
                          "Timestamp": "2021-02-25T14:44:51.675Z"
                        }
                      ],
                      "MeasureUnit": {
                        "Id": "string",
                        "Name": "string",
                        "ConversionFactor": 39,
                        "Timestamp": "2021-02-25T14:44:51.675Z"
                      },
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.675Z",
                          "DataType": "Date"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductStock"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductStock",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "StoreId": "string",
                      "ProductId": "string",
                      "Quantity": 42,
                      "QuantityPendingToBeReceived": 26,
                      "QuantityPendingToBeServed": 99,
                      "QuantityReserved": 63,
                      "QuantityPendingToBeProduced": 38,
                      "QuantityReservedOrders": 99,
                      "QuantityVirtual": 2,
                      "QuantityAvailable": 40,
                      "CostPriceAverage": 89,
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "ExpirationDate": "2021-02-25T14:44:51.675Z",
                      "Timestamp": "2021-02-25T14:44:51.675Z",
                      "ProductSerialNumbers": [
                        {
                          "Id": "string",
                          "CompanyId": "string",
                          "Code": "string",
                          "Date": "2021-02-25T14:44:51.675Z",
                          "ProductId": "string",
                          "ProductSizeId": "string",
                          "ColourId": "string",
                          "Consignment": "string",
                          "StoreId": "string",
                          "Number": "string",
                          "Timestamp": "2021-02-25T14:44:51.675Z"
                        }
                      ],
                      "MeasureUnit": {
                        "Id": "string",
                        "Name": "string",
                        "ConversionFactor": 39,
                        "Timestamp": "2021-02-25T14:44:51.675Z"
                      },
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.675Z",
                          "DataType": "Date"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ProductStock({Id})": {
      "get": {
        "tags": [
          "ProductStock"
        ],
        "summary": "Returns a product stock entry",
        "operationId": "GET_ProductStock_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ProductStock id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ProductStock id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStock"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductStock/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "StoreId": "string",
                  "ProductId": "string",
                  "Quantity": 20,
                  "QuantityPendingToBeReceived": 19,
                  "QuantityPendingToBeServed": 93,
                  "QuantityReserved": 5,
                  "QuantityPendingToBeProduced": 56,
                  "QuantityReservedOrders": 66,
                  "QuantityVirtual": 39,
                  "QuantityAvailable": 71,
                  "CostPriceAverage": 58,
                  "ProductSizeId": "string",
                  "ColourId": "string",
                  "Consignment": "string",
                  "ExpirationDate": "2021-02-25T14:44:51.679Z",
                  "Timestamp": "2021-02-25T14:44:51.679Z",
                  "ProductSerialNumbers": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Date": "2021-02-25T14:44:51.679Z",
                      "ProductId": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "StoreId": "string",
                      "Number": "string",
                      "Timestamp": "2021-02-25T14:44:51.679Z"
                    }
                  ],
                  "MeasureUnit": {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 19,
                    "Timestamp": "2021-02-25T14:44:51.679Z"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.679Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStock"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#ProductStock/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "StoreId": "string",
                  "ProductId": "string",
                  "Quantity": 20,
                  "QuantityPendingToBeReceived": 19,
                  "QuantityPendingToBeServed": 93,
                  "QuantityReserved": 5,
                  "QuantityPendingToBeProduced": 56,
                  "QuantityReservedOrders": 66,
                  "QuantityVirtual": 39,
                  "QuantityAvailable": 71,
                  "CostPriceAverage": 58,
                  "ProductSizeId": "string",
                  "ColourId": "string",
                  "Consignment": "string",
                  "ExpirationDate": "2021-02-25T14:44:51.679Z",
                  "Timestamp": "2021-02-25T14:44:51.679Z",
                  "ProductSerialNumbers": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Date": "2021-02-25T14:44:51.679Z",
                      "ProductId": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "StoreId": "string",
                      "Number": "string",
                      "Timestamp": "2021-02-25T14:44:51.679Z"
                    }
                  ],
                  "MeasureUnit": {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 19,
                    "Timestamp": "2021-02-25T14:44:51.679Z"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.679Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Rates": {
      "get": {
        "tags": [
          "Rates"
        ],
        "summary": "Returns all Rates",
        "operationId": "QUERY_Rates_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rate"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Rates",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": 0,
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.691Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.691Z",
                          "DataType": "Date"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rate"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Rates",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": 0,
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.691Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.691Z",
                          "DataType": "Date"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Rates({Id})": {
      "get": {
        "tags": [
          "Rates"
        ],
        "summary": "Returns a Rate",
        "operationId": "GET_Rates_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Rate id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Rate id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rate"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Rates/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.697Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.697Z",
                      "DataType": "Date"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rate"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Rates/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.697Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.697Z",
                      "DataType": "Date"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Regions": {
      "get": {
        "tags": [
          "Regions"
        ],
        "summary": "Returns all regions",
        "operationId": "QUERY_Regions_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Regions",
                  "value": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "CountryId": "string",
                      "Timestamp": "2021-02-25T14:44:51.709Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.709Z",
                          "DataType": "String"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Regions",
                  "value": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Name": "string",
                      "CountryId": "string",
                      "Timestamp": "2021-02-25T14:44:51.709Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.709Z",
                          "DataType": "String"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Regions({Id})": {
      "get": {
        "tags": [
          "Regions"
        ],
        "summary": "Returns a region",
        "operationId": "GET_Regions_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Region id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Region id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Regions/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "CountryId": "string",
                  "Timestamp": "2021-02-25T14:44:51.713Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.713Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Regions/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "CountryId": "string",
                  "Timestamp": "2021-02-25T14:44:51.713Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.713Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Regions"
        ],
        "summary": "Updates a region",
        "operationId": "PUT_Regions_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Region id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Region id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Region resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Region"
              },
              "example": {
                "Id": "string",
                "Code": "string",
                "Name": "string",
                "CountryId": "string",
                "Timestamp": "2021-02-25T14:44:51.718Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.718Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Region"
              },
              "example": {
                "Id": "string",
                "Code": "string",
                "Name": "string",
                "CountryId": "string",
                "Timestamp": "2021-02-25T14:44:51.718Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.718Z",
                    "DataType": "Undefined"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Regions/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "CountryId": "string",
                  "Timestamp": "2021-02-25T14:44:51.718Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.718Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Regions/$entity",
                  "Id": "string",
                  "Code": "string",
                  "Name": "string",
                  "CountryId": "string",
                  "Timestamp": "2021-02-25T14:44:51.718Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.718Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Routes": {
      "post": {
        "tags": [
          "Routes"
        ],
        "summary": "Creates a route",
        "operationId": "POST_Routes_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Route resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Route"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.725Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.725Z",
                    "DataType": "String"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Route"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.725Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.725Z",
                    "DataType": "String"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Routes/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.725Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.725Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Routes/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.725Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.725Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Routes"
        ],
        "summary": "Returns all routes",
        "operationId": "QUERY_Routes_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Route"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Routes",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.731Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.731Z",
                          "DataType": "String"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Route"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Routes",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:51.731Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.731Z",
                          "DataType": "String"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Routes({Id})": {
      "get": {
        "tags": [
          "Routes"
        ],
        "summary": "Returns a route",
        "operationId": "GET_Routes_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Route id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Route id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Routes/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.736Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.736Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Routes/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.736Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.736Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Routes"
        ],
        "summary": "Updates a route",
        "operationId": "PUT_Routes_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Route id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Route id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Route resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Route"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.741Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.741Z",
                    "DataType": "String"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Route"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:51.741Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.741Z",
                    "DataType": "String"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Routes/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.741Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.741Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Routes/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:51.741Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.741Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SalesDeliveryNotes": {
      "post": {
        "tags": [
          "SalesDeliveryNotes"
        ],
        "summary": "Creates a sales delivery note",
        "operationId": "POST_SalesDeliveryNotes_Async",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "SalesDeliveryNote resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesDeliveryNote"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesDeliveryNote"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SalesDeliveryNotes"
        ],
        "summary": "Returns all sales delivery notes",
        "operationId": "QUERY_SalesDeliveryNotes_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesDeliveryNote"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesDeliveryNotes",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Serie": "string",
                      "Number": 0,
                      "Period": 0,
                      "IssueDate": "2021-02-25T14:44:51.810Z",
                      "CustomerId": "string",
                      "CustomerName": "string",
                      "CustomerCommercialName": "string",
                      "CustomerBusinessName": "string",
                      "InvoiceAddressId": "string",
                      "PaymentAddressId": "string",
                      "CurrencyId": "string",
                      "CurrencyChangeRate": 90,
                      "VATIncluded": true,
                      "SalesPersonId": "string",
                      "CommissionRate": 46,
                      "CommissionAmount": 30,
                      "DiscountRate": 24,
                      "DiscountAmount": 58,
                      "DiscountPaymentMethodRate": 99,
                      "DiscountPaymentMethodAmount": 78,
                      "DiscountRappelRate": 99,
                      "DiscountRappelAmount": 50,
                      "IncomeTaxRateId": "string",
                      "IncomeTaxRate": 5,
                      "IncomeTaxAmount": 73,
                      "ExternalSalesOrderNumber": "string",
                      "ProductPriceRateId": "string",
                      "ProductDiscountRateId": "string",
                      "TotalCharges": 21,
                      "TotalDiscount": 91,
                      "TotalNet": 57,
                      "TotalTaxes": 21,
                      "Total": 31,
                      "Notes": "string",
                      "Timestamp": "2021-02-25T14:44:51.810Z",
                      "Status": "Undefined",
                      "CustomerAddress": {
                        "Id": "string",
                        "FullAddress": "string",
                        "Street": "string",
                        "Number": "string",
                        "Letter": "string",
                        "Stair": "string",
                        "Floor": "string",
                        "Door": "string",
                        "CountryId": "string",
                        "Country": "string",
                        "RegionId": "string",
                        "Region": "string",
                        "PostalCode": "string",
                        "CityId": "string",
                        "City": "string",
                        "Email": "string",
                        "Telephone": "string",
                        "Mobile": "string",
                        "Fax": "string",
                        "AddressName": "string",
                        "AlternativeBusinessName": "string",
                        "Timestamp": "2021-02-25T14:44:51.810Z",
                        "Type": "Billing",
                        "StreetType": "Urbanization"
                      },
                      "DeliveryAddress": {
                        "Id": "string",
                        "FullAddress": "string",
                        "Street": "string",
                        "Number": "string",
                        "Letter": "string",
                        "Stair": "string",
                        "Floor": "string",
                        "Door": "string",
                        "CountryId": "string",
                        "Country": "string",
                        "RegionId": "string",
                        "Region": "string",
                        "PostalCode": "string",
                        "CityId": "string",
                        "City": "string",
                        "Email": "string",
                        "Telephone": "string",
                        "Mobile": "string",
                        "Fax": "string",
                        "AddressName": "string",
                        "AlternativeBusinessName": "string",
                        "Timestamp": "2021-02-25T14:44:51.810Z",
                        "Type": "Undefined",
                        "StreetType": "Square"
                      },
                      "TaxType": "General",
                      "PaymentMethod": {
                        "Id": "string",
                        "CompanyId": "string",
                        "Code": 0,
                        "Name": "string",
                        "Instalments": 0,
                        "FirstInstalmentDay": 0,
                        "DaysBetweenInstalments": 0,
                        "Timestamp": "2021-02-25T14:44:51.810Z"
                      },
                      "Lines": [
                        {
                          "Id": "string",
                          "SalesOrderLineId": "string",
                          "ProductId": "string",
                          "ProductPackId": "string",
                          "Position": 0,
                          "ProductDescription": "string",
                          "ProductLongDescription": "string",
                          "ProductSizeId": "string",
                          "ColourId": "string",
                          "Consignment": "string",
                          "ExpirationDate": "2021-02-25T14:44:51.810Z",
                          "StoreId": "string",
                          "SalesPersonId": "string",
                          "VATTaxRate": 35,
                          "SurchargeTaxRate": 35,
                          "Quantity": 35,
                          "QuantityMeasureUnit": 35,
                          "Price": 35,
                          "ProductDiscountRate": 35,
                          "ProductDiscount2Rate": 35,
                          "ProductDiscount3Rate": 35,
                          "ProductDiscountAmount": 35,
                          "CommissionRate": 35,
                          "CommissionAmount": 35,
                          "VATIncluded": false,
                          "TotalNet": 35,
                          "VATTaxAmount": 35,
                          "SurchargeTaxAmount": 35,
                          "Total": 35,
                          "Timestamp": "2021-02-25T14:44:51.810Z"
                        }
                      ],
                      "Taxes": [
                        {
                          "Id": "string",
                          "Base": 48,
                          "VATTaxRate": 48,
                          "VATTAxAmount": 48,
                          "SurchargeTaxRate": 48,
                          "SurchargeTaxAmount": 48,
                          "TotalTaxesAmount": 48,
                          "Timestamp": "2021-02-25T14:44:51.810Z",
                          "TransactionType": "General"
                        }
                      ],
                      "AdvancePayments": [
                        {
                          "Id": "string",
                          "Amount": 55,
                          "Date": "2021-02-25T14:44:51.810Z",
                          "Timestamp": "2021-02-25T14:44:51.810Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.810Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesDeliveryNote"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesDeliveryNotes",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Serie": "string",
                      "Number": 0,
                      "Period": 0,
                      "IssueDate": "2021-02-25T14:44:51.810Z",
                      "CustomerId": "string",
                      "CustomerName": "string",
                      "CustomerCommercialName": "string",
                      "CustomerBusinessName": "string",
                      "InvoiceAddressId": "string",
                      "PaymentAddressId": "string",
                      "CurrencyId": "string",
                      "CurrencyChangeRate": 90,
                      "VATIncluded": true,
                      "SalesPersonId": "string",
                      "CommissionRate": 46,
                      "CommissionAmount": 30,
                      "DiscountRate": 24,
                      "DiscountAmount": 58,
                      "DiscountPaymentMethodRate": 99,
                      "DiscountPaymentMethodAmount": 78,
                      "DiscountRappelRate": 99,
                      "DiscountRappelAmount": 50,
                      "IncomeTaxRateId": "string",
                      "IncomeTaxRate": 5,
                      "IncomeTaxAmount": 73,
                      "ExternalSalesOrderNumber": "string",
                      "ProductPriceRateId": "string",
                      "ProductDiscountRateId": "string",
                      "TotalCharges": 21,
                      "TotalDiscount": 91,
                      "TotalNet": 57,
                      "TotalTaxes": 21,
                      "Total": 31,
                      "Notes": "string",
                      "Timestamp": "2021-02-25T14:44:51.810Z",
                      "Status": "Undefined",
                      "CustomerAddress": {
                        "Id": "string",
                        "FullAddress": "string",
                        "Street": "string",
                        "Number": "string",
                        "Letter": "string",
                        "Stair": "string",
                        "Floor": "string",
                        "Door": "string",
                        "CountryId": "string",
                        "Country": "string",
                        "RegionId": "string",
                        "Region": "string",
                        "PostalCode": "string",
                        "CityId": "string",
                        "City": "string",
                        "Email": "string",
                        "Telephone": "string",
                        "Mobile": "string",
                        "Fax": "string",
                        "AddressName": "string",
                        "AlternativeBusinessName": "string",
                        "Timestamp": "2021-02-25T14:44:51.810Z",
                        "Type": "Billing",
                        "StreetType": "Urbanization"
                      },
                      "DeliveryAddress": {
                        "Id": "string",
                        "FullAddress": "string",
                        "Street": "string",
                        "Number": "string",
                        "Letter": "string",
                        "Stair": "string",
                        "Floor": "string",
                        "Door": "string",
                        "CountryId": "string",
                        "Country": "string",
                        "RegionId": "string",
                        "Region": "string",
                        "PostalCode": "string",
                        "CityId": "string",
                        "City": "string",
                        "Email": "string",
                        "Telephone": "string",
                        "Mobile": "string",
                        "Fax": "string",
                        "AddressName": "string",
                        "AlternativeBusinessName": "string",
                        "Timestamp": "2021-02-25T14:44:51.810Z",
                        "Type": "Undefined",
                        "StreetType": "Square"
                      },
                      "TaxType": "General",
                      "PaymentMethod": {
                        "Id": "string",
                        "CompanyId": "string",
                        "Code": 0,
                        "Name": "string",
                        "Instalments": 0,
                        "FirstInstalmentDay": 0,
                        "DaysBetweenInstalments": 0,
                        "Timestamp": "2021-02-25T14:44:51.810Z"
                      },
                      "Lines": [
                        {
                          "Id": "string",
                          "SalesOrderLineId": "string",
                          "ProductId": "string",
                          "ProductPackId": "string",
                          "Position": 0,
                          "ProductDescription": "string",
                          "ProductLongDescription": "string",
                          "ProductSizeId": "string",
                          "ColourId": "string",
                          "Consignment": "string",
                          "ExpirationDate": "2021-02-25T14:44:51.810Z",
                          "StoreId": "string",
                          "SalesPersonId": "string",
                          "VATTaxRate": 35,
                          "SurchargeTaxRate": 35,
                          "Quantity": 35,
                          "QuantityMeasureUnit": 35,
                          "Price": 35,
                          "ProductDiscountRate": 35,
                          "ProductDiscount2Rate": 35,
                          "ProductDiscount3Rate": 35,
                          "ProductDiscountAmount": 35,
                          "CommissionRate": 35,
                          "CommissionAmount": 35,
                          "VATIncluded": false,
                          "TotalNet": 35,
                          "VATTaxAmount": 35,
                          "SurchargeTaxAmount": 35,
                          "Total": 35,
                          "Timestamp": "2021-02-25T14:44:51.810Z"
                        }
                      ],
                      "Taxes": [
                        {
                          "Id": "string",
                          "Base": 48,
                          "VATTaxRate": 48,
                          "VATTAxAmount": 48,
                          "SurchargeTaxRate": 48,
                          "SurchargeTaxAmount": 48,
                          "TotalTaxesAmount": 48,
                          "Timestamp": "2021-02-25T14:44:51.810Z",
                          "TransactionType": "General"
                        }
                      ],
                      "AdvancePayments": [
                        {
                          "Id": "string",
                          "Amount": 55,
                          "Date": "2021-02-25T14:44:51.810Z",
                          "Timestamp": "2021-02-25T14:44:51.810Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.810Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SalesDeliveryNotes({Id})": {
      "get": {
        "tags": [
          "SalesDeliveryNotes"
        ],
        "summary": "Returns a sales delivery note",
        "operationId": "GET_SalesDeliveryNotes_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "SalesDeliveryNote id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SalesDeliveryNote id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesDeliveryNote"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesDeliveryNotes/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Serie": "string",
                  "Number": 0,
                  "Period": 0,
                  "IssueDate": "2021-02-25T14:44:51.815Z",
                  "CustomerId": "string",
                  "CustomerName": "string",
                  "CustomerCommercialName": "string",
                  "CustomerBusinessName": "string",
                  "InvoiceAddressId": "string",
                  "PaymentAddressId": "string",
                  "CurrencyId": "string",
                  "CurrencyChangeRate": 45,
                  "VATIncluded": true,
                  "SalesPersonId": "string",
                  "CommissionRate": 70,
                  "CommissionAmount": 16,
                  "DiscountRate": 97,
                  "DiscountAmount": 38,
                  "DiscountPaymentMethodRate": 74,
                  "DiscountPaymentMethodAmount": 25,
                  "DiscountRappelRate": 4,
                  "DiscountRappelAmount": 8,
                  "IncomeTaxRateId": "string",
                  "IncomeTaxRate": 82,
                  "IncomeTaxAmount": 33,
                  "ExternalSalesOrderNumber": "string",
                  "ProductPriceRateId": "string",
                  "ProductDiscountRateId": "string",
                  "TotalCharges": 86,
                  "TotalDiscount": 53,
                  "TotalNet": 67,
                  "TotalTaxes": 3,
                  "Total": 90,
                  "Notes": "string",
                  "Timestamp": "2021-02-25T14:44:51.815Z",
                  "Status": "Processed",
                  "CustomerAddress": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:51.815Z",
                    "Type": "Billing",
                    "StreetType": "Crossing"
                  },
                  "DeliveryAddress": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:51.815Z",
                    "Type": "Billing",
                    "StreetType": "Apartment"
                  },
                  "TaxType": "General",
                  "PaymentMethod": {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": 0,
                    "Name": "string",
                    "Instalments": 0,
                    "FirstInstalmentDay": 0,
                    "DaysBetweenInstalments": 0,
                    "Timestamp": "2021-02-25T14:44:51.815Z"
                  },
                  "Lines": [
                    {
                      "Id": "string",
                      "SalesOrderLineId": "string",
                      "ProductId": "string",
                      "ProductPackId": "string",
                      "Position": 0,
                      "ProductDescription": "string",
                      "ProductLongDescription": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "ExpirationDate": "2021-02-25T14:44:51.815Z",
                      "StoreId": "string",
                      "SalesPersonId": "string",
                      "VATTaxRate": 76,
                      "SurchargeTaxRate": 76,
                      "Quantity": 76,
                      "QuantityMeasureUnit": 76,
                      "Price": 76,
                      "ProductDiscountRate": 76,
                      "ProductDiscount2Rate": 76,
                      "ProductDiscount3Rate": 76,
                      "ProductDiscountAmount": 76,
                      "CommissionRate": 76,
                      "CommissionAmount": 76,
                      "VATIncluded": true,
                      "TotalNet": 76,
                      "VATTaxAmount": 76,
                      "SurchargeTaxAmount": 76,
                      "Total": 76,
                      "Timestamp": "2021-02-25T14:44:51.815Z"
                    }
                  ],
                  "Taxes": [
                    {
                      "Id": "string",
                      "Base": 27,
                      "VATTaxRate": 27,
                      "VATTAxAmount": 27,
                      "SurchargeTaxRate": 27,
                      "SurchargeTaxAmount": 27,
                      "TotalTaxesAmount": 27,
                      "Timestamp": "2021-02-25T14:44:51.815Z",
                      "TransactionType": "ReverseCharge"
                    }
                  ],
                  "AdvancePayments": [
                    {
                      "Id": "string",
                      "Amount": 37,
                      "Date": "2021-02-25T14:44:51.815Z",
                      "Timestamp": "2021-02-25T14:44:51.815Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.815Z",
                      "DataType": "Date"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesDeliveryNote"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesDeliveryNotes/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Serie": "string",
                  "Number": 0,
                  "Period": 0,
                  "IssueDate": "2021-02-25T14:44:51.815Z",
                  "CustomerId": "string",
                  "CustomerName": "string",
                  "CustomerCommercialName": "string",
                  "CustomerBusinessName": "string",
                  "InvoiceAddressId": "string",
                  "PaymentAddressId": "string",
                  "CurrencyId": "string",
                  "CurrencyChangeRate": 45,
                  "VATIncluded": true,
                  "SalesPersonId": "string",
                  "CommissionRate": 70,
                  "CommissionAmount": 16,
                  "DiscountRate": 97,
                  "DiscountAmount": 38,
                  "DiscountPaymentMethodRate": 74,
                  "DiscountPaymentMethodAmount": 25,
                  "DiscountRappelRate": 4,
                  "DiscountRappelAmount": 8,
                  "IncomeTaxRateId": "string",
                  "IncomeTaxRate": 82,
                  "IncomeTaxAmount": 33,
                  "ExternalSalesOrderNumber": "string",
                  "ProductPriceRateId": "string",
                  "ProductDiscountRateId": "string",
                  "TotalCharges": 86,
                  "TotalDiscount": 53,
                  "TotalNet": 67,
                  "TotalTaxes": 3,
                  "Total": 90,
                  "Notes": "string",
                  "Timestamp": "2021-02-25T14:44:51.815Z",
                  "Status": "Processed",
                  "CustomerAddress": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:51.815Z",
                    "Type": "Billing",
                    "StreetType": "Crossing"
                  },
                  "DeliveryAddress": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:51.815Z",
                    "Type": "Billing",
                    "StreetType": "Apartment"
                  },
                  "TaxType": "General",
                  "PaymentMethod": {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": 0,
                    "Name": "string",
                    "Instalments": 0,
                    "FirstInstalmentDay": 0,
                    "DaysBetweenInstalments": 0,
                    "Timestamp": "2021-02-25T14:44:51.815Z"
                  },
                  "Lines": [
                    {
                      "Id": "string",
                      "SalesOrderLineId": "string",
                      "ProductId": "string",
                      "ProductPackId": "string",
                      "Position": 0,
                      "ProductDescription": "string",
                      "ProductLongDescription": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "ExpirationDate": "2021-02-25T14:44:51.815Z",
                      "StoreId": "string",
                      "SalesPersonId": "string",
                      "VATTaxRate": 76,
                      "SurchargeTaxRate": 76,
                      "Quantity": 76,
                      "QuantityMeasureUnit": 76,
                      "Price": 76,
                      "ProductDiscountRate": 76,
                      "ProductDiscount2Rate": 76,
                      "ProductDiscount3Rate": 76,
                      "ProductDiscountAmount": 76,
                      "CommissionRate": 76,
                      "CommissionAmount": 76,
                      "VATIncluded": true,
                      "TotalNet": 76,
                      "VATTaxAmount": 76,
                      "SurchargeTaxAmount": 76,
                      "Total": 76,
                      "Timestamp": "2021-02-25T14:44:51.815Z"
                    }
                  ],
                  "Taxes": [
                    {
                      "Id": "string",
                      "Base": 27,
                      "VATTaxRate": 27,
                      "VATTAxAmount": 27,
                      "SurchargeTaxRate": 27,
                      "SurchargeTaxAmount": 27,
                      "TotalTaxesAmount": 27,
                      "Timestamp": "2021-02-25T14:44:51.815Z",
                      "TransactionType": "ReverseCharge"
                    }
                  ],
                  "AdvancePayments": [
                    {
                      "Id": "string",
                      "Amount": 37,
                      "Date": "2021-02-25T14:44:51.815Z",
                      "Timestamp": "2021-02-25T14:44:51.815Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.815Z",
                      "DataType": "Date"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SalesInvoices": {
      "post": {
        "tags": [
          "SalesInvoices"
        ],
        "summary": "Creates a sales invoice",
        "operationId": "POST_SalesInvoices_Async",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "SalesInvoice resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesInvoice"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SalesInvoices"
        ],
        "summary": "Returns all sales invoices",
        "operationId": "QUERY_SalesInvoices_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesInvoice"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesInvoices",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Serie": "string",
                      "Number": 0,
                      "Period": 0,
                      "IssueDate": "2021-02-25T14:44:51.902Z",
                      "CustomerId": "string",
                      "CustomerName": "string",
                      "CustomerCommercialName": "string",
                      "CustomerBusinessName": "string",
                      "TaxNumber": "string",
                      "HasBeenPrinted": false,
                      "HasBeenSent": true,
                      "HasBeenSigned": true,
                      "PaymentAddressId": "string",
                      "CurrencyId": "string",
                      "CurrencyChangeRate": 74,
                      "VATIncluded": false,
                      "SalesPersonId": "string",
                      "CommissionRate": 39,
                      "CommissionAmount": 86,
                      "DiscountRate": 86,
                      "DiscountAmount": 28,
                      "DiscountPaymentMethodRate": 91,
                      "DiscountPaymentMethodAmount": 62,
                      "DiscountRappelRate": 76,
                      "DiscountRappelAmount": 98,
                      "IncomeTaxRateId": "string",
                      "IncomeTaxRate": 5,
                      "IncomeTaxAmount": 51,
                      "TotalCharges": 31,
                      "TotalDiscount": 70,
                      "TotalNet": 14,
                      "TotalTaxes": 81,
                      "Total": 73,
                      "Notes": "string",
                      "Timestamp": "2021-02-25T14:44:51.902Z",
                      "TaxNumberType": "TaxID",
                      "InvoiceType": "RefundInvoice",
                      "CustomerAddress": {
                        "Id": "string",
                        "FullAddress": "string",
                        "Street": "string",
                        "Number": "string",
                        "Letter": "string",
                        "Stair": "string",
                        "Floor": "string",
                        "Door": "string",
                        "CountryId": "string",
                        "Country": "string",
                        "RegionId": "string",
                        "Region": "string",
                        "PostalCode": "string",
                        "CityId": "string",
                        "City": "string",
                        "Email": "string",
                        "Telephone": "string",
                        "Mobile": "string",
                        "Fax": "string",
                        "AddressName": "string",
                        "AlternativeBusinessName": "string",
                        "Timestamp": "2021-02-25T14:44:51.902Z",
                        "Type": "Delivery",
                        "StreetType": "Highway"
                      },
                      "TaxType": "Undefined",
                      "PaymentMethod": {
                        "Id": "string",
                        "CompanyId": "string",
                        "Code": 0,
                        "Name": "string",
                        "Instalments": 0,
                        "FirstInstalmentDay": 0,
                        "DaysBetweenInstalments": 0,
                        "Timestamp": "2021-02-25T14:44:51.902Z"
                      },
                      "Lines": [
                        {
                          "Id": "string",
                          "ProductId": "string",
                          "ProductPackId": "string",
                          "Position": 0,
                          "ProductDescription": "string",
                          "ProductLongDescription": "string",
                          "ProductSizeId": "string",
                          "ColourId": "string",
                          "Consignment": "string",
                          "ExpirationDate": "2021-02-25T14:44:51.902Z",
                          "StoreId": "string",
                          "SalesPersonId": "string",
                          "VATTaxRate": 42,
                          "SurchargeTaxRate": 42,
                          "Quantity": 42,
                          "QuantityMeasureUnit": 42,
                          "Price": 42,
                          "ProductDiscountRate": 42,
                          "ProductDiscount2Rate": 42,
                          "ProductDiscount3Rate": 42,
                          "ProductDiscountAmount": 42,
                          "CommissionRate": 42,
                          "CommissionAmount": 42,
                          "VATIncluded": false,
                          "TotalNet": 42,
                          "VATTaxAmount": 42,
                          "SurchargeTaxAmount": 42,
                          "Total": 42,
                          "Timestamp": "2021-02-25T14:44:51.902Z"
                        }
                      ],
                      "Taxes": [
                        {
                          "Id": "string",
                          "Base": 79,
                          "VATTaxRate": 79,
                          "VATTAxAmount": 79,
                          "SurchargeTaxRate": 79,
                          "SurchargeTaxAmount": 79,
                          "TotalTaxesAmount": 79,
                          "Timestamp": "2021-02-25T14:44:51.902Z",
                          "TransactionType": "General"
                        }
                      ],
                      "Receipts": [
                        {
                          "Id": "string",
                          "CompanyId": "string",
                          "SalesInvoiceId": "string",
                          "Order": 0,
                          "IssueDate": "2021-02-25T14:44:51.902Z",
                          "DueDate": "2021-02-25T14:44:51.902Z",
                          "CustomerId": "string",
                          "IBAN": "string",
                          "TotalAmount": 41,
                          "Description": "string",
                          "Timestamp": "2021-02-25T14:44:51.902Z",
                          "Status": "Pending"
                        }
                      ],
                      "CorrectiveDetails": [
                        {
                          "Id": "string",
                          "ReasonDescription": "string",
                          "CorrectionMethodDescription": "string",
                          "Timestamp": "2021-02-25T14:44:51.902Z",
                          "ReasonCode": "Code5",
                          "CorrectionMethod": "Undefined"
                        }
                      ],
                      "FiscalDetails": [
                        {
                          "Id": "string",
                          "FullAddress": "string",
                          "Street": "string",
                          "Number": "string",
                          "Letter": "string",
                          "Stair": "string",
                          "Floor": "string",
                          "Door": "string",
                          "CountryId": "string",
                          "RegionId": "string",
                          "PostalCode": "string",
                          "CityId": "string",
                          "Email": "string",
                          "Telephone": "string",
                          "Mobile": "string",
                          "Fax": "string",
                          "CustomerLegalRepresentativeName": "string",
                          "CustomerLegalRepresentativeTaxNumber": "string",
                          "Timestamp": "2021-02-25T14:44:51.902Z",
                          "StreetType": "Round"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.902Z",
                          "DataType": "Date"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesInvoice"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesInvoices",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Serie": "string",
                      "Number": 0,
                      "Period": 0,
                      "IssueDate": "2021-02-25T14:44:51.902Z",
                      "CustomerId": "string",
                      "CustomerName": "string",
                      "CustomerCommercialName": "string",
                      "CustomerBusinessName": "string",
                      "TaxNumber": "string",
                      "HasBeenPrinted": false,
                      "HasBeenSent": true,
                      "HasBeenSigned": true,
                      "PaymentAddressId": "string",
                      "CurrencyId": "string",
                      "CurrencyChangeRate": 74,
                      "VATIncluded": false,
                      "SalesPersonId": "string",
                      "CommissionRate": 39,
                      "CommissionAmount": 86,
                      "DiscountRate": 86,
                      "DiscountAmount": 28,
                      "DiscountPaymentMethodRate": 91,
                      "DiscountPaymentMethodAmount": 62,
                      "DiscountRappelRate": 76,
                      "DiscountRappelAmount": 98,
                      "IncomeTaxRateId": "string",
                      "IncomeTaxRate": 5,
                      "IncomeTaxAmount": 51,
                      "TotalCharges": 31,
                      "TotalDiscount": 70,
                      "TotalNet": 14,
                      "TotalTaxes": 81,
                      "Total": 73,
                      "Notes": "string",
                      "Timestamp": "2021-02-25T14:44:51.902Z",
                      "TaxNumberType": "TaxID",
                      "InvoiceType": "RefundInvoice",
                      "CustomerAddress": {
                        "Id": "string",
                        "FullAddress": "string",
                        "Street": "string",
                        "Number": "string",
                        "Letter": "string",
                        "Stair": "string",
                        "Floor": "string",
                        "Door": "string",
                        "CountryId": "string",
                        "Country": "string",
                        "RegionId": "string",
                        "Region": "string",
                        "PostalCode": "string",
                        "CityId": "string",
                        "City": "string",
                        "Email": "string",
                        "Telephone": "string",
                        "Mobile": "string",
                        "Fax": "string",
                        "AddressName": "string",
                        "AlternativeBusinessName": "string",
                        "Timestamp": "2021-02-25T14:44:51.902Z",
                        "Type": "Delivery",
                        "StreetType": "Highway"
                      },
                      "TaxType": "Undefined",
                      "PaymentMethod": {
                        "Id": "string",
                        "CompanyId": "string",
                        "Code": 0,
                        "Name": "string",
                        "Instalments": 0,
                        "FirstInstalmentDay": 0,
                        "DaysBetweenInstalments": 0,
                        "Timestamp": "2021-02-25T14:44:51.902Z"
                      },
                      "Lines": [
                        {
                          "Id": "string",
                          "ProductId": "string",
                          "ProductPackId": "string",
                          "Position": 0,
                          "ProductDescription": "string",
                          "ProductLongDescription": "string",
                          "ProductSizeId": "string",
                          "ColourId": "string",
                          "Consignment": "string",
                          "ExpirationDate": "2021-02-25T14:44:51.902Z",
                          "StoreId": "string",
                          "SalesPersonId": "string",
                          "VATTaxRate": 42,
                          "SurchargeTaxRate": 42,
                          "Quantity": 42,
                          "QuantityMeasureUnit": 42,
                          "Price": 42,
                          "ProductDiscountRate": 42,
                          "ProductDiscount2Rate": 42,
                          "ProductDiscount3Rate": 42,
                          "ProductDiscountAmount": 42,
                          "CommissionRate": 42,
                          "CommissionAmount": 42,
                          "VATIncluded": false,
                          "TotalNet": 42,
                          "VATTaxAmount": 42,
                          "SurchargeTaxAmount": 42,
                          "Total": 42,
                          "Timestamp": "2021-02-25T14:44:51.902Z"
                        }
                      ],
                      "Taxes": [
                        {
                          "Id": "string",
                          "Base": 79,
                          "VATTaxRate": 79,
                          "VATTAxAmount": 79,
                          "SurchargeTaxRate": 79,
                          "SurchargeTaxAmount": 79,
                          "TotalTaxesAmount": 79,
                          "Timestamp": "2021-02-25T14:44:51.902Z",
                          "TransactionType": "General"
                        }
                      ],
                      "Receipts": [
                        {
                          "Id": "string",
                          "CompanyId": "string",
                          "SalesInvoiceId": "string",
                          "Order": 0,
                          "IssueDate": "2021-02-25T14:44:51.902Z",
                          "DueDate": "2021-02-25T14:44:51.902Z",
                          "CustomerId": "string",
                          "IBAN": "string",
                          "TotalAmount": 41,
                          "Description": "string",
                          "Timestamp": "2021-02-25T14:44:51.902Z",
                          "Status": "Pending"
                        }
                      ],
                      "CorrectiveDetails": [
                        {
                          "Id": "string",
                          "ReasonDescription": "string",
                          "CorrectionMethodDescription": "string",
                          "Timestamp": "2021-02-25T14:44:51.902Z",
                          "ReasonCode": "Code5",
                          "CorrectionMethod": "Undefined"
                        }
                      ],
                      "FiscalDetails": [
                        {
                          "Id": "string",
                          "FullAddress": "string",
                          "Street": "string",
                          "Number": "string",
                          "Letter": "string",
                          "Stair": "string",
                          "Floor": "string",
                          "Door": "string",
                          "CountryId": "string",
                          "RegionId": "string",
                          "PostalCode": "string",
                          "CityId": "string",
                          "Email": "string",
                          "Telephone": "string",
                          "Mobile": "string",
                          "Fax": "string",
                          "CustomerLegalRepresentativeName": "string",
                          "CustomerLegalRepresentativeTaxNumber": "string",
                          "Timestamp": "2021-02-25T14:44:51.902Z",
                          "StreetType": "Round"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.902Z",
                          "DataType": "Date"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SalesInvoices({Id})": {
      "get": {
        "tags": [
          "SalesInvoices"
        ],
        "summary": "Returns a sales invoice",
        "operationId": "GET_SalesInvoices_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "SalesInvoice id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SalesInvoice id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesInvoices/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Serie": "string",
                  "Number": 0,
                  "Period": 0,
                  "IssueDate": "2021-02-25T14:44:51.910Z",
                  "CustomerId": "string",
                  "CustomerName": "string",
                  "CustomerCommercialName": "string",
                  "CustomerBusinessName": "string",
                  "TaxNumber": "string",
                  "HasBeenPrinted": false,
                  "HasBeenSent": true,
                  "HasBeenSigned": false,
                  "PaymentAddressId": "string",
                  "CurrencyId": "string",
                  "CurrencyChangeRate": 70,
                  "VATIncluded": false,
                  "SalesPersonId": "string",
                  "CommissionRate": 38,
                  "CommissionAmount": 74,
                  "DiscountRate": 25,
                  "DiscountAmount": 4,
                  "DiscountPaymentMethodRate": 8,
                  "DiscountPaymentMethodAmount": 58,
                  "DiscountRappelRate": 82,
                  "DiscountRappelAmount": 33,
                  "IncomeTaxRateId": "string",
                  "IncomeTaxRate": 49,
                  "IncomeTaxAmount": 54,
                  "TotalCharges": 86,
                  "TotalDiscount": 53,
                  "TotalNet": 67,
                  "TotalTaxes": 3,
                  "Total": 90,
                  "Notes": "string",
                  "Timestamp": "2021-02-25T14:44:51.910Z",
                  "TaxNumberType": "ResidenceCertificate",
                  "InvoiceType": "SimplifiedInvoice",
                  "CustomerAddress": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:51.910Z",
                    "Type": "Commercial",
                    "StreetType": "Square"
                  },
                  "TaxType": "ImportExport",
                  "PaymentMethod": {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": 0,
                    "Name": "string",
                    "Instalments": 0,
                    "FirstInstalmentDay": 0,
                    "DaysBetweenInstalments": 0,
                    "Timestamp": "2021-02-25T14:44:51.910Z"
                  },
                  "Lines": [
                    {
                      "Id": "string",
                      "ProductId": "string",
                      "ProductPackId": "string",
                      "Position": 0,
                      "ProductDescription": "string",
                      "ProductLongDescription": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "ExpirationDate": "2021-02-25T14:44:51.910Z",
                      "StoreId": "string",
                      "SalesPersonId": "string",
                      "VATTaxRate": 93,
                      "SurchargeTaxRate": 93,
                      "Quantity": 93,
                      "QuantityMeasureUnit": 93,
                      "Price": 93,
                      "ProductDiscountRate": 93,
                      "ProductDiscount2Rate": 93,
                      "ProductDiscount3Rate": 93,
                      "ProductDiscountAmount": 93,
                      "CommissionRate": 93,
                      "CommissionAmount": 93,
                      "VATIncluded": true,
                      "TotalNet": 93,
                      "VATTaxAmount": 93,
                      "SurchargeTaxAmount": 93,
                      "Total": 93,
                      "Timestamp": "2021-02-25T14:44:51.910Z"
                    }
                  ],
                  "Taxes": [
                    {
                      "Id": "string",
                      "Base": 76,
                      "VATTaxRate": 76,
                      "VATTAxAmount": 76,
                      "SurchargeTaxRate": 76,
                      "SurchargeTaxAmount": 76,
                      "TotalTaxesAmount": 76,
                      "Timestamp": "2021-02-25T14:44:51.910Z",
                      "TransactionType": "General"
                    }
                  ],
                  "Receipts": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "SalesInvoiceId": "string",
                      "Order": 0,
                      "IssueDate": "2021-02-25T14:44:51.910Z",
                      "DueDate": "2021-02-25T14:44:51.910Z",
                      "CustomerId": "string",
                      "IBAN": "string",
                      "TotalAmount": 81,
                      "Description": "string",
                      "Timestamp": "2021-02-25T14:44:51.910Z",
                      "Status": "Pending"
                    }
                  ],
                  "CorrectiveDetails": [
                    {
                      "Id": "string",
                      "ReasonDescription": "string",
                      "CorrectionMethodDescription": "string",
                      "Timestamp": "2021-02-25T14:44:51.910Z",
                      "ReasonCode": "Code83",
                      "CorrectionMethod": "Method3"
                    }
                  ],
                  "FiscalDetails": [
                    {
                      "Id": "string",
                      "FullAddress": "string",
                      "Street": "string",
                      "Number": "string",
                      "Letter": "string",
                      "Stair": "string",
                      "Floor": "string",
                      "Door": "string",
                      "CountryId": "string",
                      "RegionId": "string",
                      "PostalCode": "string",
                      "CityId": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "CustomerLegalRepresentativeName": "string",
                      "CustomerLegalRepresentativeTaxNumber": "string",
                      "Timestamp": "2021-02-25T14:44:51.910Z",
                      "StreetType": "Village"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.910Z",
                      "DataType": "Integer"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesInvoices/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Serie": "string",
                  "Number": 0,
                  "Period": 0,
                  "IssueDate": "2021-02-25T14:44:51.910Z",
                  "CustomerId": "string",
                  "CustomerName": "string",
                  "CustomerCommercialName": "string",
                  "CustomerBusinessName": "string",
                  "TaxNumber": "string",
                  "HasBeenPrinted": false,
                  "HasBeenSent": true,
                  "HasBeenSigned": false,
                  "PaymentAddressId": "string",
                  "CurrencyId": "string",
                  "CurrencyChangeRate": 70,
                  "VATIncluded": false,
                  "SalesPersonId": "string",
                  "CommissionRate": 38,
                  "CommissionAmount": 74,
                  "DiscountRate": 25,
                  "DiscountAmount": 4,
                  "DiscountPaymentMethodRate": 8,
                  "DiscountPaymentMethodAmount": 58,
                  "DiscountRappelRate": 82,
                  "DiscountRappelAmount": 33,
                  "IncomeTaxRateId": "string",
                  "IncomeTaxRate": 49,
                  "IncomeTaxAmount": 54,
                  "TotalCharges": 86,
                  "TotalDiscount": 53,
                  "TotalNet": 67,
                  "TotalTaxes": 3,
                  "Total": 90,
                  "Notes": "string",
                  "Timestamp": "2021-02-25T14:44:51.910Z",
                  "TaxNumberType": "ResidenceCertificate",
                  "InvoiceType": "SimplifiedInvoice",
                  "CustomerAddress": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:51.910Z",
                    "Type": "Commercial",
                    "StreetType": "Square"
                  },
                  "TaxType": "ImportExport",
                  "PaymentMethod": {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": 0,
                    "Name": "string",
                    "Instalments": 0,
                    "FirstInstalmentDay": 0,
                    "DaysBetweenInstalments": 0,
                    "Timestamp": "2021-02-25T14:44:51.910Z"
                  },
                  "Lines": [
                    {
                      "Id": "string",
                      "ProductId": "string",
                      "ProductPackId": "string",
                      "Position": 0,
                      "ProductDescription": "string",
                      "ProductLongDescription": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "ExpirationDate": "2021-02-25T14:44:51.910Z",
                      "StoreId": "string",
                      "SalesPersonId": "string",
                      "VATTaxRate": 93,
                      "SurchargeTaxRate": 93,
                      "Quantity": 93,
                      "QuantityMeasureUnit": 93,
                      "Price": 93,
                      "ProductDiscountRate": 93,
                      "ProductDiscount2Rate": 93,
                      "ProductDiscount3Rate": 93,
                      "ProductDiscountAmount": 93,
                      "CommissionRate": 93,
                      "CommissionAmount": 93,
                      "VATIncluded": true,
                      "TotalNet": 93,
                      "VATTaxAmount": 93,
                      "SurchargeTaxAmount": 93,
                      "Total": 93,
                      "Timestamp": "2021-02-25T14:44:51.910Z"
                    }
                  ],
                  "Taxes": [
                    {
                      "Id": "string",
                      "Base": 76,
                      "VATTaxRate": 76,
                      "VATTAxAmount": 76,
                      "SurchargeTaxRate": 76,
                      "SurchargeTaxAmount": 76,
                      "TotalTaxesAmount": 76,
                      "Timestamp": "2021-02-25T14:44:51.910Z",
                      "TransactionType": "General"
                    }
                  ],
                  "Receipts": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "SalesInvoiceId": "string",
                      "Order": 0,
                      "IssueDate": "2021-02-25T14:44:51.910Z",
                      "DueDate": "2021-02-25T14:44:51.910Z",
                      "CustomerId": "string",
                      "IBAN": "string",
                      "TotalAmount": 81,
                      "Description": "string",
                      "Timestamp": "2021-02-25T14:44:51.910Z",
                      "Status": "Pending"
                    }
                  ],
                  "CorrectiveDetails": [
                    {
                      "Id": "string",
                      "ReasonDescription": "string",
                      "CorrectionMethodDescription": "string",
                      "Timestamp": "2021-02-25T14:44:51.910Z",
                      "ReasonCode": "Code83",
                      "CorrectionMethod": "Method3"
                    }
                  ],
                  "FiscalDetails": [
                    {
                      "Id": "string",
                      "FullAddress": "string",
                      "Street": "string",
                      "Number": "string",
                      "Letter": "string",
                      "Stair": "string",
                      "Floor": "string",
                      "Door": "string",
                      "CountryId": "string",
                      "RegionId": "string",
                      "PostalCode": "string",
                      "CityId": "string",
                      "Email": "string",
                      "Telephone": "string",
                      "Mobile": "string",
                      "Fax": "string",
                      "CustomerLegalRepresentativeName": "string",
                      "CustomerLegalRepresentativeTaxNumber": "string",
                      "Timestamp": "2021-02-25T14:44:51.910Z",
                      "StreetType": "Village"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.910Z",
                      "DataType": "Integer"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SalesOrders": {
      "post": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "Creates a sales order",
        "operationId": "POST_SalesOrders_Async",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "SalesOrder resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesOrder"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "Returns all sales orders",
        "operationId": "QUERY_SalesOrders_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrder"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesOrders",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Serie": "string",
                      "Number": 0,
                      "Period": 0,
                      "IssueDate": "2021-02-25T14:44:51.965Z",
                      "CustomerId": "string",
                      "CustomerName": "string",
                      "CustomerBusinessName": "string",
                      "CustomerCommercialName": "string",
                      "DeliveryDate": "2021-02-25T14:44:51.965Z",
                      "DeliveryAddressId": "string",
                      "InvoiceAddressId": "string",
                      "PaymentAddressId": "string",
                      "CurrencyId": "string",
                      "CurrencyChangeRate": 86,
                      "VATIncluded": true,
                      "SalesPersonId": "string",
                      "CommissionRate": 81,
                      "CommissionAmount": 39,
                      "DiscountRate": 86,
                      "DiscountAmount": 86,
                      "DiscountPaymentMethodRate": 28,
                      "DiscountPaymentMethodAmount": 91,
                      "DiscountRappelRate": 62,
                      "DiscountRappelAmount": 76,
                      "IncomeTaxRateId": "string",
                      "IncomeTaxRate": 63,
                      "IncomeTaxAmount": 5,
                      "ExternalSalesOrderNumber": "string",
                      "ProductPriceRateId": "string",
                      "ProductDiscountRateId": "string",
                      "TotalDiscount": 14,
                      "TotalNet": 81,
                      "TotalTaxes": 73,
                      "Total": 71,
                      "Notes": "string",
                      "Timestamp": "2021-02-25T14:44:51.965Z",
                      "Status": "Processed",
                      "CustomerAddress": {
                        "Id": "string",
                        "FullAddress": "string",
                        "Street": "string",
                        "Number": "string",
                        "Letter": "string",
                        "Stair": "string",
                        "Floor": "string",
                        "Door": "string",
                        "CountryId": "string",
                        "Country": "string",
                        "RegionId": "string",
                        "Region": "string",
                        "PostalCode": "string",
                        "CityId": "string",
                        "City": "string",
                        "Email": "string",
                        "Telephone": "string",
                        "Mobile": "string",
                        "Fax": "string",
                        "AddressName": "string",
                        "AlternativeBusinessName": "string",
                        "Timestamp": "2021-02-25T14:44:51.965Z",
                        "Type": "Delivery",
                        "StreetType": "Hill"
                      },
                      "TaxType": "EuropeanUnion",
                      "PaymentMethod": {
                        "Id": "string",
                        "CompanyId": "string",
                        "Code": 0,
                        "Name": "string",
                        "Instalments": 0,
                        "FirstInstalmentDay": 0,
                        "DaysBetweenInstalments": 0,
                        "Timestamp": "2021-02-25T14:44:51.965Z"
                      },
                      "Lines": [
                        {
                          "Id": "string",
                          "ProductId": "string",
                          "ProductPackId": "string",
                          "Position": 0,
                          "ProductDescription": "string",
                          "ProductLongDescription": "string",
                          "ProductSizeId": "string",
                          "ColourId": "string",
                          "Consignment": "string",
                          "ExpirationDate": "2021-02-25T14:44:51.965Z",
                          "StoreId": "string",
                          "SalesPersonId": "string",
                          "VATTaxRate": 77,
                          "SurchargeTaxRate": 77,
                          "Quantity": 77,
                          "QuantityMeasureUnit": 77,
                          "Price": 77,
                          "ProductDiscountRate": 77,
                          "ProductDiscount2Rate": 77,
                          "ProductDiscount3Rate": 77,
                          "ProductDiscountAmount": 77,
                          "CommissionRate": 77,
                          "CommissionAmount": 77,
                          "VATIncluded": true,
                          "TotalNet": 77,
                          "VATTaxAmount": 77,
                          "SurchargeTaxAmount": 77,
                          "Total": 77,
                          "Timestamp": "2021-02-25T14:44:51.965Z"
                        }
                      ],
                      "Taxes": [
                        {
                          "Id": "string",
                          "Base": 42,
                          "VATTaxRate": 42,
                          "VATTAxAmount": 42,
                          "SurchargeTaxRate": 42,
                          "SurchargeTaxAmount": 42,
                          "TotalTaxesAmount": 42,
                          "Timestamp": "2021-02-25T14:44:51.965Z",
                          "TransactionType": "Export"
                        }
                      ],
                      "AdvancePayments": [
                        {
                          "Id": "string",
                          "Amount": 36,
                          "Date": "2021-02-25T14:44:51.965Z",
                          "Timestamp": "2021-02-25T14:44:51.965Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.965Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrder"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesOrders",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Serie": "string",
                      "Number": 0,
                      "Period": 0,
                      "IssueDate": "2021-02-25T14:44:51.965Z",
                      "CustomerId": "string",
                      "CustomerName": "string",
                      "CustomerBusinessName": "string",
                      "CustomerCommercialName": "string",
                      "DeliveryDate": "2021-02-25T14:44:51.965Z",
                      "DeliveryAddressId": "string",
                      "InvoiceAddressId": "string",
                      "PaymentAddressId": "string",
                      "CurrencyId": "string",
                      "CurrencyChangeRate": 86,
                      "VATIncluded": true,
                      "SalesPersonId": "string",
                      "CommissionRate": 81,
                      "CommissionAmount": 39,
                      "DiscountRate": 86,
                      "DiscountAmount": 86,
                      "DiscountPaymentMethodRate": 28,
                      "DiscountPaymentMethodAmount": 91,
                      "DiscountRappelRate": 62,
                      "DiscountRappelAmount": 76,
                      "IncomeTaxRateId": "string",
                      "IncomeTaxRate": 63,
                      "IncomeTaxAmount": 5,
                      "ExternalSalesOrderNumber": "string",
                      "ProductPriceRateId": "string",
                      "ProductDiscountRateId": "string",
                      "TotalDiscount": 14,
                      "TotalNet": 81,
                      "TotalTaxes": 73,
                      "Total": 71,
                      "Notes": "string",
                      "Timestamp": "2021-02-25T14:44:51.965Z",
                      "Status": "Processed",
                      "CustomerAddress": {
                        "Id": "string",
                        "FullAddress": "string",
                        "Street": "string",
                        "Number": "string",
                        "Letter": "string",
                        "Stair": "string",
                        "Floor": "string",
                        "Door": "string",
                        "CountryId": "string",
                        "Country": "string",
                        "RegionId": "string",
                        "Region": "string",
                        "PostalCode": "string",
                        "CityId": "string",
                        "City": "string",
                        "Email": "string",
                        "Telephone": "string",
                        "Mobile": "string",
                        "Fax": "string",
                        "AddressName": "string",
                        "AlternativeBusinessName": "string",
                        "Timestamp": "2021-02-25T14:44:51.965Z",
                        "Type": "Delivery",
                        "StreetType": "Hill"
                      },
                      "TaxType": "EuropeanUnion",
                      "PaymentMethod": {
                        "Id": "string",
                        "CompanyId": "string",
                        "Code": 0,
                        "Name": "string",
                        "Instalments": 0,
                        "FirstInstalmentDay": 0,
                        "DaysBetweenInstalments": 0,
                        "Timestamp": "2021-02-25T14:44:51.965Z"
                      },
                      "Lines": [
                        {
                          "Id": "string",
                          "ProductId": "string",
                          "ProductPackId": "string",
                          "Position": 0,
                          "ProductDescription": "string",
                          "ProductLongDescription": "string",
                          "ProductSizeId": "string",
                          "ColourId": "string",
                          "Consignment": "string",
                          "ExpirationDate": "2021-02-25T14:44:51.965Z",
                          "StoreId": "string",
                          "SalesPersonId": "string",
                          "VATTaxRate": 77,
                          "SurchargeTaxRate": 77,
                          "Quantity": 77,
                          "QuantityMeasureUnit": 77,
                          "Price": 77,
                          "ProductDiscountRate": 77,
                          "ProductDiscount2Rate": 77,
                          "ProductDiscount3Rate": 77,
                          "ProductDiscountAmount": 77,
                          "CommissionRate": 77,
                          "CommissionAmount": 77,
                          "VATIncluded": true,
                          "TotalNet": 77,
                          "VATTaxAmount": 77,
                          "SurchargeTaxAmount": 77,
                          "Total": 77,
                          "Timestamp": "2021-02-25T14:44:51.965Z"
                        }
                      ],
                      "Taxes": [
                        {
                          "Id": "string",
                          "Base": 42,
                          "VATTaxRate": 42,
                          "VATTAxAmount": 42,
                          "SurchargeTaxRate": 42,
                          "SurchargeTaxAmount": 42,
                          "TotalTaxesAmount": 42,
                          "Timestamp": "2021-02-25T14:44:51.965Z",
                          "TransactionType": "Export"
                        }
                      ],
                      "AdvancePayments": [
                        {
                          "Id": "string",
                          "Amount": 36,
                          "Date": "2021-02-25T14:44:51.965Z",
                          "Timestamp": "2021-02-25T14:44:51.965Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.965Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SalesOrders({Id})": {
      "get": {
        "tags": [
          "SalesOrders"
        ],
        "summary": "Returns a sales order",
        "operationId": "GET_SalesOrders_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "SalesOrder id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SalesOrder id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesOrders/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Serie": "string",
                  "Number": 0,
                  "Period": 0,
                  "IssueDate": "2021-02-25T14:44:51.970Z",
                  "CustomerId": "string",
                  "CustomerName": "string",
                  "CustomerBusinessName": "string",
                  "CustomerCommercialName": "string",
                  "DeliveryDate": "2021-02-25T14:44:51.970Z",
                  "DeliveryAddressId": "string",
                  "InvoiceAddressId": "string",
                  "PaymentAddressId": "string",
                  "CurrencyId": "string",
                  "CurrencyChangeRate": 50,
                  "VATIncluded": true,
                  "SalesPersonId": "string",
                  "CommissionRate": 97,
                  "CommissionAmount": 38,
                  "DiscountRate": 74,
                  "DiscountAmount": 25,
                  "DiscountPaymentMethodRate": 4,
                  "DiscountPaymentMethodAmount": 8,
                  "DiscountRappelRate": 58,
                  "DiscountRappelAmount": 82,
                  "IncomeTaxRateId": "string",
                  "IncomeTaxRate": 43,
                  "IncomeTaxAmount": 49,
                  "ExternalSalesOrderNumber": "string",
                  "ProductPriceRateId": "string",
                  "ProductDiscountRateId": "string",
                  "TotalDiscount": 67,
                  "TotalNet": 3,
                  "TotalTaxes": 90,
                  "Total": 37,
                  "Notes": "string",
                  "Timestamp": "2021-02-25T14:44:51.970Z",
                  "Status": "Undefined",
                  "CustomerAddress": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:51.970Z",
                    "Type": "Billing",
                    "StreetType": "CityBlock"
                  },
                  "TaxType": "Undefined",
                  "PaymentMethod": {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": 0,
                    "Name": "string",
                    "Instalments": 0,
                    "FirstInstalmentDay": 0,
                    "DaysBetweenInstalments": 0,
                    "Timestamp": "2021-02-25T14:44:51.970Z"
                  },
                  "Lines": [
                    {
                      "Id": "string",
                      "ProductId": "string",
                      "ProductPackId": "string",
                      "Position": 0,
                      "ProductDescription": "string",
                      "ProductLongDescription": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "ExpirationDate": "2021-02-25T14:44:51.970Z",
                      "StoreId": "string",
                      "SalesPersonId": "string",
                      "VATTaxRate": 23,
                      "SurchargeTaxRate": 23,
                      "Quantity": 23,
                      "QuantityMeasureUnit": 23,
                      "Price": 23,
                      "ProductDiscountRate": 23,
                      "ProductDiscount2Rate": 23,
                      "ProductDiscount3Rate": 23,
                      "ProductDiscountAmount": 23,
                      "CommissionRate": 23,
                      "CommissionAmount": 23,
                      "VATIncluded": false,
                      "TotalNet": 23,
                      "VATTaxAmount": 23,
                      "SurchargeTaxAmount": 23,
                      "Total": 23,
                      "Timestamp": "2021-02-25T14:44:51.970Z"
                    }
                  ],
                  "Taxes": [
                    {
                      "Id": "string",
                      "Base": 93,
                      "VATTaxRate": 93,
                      "VATTAxAmount": 93,
                      "SurchargeTaxRate": 93,
                      "SurchargeTaxAmount": 93,
                      "TotalTaxesAmount": 93,
                      "Timestamp": "2021-02-25T14:44:51.970Z",
                      "TransactionType": "Export"
                    }
                  ],
                  "AdvancePayments": [
                    {
                      "Id": "string",
                      "Amount": 27,
                      "Date": "2021-02-25T14:44:51.970Z",
                      "Timestamp": "2021-02-25T14:44:51.970Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.970Z",
                      "DataType": "Integer"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesOrders/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Serie": "string",
                  "Number": 0,
                  "Period": 0,
                  "IssueDate": "2021-02-25T14:44:51.970Z",
                  "CustomerId": "string",
                  "CustomerName": "string",
                  "CustomerBusinessName": "string",
                  "CustomerCommercialName": "string",
                  "DeliveryDate": "2021-02-25T14:44:51.970Z",
                  "DeliveryAddressId": "string",
                  "InvoiceAddressId": "string",
                  "PaymentAddressId": "string",
                  "CurrencyId": "string",
                  "CurrencyChangeRate": 50,
                  "VATIncluded": true,
                  "SalesPersonId": "string",
                  "CommissionRate": 97,
                  "CommissionAmount": 38,
                  "DiscountRate": 74,
                  "DiscountAmount": 25,
                  "DiscountPaymentMethodRate": 4,
                  "DiscountPaymentMethodAmount": 8,
                  "DiscountRappelRate": 58,
                  "DiscountRappelAmount": 82,
                  "IncomeTaxRateId": "string",
                  "IncomeTaxRate": 43,
                  "IncomeTaxAmount": 49,
                  "ExternalSalesOrderNumber": "string",
                  "ProductPriceRateId": "string",
                  "ProductDiscountRateId": "string",
                  "TotalDiscount": 67,
                  "TotalNet": 3,
                  "TotalTaxes": 90,
                  "Total": 37,
                  "Notes": "string",
                  "Timestamp": "2021-02-25T14:44:51.970Z",
                  "Status": "Undefined",
                  "CustomerAddress": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:51.970Z",
                    "Type": "Billing",
                    "StreetType": "CityBlock"
                  },
                  "TaxType": "Undefined",
                  "PaymentMethod": {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": 0,
                    "Name": "string",
                    "Instalments": 0,
                    "FirstInstalmentDay": 0,
                    "DaysBetweenInstalments": 0,
                    "Timestamp": "2021-02-25T14:44:51.970Z"
                  },
                  "Lines": [
                    {
                      "Id": "string",
                      "ProductId": "string",
                      "ProductPackId": "string",
                      "Position": 0,
                      "ProductDescription": "string",
                      "ProductLongDescription": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "ExpirationDate": "2021-02-25T14:44:51.970Z",
                      "StoreId": "string",
                      "SalesPersonId": "string",
                      "VATTaxRate": 23,
                      "SurchargeTaxRate": 23,
                      "Quantity": 23,
                      "QuantityMeasureUnit": 23,
                      "Price": 23,
                      "ProductDiscountRate": 23,
                      "ProductDiscount2Rate": 23,
                      "ProductDiscount3Rate": 23,
                      "ProductDiscountAmount": 23,
                      "CommissionRate": 23,
                      "CommissionAmount": 23,
                      "VATIncluded": false,
                      "TotalNet": 23,
                      "VATTaxAmount": 23,
                      "SurchargeTaxAmount": 23,
                      "Total": 23,
                      "Timestamp": "2021-02-25T14:44:51.970Z"
                    }
                  ],
                  "Taxes": [
                    {
                      "Id": "string",
                      "Base": 93,
                      "VATTaxRate": 93,
                      "VATTAxAmount": 93,
                      "SurchargeTaxRate": 93,
                      "SurchargeTaxAmount": 93,
                      "TotalTaxesAmount": 93,
                      "Timestamp": "2021-02-25T14:44:51.970Z",
                      "TransactionType": "Export"
                    }
                  ],
                  "AdvancePayments": [
                    {
                      "Id": "string",
                      "Amount": 27,
                      "Date": "2021-02-25T14:44:51.970Z",
                      "Timestamp": "2021-02-25T14:44:51.970Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.970Z",
                      "DataType": "Integer"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SalesPayments": {
      "post": {
        "tags": [
          "SalesPayments"
        ],
        "summary": "Creates a sales payment",
        "operationId": "POST_SalesPayments_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "SalesPayment resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesPayment"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "ReceiptId": "string",
                "IssueDate": "2021-02-25T14:44:51.980Z",
                "TotalAmount": 43,
                "Timestamp": "2021-02-25T14:44:51.980Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.980Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesPayment"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "ReceiptId": "string",
                "IssueDate": "2021-02-25T14:44:51.980Z",
                "TotalAmount": 43,
                "Timestamp": "2021-02-25T14:44:51.980Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:51.980Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesPayments/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "ReceiptId": "string",
                  "IssueDate": "2021-02-25T14:44:51.981Z",
                  "TotalAmount": 42,
                  "Timestamp": "2021-02-25T14:44:51.981Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.981Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesPayments/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "ReceiptId": "string",
                  "IssueDate": "2021-02-25T14:44:51.981Z",
                  "TotalAmount": 42,
                  "Timestamp": "2021-02-25T14:44:51.981Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.981Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SalesPayments"
        ],
        "summary": "Returns all sales payments",
        "operationId": "QUERY_SalesPayments_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPayment"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesPayments",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "ReceiptId": "string",
                      "IssueDate": "2021-02-25T14:44:51.986Z",
                      "TotalAmount": 64,
                      "Timestamp": "2021-02-25T14:44:51.986Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.986Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPayment"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesPayments",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "ReceiptId": "string",
                      "IssueDate": "2021-02-25T14:44:51.986Z",
                      "TotalAmount": 64,
                      "Timestamp": "2021-02-25T14:44:51.986Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:51.986Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SalesPayments({Id})": {
      "get": {
        "tags": [
          "SalesPayments"
        ],
        "summary": "Returns a sales payment",
        "operationId": "GET_SalesPayments_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "SalesPayment id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SalesPayment id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPayment"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesPayments/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "ReceiptId": "string",
                  "IssueDate": "2021-02-25T14:44:51.992Z",
                  "TotalAmount": 42,
                  "Timestamp": "2021-02-25T14:44:51.992Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.992Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPayment"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesPayments/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "ReceiptId": "string",
                  "IssueDate": "2021-02-25T14:44:51.992Z",
                  "TotalAmount": 42,
                  "Timestamp": "2021-02-25T14:44:51.992Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:51.992Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SalesPersons": {
      "post": {
        "tags": [
          "SalesPersons"
        ],
        "summary": "Creates a sales person",
        "operationId": "POST_SalesPersons_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "SalesPerson resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesPerson"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Active": true,
                "Name": "string",
                "CommissionRate": 9,
                "TaxNumber": "string",
                "Timestamp": "2021-02-25T14:44:52.001Z",
                "TaxNumberType": "TaxID",
                "Address": {
                  "Id": "string",
                  "FullAddress": "string",
                  "Street": "string",
                  "Number": "string",
                  "Letter": "string",
                  "Stair": "string",
                  "Floor": "string",
                  "Door": "string",
                  "CountryId": "string",
                  "Country": "string",
                  "RegionId": "string",
                  "Region": "string",
                  "PostalCode": "string",
                  "CityId": "string",
                  "City": "string",
                  "Email": "string",
                  "Telephone": "string",
                  "Mobile": "string",
                  "Fax": "string",
                  "AddressName": "string",
                  "AlternativeBusinessName": "string",
                  "Timestamp": "2021-02-25T14:44:52.001Z",
                  "Type": "Delivery",
                  "StreetType": "Street"
                },
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:52.001Z",
                    "DataType": "Date"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesPerson"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Active": true,
                "Name": "string",
                "CommissionRate": 9,
                "TaxNumber": "string",
                "Timestamp": "2021-02-25T14:44:52.001Z",
                "TaxNumberType": "TaxID",
                "Address": {
                  "Id": "string",
                  "FullAddress": "string",
                  "Street": "string",
                  "Number": "string",
                  "Letter": "string",
                  "Stair": "string",
                  "Floor": "string",
                  "Door": "string",
                  "CountryId": "string",
                  "Country": "string",
                  "RegionId": "string",
                  "Region": "string",
                  "PostalCode": "string",
                  "CityId": "string",
                  "City": "string",
                  "Email": "string",
                  "Telephone": "string",
                  "Mobile": "string",
                  "Fax": "string",
                  "AddressName": "string",
                  "AlternativeBusinessName": "string",
                  "Timestamp": "2021-02-25T14:44:52.001Z",
                  "Type": "Delivery",
                  "StreetType": "Street"
                },
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:52.001Z",
                    "DataType": "Date"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesPersons/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Active": true,
                  "Name": "string",
                  "CommissionRate": 19,
                  "TaxNumber": "string",
                  "Timestamp": "2021-02-25T14:44:52.001Z",
                  "TaxNumberType": "Passport",
                  "Address": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:52.001Z",
                    "Type": "Commercial",
                    "StreetType": "Place"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.001Z",
                      "DataType": "Boolean"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesPersons/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Active": true,
                  "Name": "string",
                  "CommissionRate": 19,
                  "TaxNumber": "string",
                  "Timestamp": "2021-02-25T14:44:52.001Z",
                  "TaxNumberType": "Passport",
                  "Address": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:52.001Z",
                    "Type": "Commercial",
                    "StreetType": "Place"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.001Z",
                      "DataType": "Boolean"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SalesPersons"
        ],
        "summary": "Returns all sales persons",
        "operationId": "QUERY_SalesPersons_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPerson"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesPersons",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Active": false,
                      "Name": "string",
                      "CommissionRate": 15,
                      "TaxNumber": "string",
                      "Timestamp": "2021-02-25T14:44:52.008Z",
                      "TaxNumberType": "EuropeanTaxId",
                      "Address": {
                        "Id": "string",
                        "FullAddress": "string",
                        "Street": "string",
                        "Number": "string",
                        "Letter": "string",
                        "Stair": "string",
                        "Floor": "string",
                        "Door": "string",
                        "CountryId": "string",
                        "Country": "string",
                        "RegionId": "string",
                        "Region": "string",
                        "PostalCode": "string",
                        "CityId": "string",
                        "City": "string",
                        "Email": "string",
                        "Telephone": "string",
                        "Mobile": "string",
                        "Fax": "string",
                        "AddressName": "string",
                        "AlternativeBusinessName": "string",
                        "Timestamp": "2021-02-25T14:44:52.008Z",
                        "Type": "Commercial",
                        "StreetType": "Place"
                      },
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.008Z",
                          "DataType": "Date"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPerson"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesPersons",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Active": false,
                      "Name": "string",
                      "CommissionRate": 15,
                      "TaxNumber": "string",
                      "Timestamp": "2021-02-25T14:44:52.008Z",
                      "TaxNumberType": "EuropeanTaxId",
                      "Address": {
                        "Id": "string",
                        "FullAddress": "string",
                        "Street": "string",
                        "Number": "string",
                        "Letter": "string",
                        "Stair": "string",
                        "Floor": "string",
                        "Door": "string",
                        "CountryId": "string",
                        "Country": "string",
                        "RegionId": "string",
                        "Region": "string",
                        "PostalCode": "string",
                        "CityId": "string",
                        "City": "string",
                        "Email": "string",
                        "Telephone": "string",
                        "Mobile": "string",
                        "Fax": "string",
                        "AddressName": "string",
                        "AlternativeBusinessName": "string",
                        "Timestamp": "2021-02-25T14:44:52.008Z",
                        "Type": "Commercial",
                        "StreetType": "Place"
                      },
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.008Z",
                          "DataType": "Date"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SalesPersons({Id})": {
      "get": {
        "tags": [
          "SalesPersons"
        ],
        "summary": "Returns a sales person",
        "operationId": "GET_SalesPersons_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "SalesPerson id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SalesPerson id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPerson"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesPersons/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Active": true,
                  "Name": "string",
                  "CommissionRate": 19,
                  "TaxNumber": "string",
                  "Timestamp": "2021-02-25T14:44:52.013Z",
                  "TaxNumberType": "Passport",
                  "Address": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:52.013Z",
                    "Type": "Commercial",
                    "StreetType": "Place"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.013Z",
                      "DataType": "Boolean"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPerson"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesPersons/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Active": true,
                  "Name": "string",
                  "CommissionRate": 19,
                  "TaxNumber": "string",
                  "Timestamp": "2021-02-25T14:44:52.013Z",
                  "TaxNumberType": "Passport",
                  "Address": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:52.013Z",
                    "Type": "Commercial",
                    "StreetType": "Place"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.013Z",
                      "DataType": "Boolean"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalesPersons"
        ],
        "summary": "Updates a sales person",
        "operationId": "PUT_SalesPersons_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "SalesPerson id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SalesPerson id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "SalesPerson resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesPerson"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Active": true,
                "Name": "string",
                "CommissionRate": 9,
                "TaxNumber": "string",
                "Timestamp": "2021-02-25T14:44:52.019Z",
                "TaxNumberType": "TaxID",
                "Address": {
                  "Id": "string",
                  "FullAddress": "string",
                  "Street": "string",
                  "Number": "string",
                  "Letter": "string",
                  "Stair": "string",
                  "Floor": "string",
                  "Door": "string",
                  "CountryId": "string",
                  "Country": "string",
                  "RegionId": "string",
                  "Region": "string",
                  "PostalCode": "string",
                  "CityId": "string",
                  "City": "string",
                  "Email": "string",
                  "Telephone": "string",
                  "Mobile": "string",
                  "Fax": "string",
                  "AddressName": "string",
                  "AlternativeBusinessName": "string",
                  "Timestamp": "2021-02-25T14:44:52.019Z",
                  "Type": "Delivery",
                  "StreetType": "Street"
                },
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:52.019Z",
                    "DataType": "Date"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesPerson"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": "string",
                "Active": true,
                "Name": "string",
                "CommissionRate": 9,
                "TaxNumber": "string",
                "Timestamp": "2021-02-25T14:44:52.019Z",
                "TaxNumberType": "TaxID",
                "Address": {
                  "Id": "string",
                  "FullAddress": "string",
                  "Street": "string",
                  "Number": "string",
                  "Letter": "string",
                  "Stair": "string",
                  "Floor": "string",
                  "Door": "string",
                  "CountryId": "string",
                  "Country": "string",
                  "RegionId": "string",
                  "Region": "string",
                  "PostalCode": "string",
                  "CityId": "string",
                  "City": "string",
                  "Email": "string",
                  "Telephone": "string",
                  "Mobile": "string",
                  "Fax": "string",
                  "AddressName": "string",
                  "AlternativeBusinessName": "string",
                  "Timestamp": "2021-02-25T14:44:52.019Z",
                  "Type": "Delivery",
                  "StreetType": "Street"
                },
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:52.019Z",
                    "DataType": "Date"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesPersons/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Active": true,
                  "Name": "string",
                  "CommissionRate": 19,
                  "TaxNumber": "string",
                  "Timestamp": "2021-02-25T14:44:52.019Z",
                  "TaxNumberType": "Passport",
                  "Address": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:52.019Z",
                    "Type": "Commercial",
                    "StreetType": "Place"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.019Z",
                      "DataType": "Boolean"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesPersons/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Active": true,
                  "Name": "string",
                  "CommissionRate": 19,
                  "TaxNumber": "string",
                  "Timestamp": "2021-02-25T14:44:52.019Z",
                  "TaxNumberType": "Passport",
                  "Address": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:52.019Z",
                    "Type": "Commercial",
                    "StreetType": "Place"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.019Z",
                      "DataType": "Boolean"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesPersons"
        ],
        "summary": "Deletes a sales person",
        "operationId": "DELETE_SalesPersons_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "SalesPerson id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SalesPerson id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SalesQuotes": {
      "post": {
        "tags": [
          "SalesQuotes"
        ],
        "summary": "Creates a sales quote",
        "operationId": "POST_SalesQuotes_Async",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "SalesQuote resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesQuote"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesQuote"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SalesQuotes"
        ],
        "summary": "Returns all sales quotes",
        "operationId": "QUERY_SalesQuotes_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesQuote"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesQuotes",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Serie": "string",
                      "Number": 0,
                      "Period": 0,
                      "IssueDate": "2021-02-25T14:44:52.082Z",
                      "CustomerId": "string",
                      "CustomerName": "string",
                      "CustomerCommercialName": "string",
                      "CustomerBusinessName": "string",
                      "ApprovalDate": "2021-02-25T14:44:52.082Z",
                      "HasBeenApproved": false,
                      "DeliveryAddressId": "string",
                      "InvoiceAddressId": "string",
                      "PaymentAddressId": "string",
                      "CurrencyId": "string",
                      "CurrencyChangeRate": 74,
                      "VATIncluded": false,
                      "SalesPersonId": "string",
                      "CommissionRate": 39,
                      "CommissionAmount": 86,
                      "DiscountRate": 86,
                      "DiscountAmount": 28,
                      "DiscountPaymentMethodRate": 91,
                      "DiscountPaymentMethodAmount": 62,
                      "DiscountRappelRate": 76,
                      "DiscountRappelAmount": 98,
                      "IncomeTaxRateId": "string",
                      "IncomeTaxRate": 5,
                      "IncomeTaxAmount": 51,
                      "ProductPriceRateId": "string",
                      "ProductDiscountRateId": "string",
                      "TotalDiscount": 14,
                      "TotalNet": 81,
                      "TotalTaxes": 73,
                      "Total": 71,
                      "Notes": "string",
                      "Timestamp": "2021-02-25T14:44:52.082Z",
                      "CustomerAddress": {
                        "Id": "string",
                        "FullAddress": "string",
                        "Street": "string",
                        "Number": "string",
                        "Letter": "string",
                        "Stair": "string",
                        "Floor": "string",
                        "Door": "string",
                        "CountryId": "string",
                        "Country": "string",
                        "RegionId": "string",
                        "Region": "string",
                        "PostalCode": "string",
                        "CityId": "string",
                        "City": "string",
                        "Email": "string",
                        "Telephone": "string",
                        "Mobile": "string",
                        "Fax": "string",
                        "AddressName": "string",
                        "AlternativeBusinessName": "string",
                        "Timestamp": "2021-02-25T14:44:52.082Z",
                        "Type": "Billing",
                        "StreetType": "Market"
                      },
                      "TaxType": "EuropeanUnion",
                      "PaymentMethod": {
                        "Id": "string",
                        "CompanyId": "string",
                        "Code": 0,
                        "Name": "string",
                        "Instalments": 0,
                        "FirstInstalmentDay": 0,
                        "DaysBetweenInstalments": 0,
                        "Timestamp": "2021-02-25T14:44:52.082Z"
                      },
                      "Lines": [
                        {
                          "Id": "string",
                          "ProductId": "string",
                          "ProductPackId": "string",
                          "Position": 0,
                          "ProductDescription": "string",
                          "ProductLongDescription": "string",
                          "ProductSizeId": "string",
                          "ColourId": "string",
                          "Consignment": "string",
                          "ExpirationDate": "2021-02-25T14:44:52.082Z",
                          "StoreId": "string",
                          "SalesPersonId": "string",
                          "VATTaxRate": 45,
                          "SurchargeTaxRate": 45,
                          "Quantity": 45,
                          "QuantityMeasureUnit": 45,
                          "Price": 45,
                          "ProductDiscountRate": 45,
                          "ProductDiscount2Rate": 45,
                          "ProductDiscount3Rate": 45,
                          "ProductDiscountAmount": 45,
                          "CommissionRate": 45,
                          "CommissionAmount": 45,
                          "VATIncluded": false,
                          "TotalNet": 45,
                          "VATTaxAmount": 45,
                          "SurchargeTaxAmount": 45,
                          "Total": 45,
                          "Timestamp": "2021-02-25T14:44:52.082Z"
                        }
                      ],
                      "Taxes": [
                        {
                          "Id": "string",
                          "Base": 16,
                          "VATTaxRate": 16,
                          "VATTAxAmount": 16,
                          "SurchargeTaxRate": 16,
                          "SurchargeTaxAmount": 16,
                          "TotalTaxesAmount": 16,
                          "Timestamp": "2021-02-25T14:44:52.082Z",
                          "TransactionType": "Export"
                        }
                      ],
                      "AdvancePayments": [
                        {
                          "Id": "string",
                          "Amount": 42,
                          "Date": "2021-02-25T14:44:52.082Z",
                          "Timestamp": "2021-02-25T14:44:52.082Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.082Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesQuote"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesQuotes",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Serie": "string",
                      "Number": 0,
                      "Period": 0,
                      "IssueDate": "2021-02-25T14:44:52.082Z",
                      "CustomerId": "string",
                      "CustomerName": "string",
                      "CustomerCommercialName": "string",
                      "CustomerBusinessName": "string",
                      "ApprovalDate": "2021-02-25T14:44:52.082Z",
                      "HasBeenApproved": false,
                      "DeliveryAddressId": "string",
                      "InvoiceAddressId": "string",
                      "PaymentAddressId": "string",
                      "CurrencyId": "string",
                      "CurrencyChangeRate": 74,
                      "VATIncluded": false,
                      "SalesPersonId": "string",
                      "CommissionRate": 39,
                      "CommissionAmount": 86,
                      "DiscountRate": 86,
                      "DiscountAmount": 28,
                      "DiscountPaymentMethodRate": 91,
                      "DiscountPaymentMethodAmount": 62,
                      "DiscountRappelRate": 76,
                      "DiscountRappelAmount": 98,
                      "IncomeTaxRateId": "string",
                      "IncomeTaxRate": 5,
                      "IncomeTaxAmount": 51,
                      "ProductPriceRateId": "string",
                      "ProductDiscountRateId": "string",
                      "TotalDiscount": 14,
                      "TotalNet": 81,
                      "TotalTaxes": 73,
                      "Total": 71,
                      "Notes": "string",
                      "Timestamp": "2021-02-25T14:44:52.082Z",
                      "CustomerAddress": {
                        "Id": "string",
                        "FullAddress": "string",
                        "Street": "string",
                        "Number": "string",
                        "Letter": "string",
                        "Stair": "string",
                        "Floor": "string",
                        "Door": "string",
                        "CountryId": "string",
                        "Country": "string",
                        "RegionId": "string",
                        "Region": "string",
                        "PostalCode": "string",
                        "CityId": "string",
                        "City": "string",
                        "Email": "string",
                        "Telephone": "string",
                        "Mobile": "string",
                        "Fax": "string",
                        "AddressName": "string",
                        "AlternativeBusinessName": "string",
                        "Timestamp": "2021-02-25T14:44:52.082Z",
                        "Type": "Billing",
                        "StreetType": "Market"
                      },
                      "TaxType": "EuropeanUnion",
                      "PaymentMethod": {
                        "Id": "string",
                        "CompanyId": "string",
                        "Code": 0,
                        "Name": "string",
                        "Instalments": 0,
                        "FirstInstalmentDay": 0,
                        "DaysBetweenInstalments": 0,
                        "Timestamp": "2021-02-25T14:44:52.082Z"
                      },
                      "Lines": [
                        {
                          "Id": "string",
                          "ProductId": "string",
                          "ProductPackId": "string",
                          "Position": 0,
                          "ProductDescription": "string",
                          "ProductLongDescription": "string",
                          "ProductSizeId": "string",
                          "ColourId": "string",
                          "Consignment": "string",
                          "ExpirationDate": "2021-02-25T14:44:52.082Z",
                          "StoreId": "string",
                          "SalesPersonId": "string",
                          "VATTaxRate": 45,
                          "SurchargeTaxRate": 45,
                          "Quantity": 45,
                          "QuantityMeasureUnit": 45,
                          "Price": 45,
                          "ProductDiscountRate": 45,
                          "ProductDiscount2Rate": 45,
                          "ProductDiscount3Rate": 45,
                          "ProductDiscountAmount": 45,
                          "CommissionRate": 45,
                          "CommissionAmount": 45,
                          "VATIncluded": false,
                          "TotalNet": 45,
                          "VATTaxAmount": 45,
                          "SurchargeTaxAmount": 45,
                          "Total": 45,
                          "Timestamp": "2021-02-25T14:44:52.082Z"
                        }
                      ],
                      "Taxes": [
                        {
                          "Id": "string",
                          "Base": 16,
                          "VATTaxRate": 16,
                          "VATTAxAmount": 16,
                          "SurchargeTaxRate": 16,
                          "SurchargeTaxAmount": 16,
                          "TotalTaxesAmount": 16,
                          "Timestamp": "2021-02-25T14:44:52.082Z",
                          "TransactionType": "Export"
                        }
                      ],
                      "AdvancePayments": [
                        {
                          "Id": "string",
                          "Amount": 42,
                          "Date": "2021-02-25T14:44:52.082Z",
                          "Timestamp": "2021-02-25T14:44:52.082Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.082Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SalesQuotes({Id})": {
      "get": {
        "tags": [
          "SalesQuotes"
        ],
        "summary": "Returns a sales quote",
        "operationId": "GET_SalesQuotes_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "SalesQuote id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SalesQuote id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesQuote"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesQuotes/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Serie": "string",
                  "Number": 0,
                  "Period": 0,
                  "IssueDate": "2021-02-25T14:44:52.088Z",
                  "CustomerId": "string",
                  "CustomerName": "string",
                  "CustomerCommercialName": "string",
                  "CustomerBusinessName": "string",
                  "ApprovalDate": "2021-02-25T14:44:52.088Z",
                  "HasBeenApproved": false,
                  "DeliveryAddressId": "string",
                  "InvoiceAddressId": "string",
                  "PaymentAddressId": "string",
                  "CurrencyId": "string",
                  "CurrencyChangeRate": 70,
                  "VATIncluded": false,
                  "SalesPersonId": "string",
                  "CommissionRate": 38,
                  "CommissionAmount": 74,
                  "DiscountRate": 25,
                  "DiscountAmount": 4,
                  "DiscountPaymentMethodRate": 8,
                  "DiscountPaymentMethodAmount": 58,
                  "DiscountRappelRate": 82,
                  "DiscountRappelAmount": 33,
                  "IncomeTaxRateId": "string",
                  "IncomeTaxRate": 49,
                  "IncomeTaxAmount": 54,
                  "ProductPriceRateId": "string",
                  "ProductDiscountRateId": "string",
                  "TotalDiscount": 67,
                  "TotalNet": 3,
                  "TotalTaxes": 90,
                  "Total": 37,
                  "Notes": "string",
                  "Timestamp": "2021-02-25T14:44:52.088Z",
                  "CustomerAddress": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:52.088Z",
                    "Type": "Undefined",
                    "StreetType": "Extension"
                  },
                  "TaxType": "Exempt",
                  "PaymentMethod": {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": 0,
                    "Name": "string",
                    "Instalments": 0,
                    "FirstInstalmentDay": 0,
                    "DaysBetweenInstalments": 0,
                    "Timestamp": "2021-02-25T14:44:52.088Z"
                  },
                  "Lines": [
                    {
                      "Id": "string",
                      "ProductId": "string",
                      "ProductPackId": "string",
                      "Position": 0,
                      "ProductDescription": "string",
                      "ProductLongDescription": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "ExpirationDate": "2021-02-25T14:44:52.088Z",
                      "StoreId": "string",
                      "SalesPersonId": "string",
                      "VATTaxRate": 11,
                      "SurchargeTaxRate": 11,
                      "Quantity": 11,
                      "QuantityMeasureUnit": 11,
                      "Price": 11,
                      "ProductDiscountRate": 11,
                      "ProductDiscount2Rate": 11,
                      "ProductDiscount3Rate": 11,
                      "ProductDiscountAmount": 11,
                      "CommissionRate": 11,
                      "CommissionAmount": 11,
                      "VATIncluded": false,
                      "TotalNet": 11,
                      "VATTaxAmount": 11,
                      "SurchargeTaxAmount": 11,
                      "Total": 11,
                      "Timestamp": "2021-02-25T14:44:52.088Z"
                    }
                  ],
                  "Taxes": [
                    {
                      "Id": "string",
                      "Base": 86,
                      "VATTaxRate": 86,
                      "VATTAxAmount": 86,
                      "SurchargeTaxRate": 86,
                      "SurchargeTaxAmount": 86,
                      "TotalTaxesAmount": 86,
                      "Timestamp": "2021-02-25T14:44:52.088Z",
                      "TransactionType": "General"
                    }
                  ],
                  "AdvancePayments": [
                    {
                      "Id": "string",
                      "Amount": 93,
                      "Date": "2021-02-25T14:44:52.088Z",
                      "Timestamp": "2021-02-25T14:44:52.088Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.088Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesQuote"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesQuotes/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Serie": "string",
                  "Number": 0,
                  "Period": 0,
                  "IssueDate": "2021-02-25T14:44:52.088Z",
                  "CustomerId": "string",
                  "CustomerName": "string",
                  "CustomerCommercialName": "string",
                  "CustomerBusinessName": "string",
                  "ApprovalDate": "2021-02-25T14:44:52.088Z",
                  "HasBeenApproved": false,
                  "DeliveryAddressId": "string",
                  "InvoiceAddressId": "string",
                  "PaymentAddressId": "string",
                  "CurrencyId": "string",
                  "CurrencyChangeRate": 70,
                  "VATIncluded": false,
                  "SalesPersonId": "string",
                  "CommissionRate": 38,
                  "CommissionAmount": 74,
                  "DiscountRate": 25,
                  "DiscountAmount": 4,
                  "DiscountPaymentMethodRate": 8,
                  "DiscountPaymentMethodAmount": 58,
                  "DiscountRappelRate": 82,
                  "DiscountRappelAmount": 33,
                  "IncomeTaxRateId": "string",
                  "IncomeTaxRate": 49,
                  "IncomeTaxAmount": 54,
                  "ProductPriceRateId": "string",
                  "ProductDiscountRateId": "string",
                  "TotalDiscount": 67,
                  "TotalNet": 3,
                  "TotalTaxes": 90,
                  "Total": 37,
                  "Notes": "string",
                  "Timestamp": "2021-02-25T14:44:52.088Z",
                  "CustomerAddress": {
                    "Id": "string",
                    "FullAddress": "string",
                    "Street": "string",
                    "Number": "string",
                    "Letter": "string",
                    "Stair": "string",
                    "Floor": "string",
                    "Door": "string",
                    "CountryId": "string",
                    "Country": "string",
                    "RegionId": "string",
                    "Region": "string",
                    "PostalCode": "string",
                    "CityId": "string",
                    "City": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "AddressName": "string",
                    "AlternativeBusinessName": "string",
                    "Timestamp": "2021-02-25T14:44:52.088Z",
                    "Type": "Undefined",
                    "StreetType": "Extension"
                  },
                  "TaxType": "Exempt",
                  "PaymentMethod": {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": 0,
                    "Name": "string",
                    "Instalments": 0,
                    "FirstInstalmentDay": 0,
                    "DaysBetweenInstalments": 0,
                    "Timestamp": "2021-02-25T14:44:52.088Z"
                  },
                  "Lines": [
                    {
                      "Id": "string",
                      "ProductId": "string",
                      "ProductPackId": "string",
                      "Position": 0,
                      "ProductDescription": "string",
                      "ProductLongDescription": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "ExpirationDate": "2021-02-25T14:44:52.088Z",
                      "StoreId": "string",
                      "SalesPersonId": "string",
                      "VATTaxRate": 11,
                      "SurchargeTaxRate": 11,
                      "Quantity": 11,
                      "QuantityMeasureUnit": 11,
                      "Price": 11,
                      "ProductDiscountRate": 11,
                      "ProductDiscount2Rate": 11,
                      "ProductDiscount3Rate": 11,
                      "ProductDiscountAmount": 11,
                      "CommissionRate": 11,
                      "CommissionAmount": 11,
                      "VATIncluded": false,
                      "TotalNet": 11,
                      "VATTaxAmount": 11,
                      "SurchargeTaxAmount": 11,
                      "Total": 11,
                      "Timestamp": "2021-02-25T14:44:52.088Z"
                    }
                  ],
                  "Taxes": [
                    {
                      "Id": "string",
                      "Base": 86,
                      "VATTaxRate": 86,
                      "VATTAxAmount": 86,
                      "SurchargeTaxRate": 86,
                      "SurchargeTaxAmount": 86,
                      "TotalTaxesAmount": 86,
                      "Timestamp": "2021-02-25T14:44:52.088Z",
                      "TransactionType": "General"
                    }
                  ],
                  "AdvancePayments": [
                    {
                      "Id": "string",
                      "Amount": 93,
                      "Date": "2021-02-25T14:44:52.088Z",
                      "Timestamp": "2021-02-25T14:44:52.088Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.088Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SalesReceipts": {
      "get": {
        "tags": [
          "SalesReceipts"
        ],
        "summary": "Returns all sales receipts",
        "operationId": "QUERY_SalesReceipts_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesReceipt"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesReceipts",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "SalesInvoiceId": "string",
                      "Order": 0,
                      "IssueDate": "2021-02-25T14:44:52.094Z",
                      "DueDate": "2021-02-25T14:44:52.094Z",
                      "CustomerId": "string",
                      "IBAN": "string",
                      "TotalAmount": 36,
                      "Description": "string",
                      "Timestamp": "2021-02-25T14:44:52.094Z",
                      "Status": "Paid",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.094Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesReceipt"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesReceipts",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "SalesInvoiceId": "string",
                      "Order": 0,
                      "IssueDate": "2021-02-25T14:44:52.094Z",
                      "DueDate": "2021-02-25T14:44:52.094Z",
                      "CustomerId": "string",
                      "IBAN": "string",
                      "TotalAmount": 36,
                      "Description": "string",
                      "Timestamp": "2021-02-25T14:44:52.094Z",
                      "Status": "Paid",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.094Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SalesReceipts({Id})": {
      "get": {
        "tags": [
          "SalesReceipts"
        ],
        "summary": "Returns a sales receipt",
        "operationId": "GET_SalesReceipts_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "SalesReceipt id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SalesReceipt id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReceipt"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesReceipts/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "SalesInvoiceId": "string",
                  "Order": 0,
                  "IssueDate": "2021-02-25T14:44:52.101Z",
                  "DueDate": "2021-02-25T14:44:52.101Z",
                  "CustomerId": "string",
                  "IBAN": "string",
                  "TotalAmount": 54,
                  "Description": "string",
                  "Timestamp": "2021-02-25T14:44:52.101Z",
                  "Status": "Pending",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.101Z",
                      "DataType": "Decimal"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReceipt"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SalesReceipts/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "SalesInvoiceId": "string",
                  "Order": 0,
                  "IssueDate": "2021-02-25T14:44:52.101Z",
                  "DueDate": "2021-02-25T14:44:52.101Z",
                  "CustomerId": "string",
                  "IBAN": "string",
                  "TotalAmount": 54,
                  "Description": "string",
                  "Timestamp": "2021-02-25T14:44:52.101Z",
                  "Status": "Pending",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.101Z",
                      "DataType": "Decimal"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SerialNumbers": {
      "get": {
        "tags": [
          "SerialNumbers"
        ],
        "summary": "Returns all serial numbers",
        "operationId": "QUERY_SerialNumbers_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SerialNumber"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SerialNumbers",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Date": "2021-02-25T14:44:52.109Z",
                      "ProductId": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "StoreId": "string",
                      "Number": "string",
                      "Timestamp": "2021-02-25T14:44:52.109Z",
                      "MeasureUnit": {
                        "Id": "string",
                        "Name": "string",
                        "ConversionFactor": 40,
                        "Timestamp": "2021-02-25T14:44:52.109Z"
                      },
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.109Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SerialNumber"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SerialNumbers",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Date": "2021-02-25T14:44:52.109Z",
                      "ProductId": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "StoreId": "string",
                      "Number": "string",
                      "Timestamp": "2021-02-25T14:44:52.109Z",
                      "MeasureUnit": {
                        "Id": "string",
                        "Name": "string",
                        "ConversionFactor": 40,
                        "Timestamp": "2021-02-25T14:44:52.109Z"
                      },
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.109Z",
                          "DataType": "Boolean"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SerialNumbers({Id})": {
      "get": {
        "tags": [
          "SerialNumbers"
        ],
        "summary": "Returns a serial number",
        "operationId": "GET_SerialNumbers_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "SerialNumber id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SerialNumber id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SerialNumber"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SerialNumbers/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Date": "2021-02-25T14:44:52.114Z",
                  "ProductId": "string",
                  "ProductSizeId": "string",
                  "ColourId": "string",
                  "Consignment": "string",
                  "StoreId": "string",
                  "Number": "string",
                  "Timestamp": "2021-02-25T14:44:52.114Z",
                  "MeasureUnit": {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 20,
                    "Timestamp": "2021-02-25T14:44:52.114Z"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.114Z",
                      "DataType": "Integer"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SerialNumber"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#SerialNumbers/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Date": "2021-02-25T14:44:52.114Z",
                  "ProductId": "string",
                  "ProductSizeId": "string",
                  "ColourId": "string",
                  "Consignment": "string",
                  "StoreId": "string",
                  "Number": "string",
                  "Timestamp": "2021-02-25T14:44:52.114Z",
                  "MeasureUnit": {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 20,
                    "Timestamp": "2021-02-25T14:44:52.114Z"
                  },
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.114Z",
                      "DataType": "Integer"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Sites": {
      "get": {
        "tags": [
          "Sites"
        ],
        "summary": "Returns owner and authorized sites",
        "operationId": "QUERY_Sites_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Sites",
                  "value": [
                    {
                      "SiteId": "string",
                      "Description": "string"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Sites",
                  "value": [
                    {
                      "SiteId": "string",
                      "Description": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The server cannot produce a response matching the accept header"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The server cannot produce a response matching the accept header"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "NotImplemented",
                      "message": "The operation is not implemented"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "NotImplemented",
                      "message": "The operation is not implemented"
                    }
                  ]
                }
              }
            }
          },
          "502": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseDisconnected",
                      "message": "A bad gateway response was received from the relay server."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseDisconnected",
                      "message": "A bad gateway response was received from the relay server."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "504": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": " GatewayTimeout",
                      "message": "The server encountered an internal error or misconfiguration and was unable to complete the request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": " GatewayTimeout",
                      "message": "The server encountered an internal error or misconfiguration and was unable to complete the request."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/StockMovements": {
      "post": {
        "tags": [
          "StockMovements"
        ],
        "summary": "Create a stock movement record",
        "operationId": "POST_StockMovements_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "StockMovement resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockMovement"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "StoreId": "string",
                "StoreLocationId": "string",
                "DestinationStoreId": "string",
                "ProductId": "string",
                "DateAndTime": "2021-02-25T14:44:52.136Z",
                "Quantity": 52,
                "Price": 71,
                "Note": "string",
                "ProductSizeId": "string",
                "ColourId": "string",
                "Consignment": "string",
                "ExpirationDate": "2021-02-25T14:44:52.136Z",
                "Timestamp": "2021-02-25T14:44:52.136Z",
                "Type": "Output",
                "MeasureUnit": {
                  "Id": "string",
                  "Name": "string",
                  "ConversionFactor": 94,
                  "Timestamp": "2021-02-25T14:44:52.136Z"
                },
                "ProductSerialNumbers": [
                  {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": "string",
                    "Date": "2021-02-25T14:44:52.136Z",
                    "ProductId": "string",
                    "ProductSizeId": "string",
                    "ColourId": "string",
                    "Consignment": "string",
                    "StoreId": "string",
                    "Number": "string",
                    "Timestamp": "2021-02-25T14:44:52.136Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:52.136Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockMovement"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "StoreId": "string",
                "StoreLocationId": "string",
                "DestinationStoreId": "string",
                "ProductId": "string",
                "DateAndTime": "2021-02-25T14:44:52.136Z",
                "Quantity": 52,
                "Price": 71,
                "Note": "string",
                "ProductSizeId": "string",
                "ColourId": "string",
                "Consignment": "string",
                "ExpirationDate": "2021-02-25T14:44:52.136Z",
                "Timestamp": "2021-02-25T14:44:52.136Z",
                "Type": "Output",
                "MeasureUnit": {
                  "Id": "string",
                  "Name": "string",
                  "ConversionFactor": 94,
                  "Timestamp": "2021-02-25T14:44:52.136Z"
                },
                "ProductSerialNumbers": [
                  {
                    "Id": "string",
                    "CompanyId": "string",
                    "Code": "string",
                    "Date": "2021-02-25T14:44:52.136Z",
                    "ProductId": "string",
                    "ProductSizeId": "string",
                    "ColourId": "string",
                    "Consignment": "string",
                    "StoreId": "string",
                    "Number": "string",
                    "Timestamp": "2021-02-25T14:44:52.136Z"
                  }
                ],
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:52.136Z",
                    "DataType": "Boolean"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#StockMovements/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "StoreId": "string",
                  "StoreLocationId": "string",
                  "DestinationStoreId": "string",
                  "ProductId": "string",
                  "DateAndTime": "2021-02-25T14:44:52.136Z",
                  "Quantity": 7,
                  "Price": 54,
                  "Note": "string",
                  "ProductSizeId": "string",
                  "ColourId": "string",
                  "Consignment": "string",
                  "ExpirationDate": "2021-02-25T14:44:52.136Z",
                  "Timestamp": "2021-02-25T14:44:52.136Z",
                  "Type": "Output",
                  "MeasureUnit": {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 16,
                    "Timestamp": "2021-02-25T14:44:52.136Z"
                  },
                  "ProductSerialNumbers": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Date": "2021-02-25T14:44:52.136Z",
                      "ProductId": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "StoreId": "string",
                      "Number": "string",
                      "Timestamp": "2021-02-25T14:44:52.136Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.136Z",
                      "DataType": "Decimal"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#StockMovements/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "StoreId": "string",
                  "StoreLocationId": "string",
                  "DestinationStoreId": "string",
                  "ProductId": "string",
                  "DateAndTime": "2021-02-25T14:44:52.136Z",
                  "Quantity": 7,
                  "Price": 54,
                  "Note": "string",
                  "ProductSizeId": "string",
                  "ColourId": "string",
                  "Consignment": "string",
                  "ExpirationDate": "2021-02-25T14:44:52.136Z",
                  "Timestamp": "2021-02-25T14:44:52.136Z",
                  "Type": "Output",
                  "MeasureUnit": {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 16,
                    "Timestamp": "2021-02-25T14:44:52.136Z"
                  },
                  "ProductSerialNumbers": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Date": "2021-02-25T14:44:52.136Z",
                      "ProductId": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "StoreId": "string",
                      "Number": "string",
                      "Timestamp": "2021-02-25T14:44:52.136Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.136Z",
                      "DataType": "Decimal"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "StockMovements"
        ],
        "summary": "Returns all stock movement records",
        "operationId": "QUERY_StockMovements_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockMovement"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#StockMovements",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "StoreId": "string",
                      "StoreLocationId": "string",
                      "DestinationStoreId": "string",
                      "ProductId": "string",
                      "DateAndTime": "2021-02-25T14:44:52.143Z",
                      "Quantity": 63,
                      "Price": 38,
                      "Note": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "ExpirationDate": "2021-02-25T14:44:52.143Z",
                      "Timestamp": "2021-02-25T14:44:52.143Z",
                      "Type": "Output",
                      "MeasureUnit": {
                        "Id": "string",
                        "Name": "string",
                        "ConversionFactor": 38,
                        "Timestamp": "2021-02-25T14:44:52.143Z"
                      },
                      "ProductSerialNumbers": [
                        {
                          "Id": "string",
                          "CompanyId": "string",
                          "Code": "string",
                          "Date": "2021-02-25T14:44:52.143Z",
                          "ProductId": "string",
                          "ProductSizeId": "string",
                          "ColourId": "string",
                          "Consignment": "string",
                          "StoreId": "string",
                          "Number": "string",
                          "Timestamp": "2021-02-25T14:44:52.143Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.143Z",
                          "DataType": "Date"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockMovement"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#StockMovements",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "StoreId": "string",
                      "StoreLocationId": "string",
                      "DestinationStoreId": "string",
                      "ProductId": "string",
                      "DateAndTime": "2021-02-25T14:44:52.143Z",
                      "Quantity": 63,
                      "Price": 38,
                      "Note": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "ExpirationDate": "2021-02-25T14:44:52.143Z",
                      "Timestamp": "2021-02-25T14:44:52.143Z",
                      "Type": "Output",
                      "MeasureUnit": {
                        "Id": "string",
                        "Name": "string",
                        "ConversionFactor": 38,
                        "Timestamp": "2021-02-25T14:44:52.143Z"
                      },
                      "ProductSerialNumbers": [
                        {
                          "Id": "string",
                          "CompanyId": "string",
                          "Code": "string",
                          "Date": "2021-02-25T14:44:52.143Z",
                          "ProductId": "string",
                          "ProductSizeId": "string",
                          "ColourId": "string",
                          "Consignment": "string",
                          "StoreId": "string",
                          "Number": "string",
                          "Timestamp": "2021-02-25T14:44:52.143Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.143Z",
                          "DataType": "Date"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/StockMovements({Id})": {
      "get": {
        "tags": [
          "StockMovements"
        ],
        "summary": "Returns a stock movement record",
        "operationId": "GET_StockMovements_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "StockMovement id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "StockMovement id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockMovement"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#StockMovements/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "StoreId": "string",
                  "StoreLocationId": "string",
                  "DestinationStoreId": "string",
                  "ProductId": "string",
                  "DateAndTime": "2021-02-25T14:44:52.148Z",
                  "Quantity": 7,
                  "Price": 54,
                  "Note": "string",
                  "ProductSizeId": "string",
                  "ColourId": "string",
                  "Consignment": "string",
                  "ExpirationDate": "2021-02-25T14:44:52.148Z",
                  "Timestamp": "2021-02-25T14:44:52.148Z",
                  "Type": "Output",
                  "MeasureUnit": {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 16,
                    "Timestamp": "2021-02-25T14:44:52.148Z"
                  },
                  "ProductSerialNumbers": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Date": "2021-02-25T14:44:52.148Z",
                      "ProductId": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "StoreId": "string",
                      "Number": "string",
                      "Timestamp": "2021-02-25T14:44:52.148Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.148Z",
                      "DataType": "Decimal"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockMovement"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#StockMovements/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "StoreId": "string",
                  "StoreLocationId": "string",
                  "DestinationStoreId": "string",
                  "ProductId": "string",
                  "DateAndTime": "2021-02-25T14:44:52.148Z",
                  "Quantity": 7,
                  "Price": 54,
                  "Note": "string",
                  "ProductSizeId": "string",
                  "ColourId": "string",
                  "Consignment": "string",
                  "ExpirationDate": "2021-02-25T14:44:52.148Z",
                  "Timestamp": "2021-02-25T14:44:52.148Z",
                  "Type": "Output",
                  "MeasureUnit": {
                    "Id": "string",
                    "Name": "string",
                    "ConversionFactor": 16,
                    "Timestamp": "2021-02-25T14:44:52.148Z"
                  },
                  "ProductSerialNumbers": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Date": "2021-02-25T14:44:52.148Z",
                      "ProductId": "string",
                      "ProductSizeId": "string",
                      "ColourId": "string",
                      "Consignment": "string",
                      "StoreId": "string",
                      "Number": "string",
                      "Timestamp": "2021-02-25T14:44:52.148Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.148Z",
                      "DataType": "Decimal"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StockMovements"
        ],
        "summary": "Delete a stock movement record",
        "operationId": "DELETE_StockMovements_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "StockMovement id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "StockMovement id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Stores": {
      "get": {
        "tags": [
          "Stores"
        ],
        "summary": "Returns all stores",
        "operationId": "QUERY_Stores_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Store"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Stores",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:52.168Z",
                      "Contact": {
                        "Id": "string",
                        "Name": "string",
                        "AddressId": "string",
                        "Email": "string",
                        "Telephone": "string",
                        "Mobile": "string",
                        "Fax": "string",
                        "Timestamp": "2021-02-25T14:44:52.168Z"
                      },
                      "Locations": [
                        {
                          "Id": "string",
                          "Code": "string",
                          "Description": "string",
                          "Timestamp": "2021-02-25T14:44:52.168Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.168Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Store"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Stores",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": "string",
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:52.168Z",
                      "Contact": {
                        "Id": "string",
                        "Name": "string",
                        "AddressId": "string",
                        "Email": "string",
                        "Telephone": "string",
                        "Mobile": "string",
                        "Fax": "string",
                        "Timestamp": "2021-02-25T14:44:52.168Z"
                      },
                      "Locations": [
                        {
                          "Id": "string",
                          "Code": "string",
                          "Description": "string",
                          "Timestamp": "2021-02-25T14:44:52.168Z"
                        }
                      ],
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.168Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Stores({Id})": {
      "get": {
        "tags": [
          "Stores"
        ],
        "summary": "Returns a store",
        "operationId": "GET_Stores_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Store id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Store id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Stores/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:52.174Z",
                  "Contact": {
                    "Id": "string",
                    "Name": "string",
                    "AddressId": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "Timestamp": "2021-02-25T14:44:52.174Z"
                  },
                  "Locations": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Description": "string",
                      "Timestamp": "2021-02-25T14:44:52.174Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.174Z",
                      "DataType": "Boolean"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Stores/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": "string",
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:52.174Z",
                  "Contact": {
                    "Id": "string",
                    "Name": "string",
                    "AddressId": "string",
                    "Email": "string",
                    "Telephone": "string",
                    "Mobile": "string",
                    "Fax": "string",
                    "Timestamp": "2021-02-25T14:44:52.174Z"
                  },
                  "Locations": [
                    {
                      "Id": "string",
                      "Code": "string",
                      "Description": "string",
                      "Timestamp": "2021-02-25T14:44:52.174Z"
                    }
                  ],
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.174Z",
                      "DataType": "Boolean"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Tracking({Id})": {
      "get": {
        "tags": [
          "Tracking"
        ],
        "summary": "Get tracking",
        "operationId": "GET_Tracking_Async",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Tracking id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Tracking id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracking"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Tracking/$entity",
                  "Id": "string"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracking"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Tracking/$entity",
                  "Id": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The server cannot produce a response matching the accept header"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The server cannot produce a response matching the accept header"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "NotImplemented",
                      "message": "The operation is not implemented"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "NotImplemented",
                      "message": "The operation is not implemented"
                    }
                  ]
                }
              }
            }
          },
          "502": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseDisconnected",
                      "message": "A bad gateway response was received from the relay server."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseDisconnected",
                      "message": "A bad gateway response was received from the relay server."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "504": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": " GatewayTimeout",
                      "message": "The server encountered an internal error or misconfiguration and was unable to complete the request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": " GatewayTimeout",
                      "message": "The server encountered an internal error or misconfiguration and was unable to complete the request."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/VATTaxRates": {
      "get": {
        "tags": [
          "VATTaxRates"
        ],
        "summary": "Returns all VAT tax rates",
        "operationId": "QUERY_VATTaxRates_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VATTaxRate"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#VATTaxRates",
                  "value": [
                    {
                      "Id": "string",
                      "Code": 0,
                      "Name": "string",
                      "TaxRate": 36,
                      "SurchargeRate": 65,
                      "Timestamp": "2021-02-25T14:44:52.195Z",
                      "Type": "Undefined",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.195Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VATTaxRate"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#VATTaxRates",
                  "value": [
                    {
                      "Id": "string",
                      "Code": 0,
                      "Name": "string",
                      "TaxRate": 36,
                      "SurchargeRate": 65,
                      "Timestamp": "2021-02-25T14:44:52.195Z",
                      "Type": "Undefined",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.195Z",
                          "DataType": "Integer"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/VATTaxRates({Id})": {
      "get": {
        "tags": [
          "VATTaxRates"
        ],
        "summary": "Returns a VAT tax rate",
        "operationId": "GET_VATTaxRates_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "VATTaxRate id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "VATTaxRate id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VATTaxRate"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#VATTaxRates/$entity",
                  "Id": "string",
                  "Code": 0,
                  "Name": "string",
                  "TaxRate": 33,
                  "SurchargeRate": 43,
                  "Timestamp": "2021-02-25T14:44:52.201Z",
                  "Type": "VAT",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.201Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VATTaxRate"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#VATTaxRates/$entity",
                  "Id": "string",
                  "Code": 0,
                  "Name": "string",
                  "TaxRate": 33,
                  "SurchargeRate": 43,
                  "Timestamp": "2021-02-25T14:44:52.201Z",
                  "Type": "VAT",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.201Z",
                      "DataType": "Undefined"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Version": {
      "get": {
        "tags": [
          "Version"
        ],
        "summary": "Returns api version",
        "operationId": "Get_Version",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The server cannot produce a response matching the accept header"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The server cannot produce a response matching the accept header"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "501": {
            "description": "Server Error"
          },
          "502": {
            "description": "Server Error"
          },
          "503": {
            "description": "Server Error"
          },
          "504": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Zones": {
      "post": {
        "tags": [
          "Zones"
        ],
        "summary": "Creates a zone",
        "operationId": "POST_Zones_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Zone resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zone"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:52.214Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:52.214Z",
                    "DataType": "String"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Zone"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:52.214Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:52.214Z",
                    "DataType": "String"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Zones/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:52.214Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.214Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Zones/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:52.214Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.214Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Zones"
        ],
        "summary": "Returns all zones",
        "operationId": "QUERY_Zones_Sync",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Restricts the set of items returned. The maximum number of expressions is 100. The allowed functions are: allfunctions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Specifies the order in which items are returned. The maximum number of expressions is 5.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Limits the number of items returned from a collection. The maximum value is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Excludes the specified number of items of the queried collection from the result.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Indicates whether the total count of items within a collection are returned in the result.",
            "schema": {
              "type": "boolean",
              "default": "False"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zone"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Zones",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": 0,
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:52.220Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.220Z",
                          "DataType": "String"
                        }
                      ]
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zone"
                  }
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Zones",
                  "value": [
                    {
                      "Id": "string",
                      "CompanyId": "string",
                      "Code": 0,
                      "Name": "string",
                      "Timestamp": "2021-02-25T14:44:52.220Z",
                      "ExtendedProperties": [
                        {
                          "Id": "string",
                          "Value": "string",
                          "MaxLength": 0,
                          "DecimalPlaces": 0,
                          "Timestamp": "2021-02-25T14:44:52.220Z",
                          "DataType": "String"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Zones({Id})": {
      "get": {
        "tags": [
          "Zones"
        ],
        "summary": "Returns a zone",
        "operationId": "GET_Zones_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Zone id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Zone id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Limits the properties returned in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Indicates the related entities to be represented inline. The maximum depth is 4.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Orders the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Select a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips a limited number of results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Count the resources in the result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Zones/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:52.225Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.225Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Zones/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:52.225Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.225Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Zones"
        ],
        "summary": "Updates a zone",
        "operationId": "PUT_Zones_Sync",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Zone id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Zone id",
              "nullable": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "X-Nonce",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Site",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Zone resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zone"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:52.229Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:52.229Z",
                    "DataType": "String"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Zone"
              },
              "example": {
                "Id": "string",
                "CompanyId": "string",
                "Code": 0,
                "Name": "string",
                "Timestamp": "2021-02-25T14:44:52.229Z",
                "ExtendedProperties": [
                  {
                    "Id": "string",
                    "Value": "string",
                    "MaxLength": 0,
                    "DecimalPlaces": 0,
                    "Timestamp": "2021-02-25T14:44:52.229Z",
                    "DataType": "String"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Zones/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:52.229Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.229Z",
                      "DataType": "String"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "@odata.context": "https://sage200.sage.es/api/$metadata#Zones/$entity",
                  "Id": "string",
                  "CompanyId": "string",
                  "Code": 0,
                  "Name": "string",
                  "Timestamp": "2021-02-25T14:44:52.229Z",
                  "ExtendedProperties": [
                    {
                      "Id": "string",
                      "Value": "string",
                      "MaxLength": 0,
                      "DecimalPlaces": 0,
                      "Timestamp": "2021-02-25T14:44:52.229Z",
                      "DataType": "String"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ValidationError",
                      "message": "The http header \"X-Site\" was not found"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ExpiredToken",
                      "message": "The oauth token is expired and is not valid anymore."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequiredScope",
                      "message": "User does not have permission to perform this action."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "ResourceNotFound",
                      "message": "The resource was not found"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "RequestEntityTooLarge",
                      "message": "The onpremise service cannot handle the request because the payload exceeds the size allowed."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "TooManyRequests",
                      "message": "Rate limit is exceeded. Try again in 5 seconds."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "InternalServerError",
                      "message": "An unexpected error occurred while processing request."
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OnPremiseUnavailable",
                      "message": "The onpremise service is disconnected or unreachable."
                    }
                  ]
                }
              }
            }
          },
          "524": {
            "description": "Origin Time-out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "diagnosis": [
                    {
                      "errorCode": "OriginTimeout",
                      "message": "API is currently unavailable - typically due to a scheduled outage - try again soon"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DataType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - String\r\n* `2` - Integer\r\n* `3` - Boolean\r\n* `4` - Decimal\r\n* `5` - Date\r\n* `6` - Datetime\r\n",
        "format": "int32"
      },
      "ExtendedProperty": {
        "required": [
          "Id"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Extended property unique identifier (key)",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "description": "Extended property key's associated value",
            "nullable": true
          },
          "MaxLength": {
            "maxLength": 9,
            "type": "integer",
            "description": "Maximum length allowed for the value",
            "format": "int32"
          },
          "DecimalPlaces": {
            "maxLength": 9,
            "type": "integer",
            "description": "Decimal places (when applies) to be used for the value",
            "format": "int32"
          },
          "Timestamp": {
            "type": "string",
            "description": "Extended property last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "DataType": {
            "$ref": "#/components/schemas/DataType"
          }
        },
        "additionalProperties": false,
        "description": "Generic extended properties structure, to support customizations or future usages."
      },
      "Bank": {
        "required": [
          "Code",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique bank identifier",
            "nullable": true
          },
          "Code": {
            "maxLength": 6,
            "type": "string",
            "description": "Bank code within the application",
            "nullable": true
          },
          "Name": {
            "maxLength": 50,
            "type": "string",
            "description": "Bank name",
            "nullable": true
          },
          "BICCode": {
            "maxLength": 11,
            "type": "string",
            "description": "Bank Identifier Code (BIC)",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Bank last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Banks management across the whole application globally."
      },
      "Void": {
        "type": "object",
        "additionalProperties": false
      },
      "City": {
        "required": [
          "Code",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique city identifier",
            "nullable": true
          },
          "Code": {
            "maxLength": 7,
            "type": "string",
            "description": "City code within the application",
            "nullable": true
          },
          "Name": {
            "maxLength": 25,
            "type": "string",
            "description": "City name",
            "nullable": true
          },
          "RegionId": {
            "maxLength": 128,
            "type": "string",
            "description": "Region unique identifier where the city is located",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "City last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Cities management across the whole application globally."
      },
      "Colour": {
        "required": [
          "Code",
          "CompanyId",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique colour identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the colour belongs to",
            "nullable": true
          },
          "Code": {
            "maxLength": 10,
            "type": "string",
            "description": "Colour code within the application",
            "nullable": true
          },
          "Name": {
            "maxLength": 35,
            "type": "string",
            "description": "Colour name",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Colour last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Colour definition and management."
      },
      "TaxNumberType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - TaxID\r\n* `2` - EuropeanTaxId\r\n* `3` - Passport\r\n* `4` - OfficialID\r\n* `5` - ResidenceCertificate\r\n* `6` - Other\r\n",
        "format": "int32"
      },
      "AddressType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - Main\r\n* `2` - Delivery\r\n* `3` - Commercial\r\n* `4` - Billing\r\n* `5` - Others\r\n",
        "format": "int32"
      },
      "StreetType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - Village\r\n* `2` - Mall\r\n* `3` - Apartment\r\n* `4` - Avenue\r\n* `5` - Block\r\n* `6` - Neighbourhood\r\n* `7` - Chalet\r\n* `8` - Street\r\n* `9` - Path\r\n* `10` - Cologne\r\n* `11` - Highway\r\n* `12` - Hamlet\r\n* `13` - Hill\r\n* `14` - Building\r\n* `15` - Roundabout\r\n* `16` - Group\r\n* `17` - Place\r\n* `18` - Market\r\n* `19` - Town\r\n* `20` - CityBlock\r\n* `21` - BusinessArea\r\n* `22` - Passage\r\n* `23` - Park\r\n* `24` - Extension\r\n* `25` - Ride\r\n* `26` - Square\r\n* `27` - Round\r\n* `28` - Crossing\r\n* `29` - Urbanization\r\n* `30` - Other\r\n",
        "format": "int32"
      },
      "Address": {
        "required": [
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique address identifier",
            "nullable": true
          },
          "FullAddress": {
            "maxLength": 40,
            "type": "string",
            "description": "Full address",
            "nullable": true
          },
          "Street": {
            "maxLength": 40,
            "type": "string",
            "description": "Street name",
            "nullable": true
          },
          "Number": {
            "maxLength": 4,
            "type": "string",
            "description": "Street number",
            "nullable": true
          },
          "Letter": {
            "maxLength": 2,
            "type": "string",
            "description": "Floor letter",
            "nullable": true
          },
          "Stair": {
            "maxLength": 2,
            "type": "string",
            "description": "Address stair",
            "nullable": true
          },
          "Floor": {
            "maxLength": 2,
            "type": "string",
            "description": "Address floor",
            "nullable": true
          },
          "Door": {
            "maxLength": 2,
            "type": "string",
            "description": "Address door",
            "nullable": true
          },
          "CountryId": {
            "maxLength": 128,
            "type": "string",
            "description": "Country unique identifier where the address is located",
            "nullable": true
          },
          "Country": {
            "maxLength": 25,
            "type": "string",
            "description": "Country name where the address is located",
            "nullable": true
          },
          "RegionId": {
            "maxLength": 128,
            "type": "string",
            "description": "Region unique identifier where the address is located",
            "nullable": true
          },
          "Region": {
            "maxLength": 20,
            "type": "string",
            "description": "Region name where the address is located",
            "nullable": true
          },
          "PostalCode": {
            "maxLength": 8,
            "type": "string",
            "description": "Postal code or ZIP code",
            "nullable": true
          },
          "CityId": {
            "maxLength": 128,
            "type": "string",
            "description": "City unique identifier where the address is located",
            "nullable": true
          },
          "City": {
            "maxLength": 25,
            "type": "string",
            "description": "City name where the address is located",
            "nullable": true
          },
          "Email": {
            "maxLength": 250,
            "type": "string",
            "description": "Email address associated with this physical address",
            "nullable": true
          },
          "Telephone": {
            "maxLength": 15,
            "type": "string",
            "description": "Telephone number",
            "nullable": true
          },
          "Mobile": {
            "maxLength": 15,
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true
          },
          "Fax": {
            "maxLength": 15,
            "type": "string",
            "description": "Fax number associated with this physical address",
            "nullable": true
          },
          "AddressName": {
            "maxLength": 40,
            "type": "string",
            "description": "Address name",
            "nullable": true
          },
          "AlternativeBusinessName": {
            "maxLength": 40,
            "type": "string",
            "description": "Business alternative name (customer, company, bank, …), if any",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Address last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "Type": {
            "$ref": "#/components/schemas/AddressType"
          },
          "StreetType": {
            "$ref": "#/components/schemas/StreetType"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Address details."
      },
      "BankAccount": {
        "required": [
          "BankId",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique bank account identifier",
            "nullable": true
          },
          "BankId": {
            "maxLength": 128,
            "type": "string",
            "description": "Bank unique identifier which the account belongs to",
            "nullable": true
          },
          "Name": {
            "maxLength": 50,
            "type": "string",
            "description": "Bank account name",
            "nullable": true
          },
          "IBAN": {
            "maxLength": 34,
            "type": "string",
            "description": "International Bank Account Number (IBAN) of bank account",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Bank account last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Bank accounts details."
      },
      "Company": {
        "required": [
          "Code",
          "Id",
          "TaxNumber",
          "TaxNumberType",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique company identifier",
            "nullable": true
          },
          "Code": {
            "maxLength": 5,
            "type": "string",
            "description": "Company code within the application",
            "nullable": true
          },
          "Name": {
            "maxLength": 45,
            "type": "string",
            "description": "Company commercial name",
            "nullable": true
          },
          "TaxNumber": {
            "maxLength": 128,
            "type": "string",
            "description": "Company tax number",
            "nullable": true
          },
          "EconomicalActivity": {
            "maxLength": 5,
            "type": "string",
            "description": "National Classification of Economical Activity (CNAE) code or National Classification of Occupations (CNO)",
            "nullable": true
          },
          "CompanyAdministrator": {
            "maxLength": 42,
            "type": "string",
            "description": "Company administrator name",
            "nullable": true
          },
          "Logo": {
            "type": "string",
            "description": "Company logo (Base64 format)",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Company last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "TaxNumberType": {
            "$ref": "#/components/schemas/TaxNumberType"
          },
          "Addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": "Company addresses list",
            "nullable": true
          },
          "BankAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankAccount"
            },
            "description": "Company bank accounts list",
            "nullable": true
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Companies, with their addresses and bank accounts."
      },
      "Country": {
        "required": [
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique country identifier",
            "nullable": true
          },
          "Code": {
            "maxLength": 3,
            "type": "integer",
            "description": "Country code within the application",
            "format": "int32"
          },
          "ISOCode": {
            "maxLength": 3,
            "type": "string",
            "description": "ISO code of the country (ISO 3166-1 Alpha-3 code)",
            "nullable": true
          },
          "Name": {
            "maxLength": 25,
            "type": "string",
            "description": "Country name",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Country last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Countries management across the whole application globally."
      },
      "Currency": {
        "required": [
          "Code",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique currency identifier",
            "nullable": true
          },
          "Code": {
            "maxLength": 3,
            "type": "string",
            "description": "Currency code within the application",
            "nullable": true
          },
          "Name": {
            "maxLength": 35,
            "type": "string",
            "description": "Currency name",
            "nullable": true
          },
          "CurrentRate": {
            "type": "number",
            "description": "Current currency exchange rate",
            "format": "double"
          },
          "DecimalPlaces": {
            "maxLength": 1,
            "type": "integer",
            "description": "Decimal places to be applied when any amount expressed in this currency should be shown",
            "format": "int32"
          },
          "Timestamp": {
            "type": "string",
            "description": "Currency last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Currencies management across the whole application globally."
      },
      "CustomerGroup": {
        "required": [
          "Code",
          "CompanyId",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique customer group identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the customer group belongs to",
            "nullable": true
          },
          "Code": {
            "maxLength": 3,
            "type": "string",
            "description": "Customer group code within the application",
            "nullable": true
          },
          "Name": {
            "maxLength": 30,
            "type": "string",
            "description": "Customer group name",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Customer group last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Customer groups management."
      },
      "CustomerType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - Customer\r\n* `2` - Lead\r\n* `3` - Reference\r\n",
        "format": "int32"
      },
      "TaxType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - General\r\n* `2` - EuropeanUnion\r\n* `3` - Exempt\r\n* `4` - ImportExport\r\n* `5` - Surcharge\r\n",
        "format": "int32"
      },
      "PaymentMethod": {
        "required": [
          "Code",
          "CompanyId",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique payment method identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the payment method belongs to",
            "nullable": true
          },
          "Code": {
            "maxLength": 4,
            "type": "integer",
            "description": "Payment method code within the application",
            "format": "int32"
          },
          "Name": {
            "maxLength": 35,
            "type": "string",
            "description": "Payment method name",
            "nullable": true
          },
          "Instalments": {
            "maxLength": 2,
            "type": "integer",
            "description": "Number of instalments",
            "format": "int32"
          },
          "FirstInstalmentDay": {
            "maxLength": 2,
            "type": "integer",
            "description": "Number of days for first instalment",
            "format": "int32"
          },
          "DaysBetweenInstalments": {
            "maxLength": 2,
            "type": "integer",
            "description": "Number of days between instalments",
            "format": "int32"
          },
          "Timestamp": {
            "type": "string",
            "description": "Payment method last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Payment method types management."
      },
      "Contact": {
        "required": [
          "Id",
          "Name",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique contact identifier",
            "nullable": true
          },
          "Name": {
            "maxLength": 50,
            "type": "string",
            "description": "Contact name",
            "nullable": true
          },
          "AddressId": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique identifier of address to which the contact belongs",
            "nullable": true
          },
          "Email": {
            "maxLength": 250,
            "type": "string",
            "description": "Email associated with this contact",
            "nullable": true
          },
          "Telephone": {
            "maxLength": 15,
            "type": "string",
            "description": "Telephone number associated with this contact",
            "nullable": true
          },
          "Mobile": {
            "maxLength": 15,
            "type": "string",
            "description": "Mobile phone number associated with this contact",
            "nullable": true
          },
          "Fax": {
            "maxLength": 15,
            "type": "string",
            "description": "Fax number associated with this contact",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Contact last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contact person details management."
      },
      "Customer": {
        "required": [
          "CompanyId",
          "CustomerType",
          "Id",
          "TaxNumber",
          "TaxNumberType",
          "TaxType",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique customer identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the customer belongs to",
            "nullable": true
          },
          "Name": {
            "maxLength": 35,
            "type": "string",
            "description": "Customer name",
            "nullable": true
          },
          "BusinessName": {
            "maxLength": 40,
            "type": "string",
            "description": "Business name or trade name",
            "nullable": true
          },
          "CommercialName": {
            "maxLength": 40,
            "type": "string",
            "description": "Customer commercial name",
            "nullable": true
          },
          "Code": {
            "maxLength": 15,
            "type": "string",
            "description": "Client code within the application. if you don't fill in the field, the counter is used",
            "nullable": true
          },
          "Active": {
            "type": "boolean",
            "description": "Indicates whether the customer is marked as active within the application or not"
          },
          "TaxNumber": {
            "maxLength": 13,
            "type": "string",
            "description": "Customer tax number, optional for Lead or Reference",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "Any note or comment associated with the customer",
            "nullable": true
          },
          "FinancialLimit": {
            "type": "number",
            "description": "Financial limit stablished for this customer",
            "format": "double"
          },
          "VATTaxRateId": {
            "maxLength": 128,
            "type": "string",
            "description": "VAT tax rate type unique identifier associated with the customer",
            "nullable": true
          },
          "ProductPriceRateId": {
            "maxLength": 128,
            "type": "string",
            "description": "Default product price rate associated with the customer",
            "nullable": true
          },
          "ProductDiscountRateId": {
            "maxLength": 128,
            "type": "string",
            "description": "Default product discount rate associated with the customer",
            "nullable": true
          },
          "DiscountPercentRate": {
            "type": "number",
            "description": "Customer discount percent rate",
            "format": "double"
          },
          "RappelDiscountPercentRate": {
            "type": "number",
            "description": "Customer discount percent rate by rappel",
            "format": "double"
          },
          "PaymentMethodDiscountRate": {
            "type": "number",
            "description": "Customer discount rate associated to the payment method",
            "format": "double"
          },
          "RouteId": {
            "maxLength": 128,
            "type": "string",
            "description": "Route unique identifier where the customer is located (associated)",
            "nullable": true
          },
          "ZoneId": {
            "maxLength": 128,
            "type": "string",
            "description": "Zone unique identifier where the customer belongs to",
            "nullable": true
          },
          "SalesPersonId": {
            "maxLength": 128,
            "type": "string",
            "description": "Main sales person unique identifier associated with the customer",
            "nullable": true
          },
          "CommissionRate": {
            "type": "number",
            "description": "Customer percent commission rate",
            "format": "double"
          },
          "LegalRepresentativeName": {
            "maxLength": 40,
            "type": "string",
            "description": "Customer's legal representative name",
            "nullable": true
          },
          "CustomerGroupId": {
            "maxLength": 128,
            "type": "string",
            "description": "Group unique identifier which the customer belongs to",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Customer last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "TaxNumberType": {
            "$ref": "#/components/schemas/TaxNumberType"
          },
          "CustomerType": {
            "$ref": "#/components/schemas/CustomerType"
          },
          "TaxType": {
            "$ref": "#/components/schemas/TaxType"
          },
          "PaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "Contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            },
            "description": "Customer contact names list",
            "nullable": true
          },
          "Addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": "Customer addresses list",
            "nullable": true
          },
          "BankAccount": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Customer management, including all their details (addresses, bank accounts, …)."
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Detail": {
            "type": "string",
            "nullable": true
          },
          "Instance": {
            "type": "string",
            "nullable": true
          },
          "Extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IncomeTaxRateType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - NotProvided\r\n* `2` - EmployeesCashReturn\r\n* `3` - EmployeesKindReturn\r\n* `4` - TrainingAndConferences\r\n* `5` - FarmingAcvitivitiesCashReturn\r\n* `6` - FarmingAcvitivitiesKindReturn\r\n* `7` - ProfessionalActivitiesCashReturn\r\n* `8` - ProfessionalActivitiesKindReturn\r\n* `9` - LeasesCashReturn\r\n* `10` - LeasesKindReturn\r\n",
        "format": "int32"
      },
      "IncomeTaxRate": {
        "required": [
          "Code",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique income tax rate identifier",
            "nullable": true
          },
          "Code": {
            "maxLength": 5,
            "type": "integer",
            "description": "Income tax rate type code within the application",
            "format": "int32"
          },
          "Name": {
            "maxLength": 50,
            "type": "string",
            "description": "Income tax rate type name",
            "nullable": true
          },
          "TaxRate": {
            "type": "number",
            "description": "Income tax type rate",
            "format": "double"
          },
          "Timestamp": {
            "type": "string",
            "description": "Income tax rate type last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "Type": {
            "$ref": "#/components/schemas/IncomeTaxRateType"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Income tax rates management."
      },
      "ProductSubfamily": {
        "required": [
          "Code",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique product subfamily identifier",
            "nullable": true
          },
          "Code": {
            "maxLength": 10,
            "type": "string",
            "description": "Product subfamily code within the application",
            "nullable": true
          },
          "Name": {
            "maxLength": 250,
            "type": "string",
            "description": "Product subfamily name",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Product subfamily last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product subfamilies management."
      },
      "ProductFamily": {
        "required": [
          "Code",
          "CompanyId",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique product family identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the product family belongs to",
            "nullable": true
          },
          "Code": {
            "maxLength": 10,
            "type": "string",
            "description": "Product family code within the application",
            "nullable": true
          },
          "Name": {
            "maxLength": 250,
            "type": "string",
            "description": "Product family name",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Product family last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "Subfamilies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSubfamily"
            },
            "description": "Product family associated subfamilies list",
            "nullable": true
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product families and associated subfamilies management."
      },
      "MeasureUnit": {
        "required": [
          "Id",
          "Name",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique measure unit identifier",
            "nullable": true
          },
          "Name": {
            "maxLength": 10,
            "type": "string",
            "description": "Measure unit name",
            "nullable": true
          },
          "ConversionFactor": {
            "type": "number",
            "description": "Conversion factor to be applied when operating from one measure unit to another",
            "format": "double"
          },
          "Timestamp": {
            "type": "string",
            "description": "Measure unit last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product measure units management."
      },
      "ProductKitComponent": {
        "required": [
          "Id",
          "ProductId",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique product component identifier",
            "nullable": true
          },
          "ProductId": {
            "maxLength": 128,
            "type": "string",
            "description": "Component kit product unique identifier",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "description": "Product quantity in the product kit",
            "format": "double"
          },
          "QuantityMeasureUnit": {
            "type": "number",
            "description": "Product quantity in the product kit of measure unit",
            "format": "double"
          },
          "ProductSizeId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product size unique identifier",
            "nullable": true
          },
          "ColourId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product colour unique identifier",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Product kit component last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "MeasureUnit": {
            "$ref": "#/components/schemas/MeasureUnit"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product kit components definition and management."
      },
      "ProductKit": {
        "required": [
          "Code",
          "CompanyId",
          "Id",
          "ProductId",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique product kit identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the product kit belongs to",
            "nullable": true
          },
          "Code": {
            "maxLength": 2,
            "type": "integer",
            "description": "Product kit code within the application",
            "format": "int32"
          },
          "Description": {
            "maxLength": 50,
            "type": "string",
            "description": "Product kit description",
            "nullable": true
          },
          "ProductId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product unique identifier representing the kit",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "description": "Minimun units that should be sold of this product kit",
            "format": "double"
          },
          "QuantityMeasureUnit": {
            "type": "number",
            "description": "Minimun units that should be sold of this product kit of measure unit",
            "format": "double"
          },
          "ColourId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product kit colour unique identifier",
            "nullable": true
          },
          "BlockStock": {
            "type": "boolean",
            "description": "To block stock"
          },
          "DetailProductKitComponentQuote": {
            "type": "boolean",
            "description": "break down components into quote"
          },
          "DetailProductKitComponentOrder": {
            "type": "boolean",
            "description": "break down components into order"
          },
          "DetailProductKitComponentDeliveryNote": {
            "type": "boolean",
            "description": "break down components into delivery note"
          },
          "PriceProductKitComponent0": {
            "type": "boolean",
            "description": "Price Unit of Product kit component to 0"
          },
          "Timestamp": {
            "type": "string",
            "description": "Product kit last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "MeasureUnit": {
            "$ref": "#/components/schemas/MeasureUnit"
          },
          "Components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductKitComponent"
            },
            "description": "Product kit components list",
            "nullable": true
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product kits definition management."
      },
      "ProductPack": {
        "required": [
          "Code",
          "CompanyId",
          "Id",
          "ProductId",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique product pack identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the product pack belongs to",
            "nullable": true
          },
          "Code": {
            "maxLength": 9,
            "type": "integer",
            "description": "Product pack code within the application",
            "format": "int32"
          },
          "AlternativeCode": {
            "maxLength": 20,
            "type": "string",
            "description": "Product pack alternative code",
            "nullable": true
          },
          "ProductId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product unique identifier which the product pack is composed with",
            "nullable": true
          },
          "Name": {
            "maxLength": 40,
            "type": "string",
            "description": "Product pack name",
            "nullable": true
          },
          "ShortDescription": {
            "maxLength": 40,
            "type": "string",
            "description": "Product pack short description",
            "nullable": true
          },
          "LongDescription": {
            "type": "string",
            "description": "Product pack long description",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "description": "Base product quantity to be included in the product pack",
            "format": "double"
          },
          "DiscountRate": {
            "type": "number",
            "description": "Product pack discount rate",
            "format": "double"
          },
          "Discount2Rate": {
            "type": "number",
            "description": "Product pack discount rate",
            "format": "double"
          },
          "Discount3Rate": {
            "type": "number",
            "description": "Product pack discount rate",
            "format": "double"
          },
          "MeasureUnitId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product pack measure unit",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Product pack last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product packs definition management."
      },
      "ProductPicture": {
        "required": [
          "CompanyId",
          "Id",
          "ProductId",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique product picture identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the product picture belongs to",
            "nullable": true
          },
          "ProductId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product unique identifier which the picture is associated with",
            "nullable": true
          },
          "Description": {
            "maxLength": 400,
            "type": "string",
            "description": "Product picture associated description",
            "nullable": true
          },
          "Picture": {
            "type": "string",
            "description": "Product picture (Base64 format)",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Product picture last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product pictures management."
      },
      "ProductPriceOffer": {
        "required": [
          "CompanyId",
          "Id",
          "ProductId",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique product price offer entry identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the product price offer belongs to",
            "nullable": true
          },
          "ProductId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product unique identifier which the price offer is associated with",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "description": "Product price offer effective starting date (UTC format according to calendar dates representations described in the ISO 8601, following the format YYYY-MM-DD, example 2019-11-23)",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "description": "Product price rate effective ending date (UTC format according to calendar dates representations described in the ISO 8601, following the format YYYY-MM-DD, example 2019-11-23)",
            "format": "date-time"
          },
          "MinimumUnitsForOffer": {
            "type": "number",
            "description": "Minimum product units that should be bought to apply this price offer",
            "format": "double"
          },
          "MinimumUnitsForGift": {
            "type": "number",
            "description": "Minimum product units that should be bought to get the product gift associated with this price offer",
            "format": "double"
          },
          "GiftProductId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product unique identifier that will be offered as a promotion gift",
            "nullable": true
          },
          "Price": {
            "type": "number",
            "description": "Price without taxes for this price offer",
            "format": "double"
          },
          "DiscountRate": {
            "type": "number",
            "description": "Discount rate to be applied with this price offer",
            "format": "double"
          },
          "ApplyDiscount": {
            "type": "boolean",
            "description": "Indicates whether the discount rate should be applied or just the take directly the specified price"
          },
          "Timestamp": {
            "type": "string",
            "description": "Product price offer last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product prices offer definition management."
      },
      "ProductPricePolicyType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - DirectPrice\r\n* `2` - Percentage\r\n* `3` - IncreaseValue\r\n",
        "format": "int32"
      },
      "ProductPriceCondition": {
        "required": [
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique product price entry condition identifier",
            "nullable": true
          },
          "UpToUnits": {
            "type": "number",
            "description": "Number of product units to which this price rate may apply",
            "format": "double"
          },
          "FromSizeId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product size unique identifier from which this price rate can be applied",
            "nullable": true
          },
          "ToSizeId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product size unique identifier to which this price rate can be applied",
            "nullable": true
          },
          "ColourId": {
            "maxLength": 128,
            "type": "string",
            "description": "Colour unique identifier of the product for this product price rate condition",
            "nullable": true
          },
          "Price": {
            "type": "number",
            "description": "Price without taxes for this price rate",
            "format": "double"
          },
          "DiscountRate": {
            "type": "number",
            "description": "Discount rate to be applied with this price rate",
            "format": "double"
          },
          "Discount2Rate": {
            "type": "number",
            "description": "Discount 2 rate to be applied with this price rate",
            "format": "double"
          },
          "Discount3Rate": {
            "type": "number",
            "description": "Discount 3 rate to be applied with this price rate",
            "format": "double"
          },
          "Timestamp": {
            "type": "string",
            "description": "Product price condition record last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product prices condition definition and management."
      },
      "ProductPriceRate": {
        "required": [
          "CompanyId",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique product price entry identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the product price belongs to",
            "nullable": true
          },
          "Source": {
            "maxLength": 128,
            "type": "string",
            "description": "Origin of the record within the application.",
            "nullable": true
          },
          "RateId": {
            "maxLength": 128,
            "type": "string",
            "description": "Rate unique identifier who this price rate applies to",
            "nullable": true
          },
          "ProductId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product unique identifier which the price rate is associated with",
            "nullable": true
          },
          "ProductRateName": {
            "maxLength": 20,
            "type": "string",
            "description": "Product rate name",
            "nullable": true
          },
          "Active": {
            "type": "boolean",
            "description": "Indicates whether this product price rate is active or not"
          },
          "CustomerId": {
            "maxLength": 128,
            "type": "string",
            "description": "Customer unique identifier who this price rate applies to",
            "nullable": true
          },
          "ProductFamilyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product family unique identifier which this price rate applies to",
            "nullable": true
          },
          "ProductSubfamilyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product Subfamily unique identifier which this price rate applies to",
            "nullable": true
          },
          "ProductPackId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product pack unique identifier which this price rate applies to",
            "nullable": true
          },
          "CurrencyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Currency unique identifier associated with this price rate",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "description": "Product price rate effective starting date (UTC format according to calendar dates representations described in the ISO 8601, following the format YYYY-MM-DD, example 2019-11-23)",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "description": "Product price rate effective ending date (UTC format according to calendar dates representations described in the ISO 8601, following the format YYYY-MM-DD, example 2019-11-23)",
            "format": "date-time"
          },
          "Timestamp": {
            "type": "string",
            "description": "Product price rate last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "PricePolicy": {
            "$ref": "#/components/schemas/ProductPricePolicyType"
          },
          "PriceConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPriceCondition"
            },
            "description": "Price conditions list to be applied over this price rate",
            "nullable": true
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product price rates management."
      },
      "ProductType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - Material\r\n* `2` - NonMaterial\r\n* `3` - Comment\r\n",
        "format": "int32"
      },
      "Product": {
        "required": [
          "Code",
          "CompanyId",
          "Id",
          "Timestamp",
          "Type"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique product identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the product belongs to",
            "nullable": true
          },
          "Code": {
            "maxLength": 20,
            "type": "string",
            "description": "Product code within the application",
            "nullable": true
          },
          "Name": {
            "maxLength": 50,
            "type": "string",
            "description": "Product name",
            "nullable": true
          },
          "Description": {
            "maxLength": 40,
            "type": "string",
            "description": "Product long description",
            "nullable": true
          },
          "Active": {
            "type": "boolean",
            "description": "Indicates whether the product is marked as active within the application or not"
          },
          "Barcode": {
            "maxLength": 20,
            "type": "string",
            "description": "Product barcode (supported formats: Code 39, Code 93, Interleaved 2 of 5, Codebar, UPC-A, UPC-A+2, UPC-A+5, UPC-E, UPC-E+2, UPC-E+5, EAN-13, EAN-13+2, EAN-13+5, EAN-8, EAN-8+2, EAN-8+5, EAN-128A, EAN-128B, EAN-128C)",
            "nullable": true
          },
          "VATTaxRateId": {
            "maxLength": 128,
            "type": "string",
            "description": "VAT tax rate type unique identifier associated with the product",
            "nullable": true
          },
          "SalesPriceIncludingTaxes": {
            "type": "boolean",
            "description": "Indicates whether the sales price associated with the product includes taxes or if it's just the net price without taxes applied"
          },
          "CostPrice": {
            "type": "number",
            "description": "Product cost price",
            "format": "double"
          },
          "SalesPrice": {
            "type": "number",
            "description": "Product sales price",
            "format": "double"
          },
          "DiscountRate": {
            "type": "number",
            "description": "Product discount percent rate",
            "format": "double"
          },
          "Discount2Rate": {
            "type": "number",
            "description": "Product discount2 percent rate",
            "format": "double"
          },
          "Discount3Rate": {
            "type": "number",
            "description": "Product discount3 percent rate",
            "format": "double"
          },
          "CurrencyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Currency unique identifier associated with the product price",
            "nullable": true
          },
          "FamilyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Family unique identifier which the product belongs to",
            "nullable": true
          },
          "SubfamilyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Subfamily unique identifier which the product belongs to, according to the family given",
            "nullable": true
          },
          "Brand": {
            "maxLength": 20,
            "type": "string",
            "description": "Product brand name",
            "nullable": true
          },
          "SeasonId": {
            "maxLength": 128,
            "type": "string",
            "description": "Season unique identifier which the product is associated to",
            "nullable": true
          },
          "BasicMeasureUnitId": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique identifier of the basic unit of measure. Mandatory if the product uses units of measure",
            "nullable": true
          },
          "AlternativeMeasureUnitId": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique identifier of alternative unit of measure. Mandatory if the product uses simplified type units of measurement",
            "nullable": true
          },
          "PurchasesMeasureUnitId": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique identifier of purchases unit of measure",
            "nullable": true
          },
          "SalesMeasureUnitId": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique identifier of sales unit of measure",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "Any note or comment associated with the product",
            "nullable": true
          },
          "IsInternetPublishable": {
            "type": "boolean",
            "description": "Indicates whether the product is marked as publishable on the Internet or not"
          },
          "IsKit": {
            "type": "boolean",
            "description": "Indicates whether the product is a kit composed by a set of other different product references or not"
          },
          "UseSizes": {
            "type": "boolean",
            "description": "Indicates whether the product could be available in different sizes or not"
          },
          "SizeGroupId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product size group unique identifier which the product is associated to",
            "nullable": true
          },
          "UseColours": {
            "type": "boolean",
            "description": "Indicates whether the product could be available in different colours or not"
          },
          "UseSerialNumbers": {
            "type": "boolean",
            "description": "Indicates whether the product should support a serial number for each product instance or not"
          },
          "UseConsignment": {
            "type": "boolean",
            "description": "Indicates whether the product should support consignment information or not"
          },
          "Timestamp": {
            "type": "string",
            "description": "Product last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "Type": {
            "$ref": "#/components/schemas/ProductType"
          },
          "ProductMeasureUnits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasureUnit"
            },
            "description": "Measure units list associated with products",
            "nullable": true
          },
          "Colours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Colour"
            },
            "description": "List of colours associated with the product",
            "nullable": true
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product management with all their details including properties definition."
      },
      "ProductSeason": {
        "required": [
          "Code",
          "CompanyId",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique product season identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the product season belongs to",
            "nullable": true
          },
          "Code": {
            "maxLength": 10,
            "type": "string",
            "description": "Product season code within the application",
            "nullable": true
          },
          "Description": {
            "maxLength": 35,
            "type": "string",
            "description": "Product season description",
            "nullable": true
          },
          "StartDay": {
            "maxLength": 2,
            "type": "integer",
            "description": "Product season starting day",
            "format": "int32"
          },
          "StartMonth": {
            "maxLength": 2,
            "type": "integer",
            "description": "Product season stating month",
            "format": "int32"
          },
          "EndDay": {
            "maxLength": 2,
            "type": "integer",
            "description": "Product season ending day",
            "format": "int32"
          },
          "EndMonth": {
            "maxLength": 2,
            "type": "integer",
            "description": "Product season ending month",
            "format": "int32"
          },
          "Timestamp": {
            "type": "string",
            "description": "Product season last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Basic product seasons management."
      },
      "ProductSize": {
        "required": [
          "Code",
          "Id",
          "Position",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique product size identifier",
            "nullable": true
          },
          "Position": {
            "maxLength": 2,
            "type": "integer",
            "description": "Product size position within the whole product size group",
            "format": "int32"
          },
          "Code": {
            "maxLength": 10,
            "type": "string",
            "description": "Product size code",
            "nullable": true
          },
          "Description": {
            "maxLength": 40,
            "type": "string",
            "description": "Product size description",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Product size last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product sizes management, associated to any of the product size groups."
      },
      "ProductSizeGroup": {
        "required": [
          "Code",
          "CompanyId",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique product size group identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the product size group belongs to",
            "nullable": true
          },
          "Code": {
            "maxLength": 4,
            "type": "integer",
            "description": "Product size group code within the application",
            "format": "int32"
          },
          "Description": {
            "maxLength": 35,
            "type": "string",
            "description": "Product size group description",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Product size group last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "Sizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSize"
            },
            "description": "Sizes list contained in this product size group",
            "nullable": true
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product size groups management."
      },
      "SerialNumber": {
        "required": [
          "Code",
          "CompanyId",
          "Id",
          "ProductId",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique serial number identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the serial number is related to",
            "nullable": true
          },
          "Code": {
            "maxLength": 30,
            "type": "string",
            "description": "Serial number entry code within the application",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "description": "Date on which the serial number has been provided (UTC format according to calendar dates representations described in the ISO 8601, following the format YYYY-MM-DD, example 2019-11-23)",
            "format": "date-time"
          },
          "ProductId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product unique identifier which the serial number belongs to",
            "nullable": true
          },
          "ProductSizeId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product size unique identifier. Mandatory if the product uses size",
            "nullable": true
          },
          "ColourId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product colour unique identifier. Mandatory if the product uses colour",
            "nullable": true
          },
          "Consignment": {
            "maxLength": 15,
            "type": "string",
            "description": "Product consignment",
            "nullable": true
          },
          "StoreId": {
            "maxLength": 128,
            "type": "string",
            "description": "Store unique identifier where the product is located",
            "nullable": true
          },
          "Number": {
            "maxLength": 30,
            "type": "string",
            "description": "The serial number itself",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Serial number last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "MeasureUnit": {
            "$ref": "#/components/schemas/MeasureUnit"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Serial numbers management."
      },
      "ProductStock": {
        "required": [
          "CompanyId",
          "Id",
          "ProductId",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique product stock entry identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which this product stock entry belongs to",
            "nullable": true
          },
          "StoreId": {
            "maxLength": 128,
            "type": "string",
            "description": "Store unique identifier where the product is located. Mandatory if the company uses Stores",
            "nullable": true
          },
          "ProductId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product unique identifier referred in this stock record",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "description": "Product units in this stock record",
            "format": "double"
          },
          "QuantityPendingToBeReceived": {
            "type": "number",
            "description": "Product units pending to be received",
            "format": "double"
          },
          "QuantityPendingToBeServed": {
            "type": "number",
            "description": "Product units pending to be served",
            "format": "double"
          },
          "QuantityReserved": {
            "type": "number",
            "description": "Product units reserved",
            "format": "double"
          },
          "QuantityPendingToBeProduced": {
            "type": "number",
            "description": "Product units pending to be produced",
            "format": "double"
          },
          "QuantityReservedOrders": {
            "type": "number",
            "description": "Product units reserved to be orders",
            "format": "double"
          },
          "QuantityVirtual": {
            "type": "number",
            "description": "Product units virtual",
            "format": "double"
          },
          "QuantityAvailable": {
            "type": "number",
            "description": "Product units available",
            "format": "double"
          },
          "CostPriceAverage": {
            "type": "number",
            "description": "Product stock record average cost price",
            "format": "double"
          },
          "ProductSizeId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product size unique identifier. Mandatory if the product uses size",
            "nullable": true
          },
          "ColourId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product colour unique identifier. Mandatory if the product uses colour",
            "nullable": true
          },
          "Consignment": {
            "maxLength": 15,
            "type": "string",
            "description": "Product consignment",
            "nullable": true
          },
          "ExpirationDate": {
            "type": "string",
            "description": "Expiration date",
            "format": "date-time"
          },
          "Timestamp": {
            "type": "string",
            "description": "Product stock entry last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ProductSerialNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SerialNumber"
            },
            "description": "Product serial numbers list involved in this stock movement. Mandatory if the product uses serial number",
            "nullable": true
          },
          "MeasureUnit": {
            "$ref": "#/components/schemas/MeasureUnit"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Products stock management."
      },
      "Rate": {
        "required": [
          "Code",
          "CompanyId",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique rate identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the Rates belongs to",
            "nullable": true
          },
          "Code": {
            "maxLength": 3,
            "type": "integer",
            "description": "Rate code within the application",
            "format": "int32"
          },
          "Name": {
            "maxLength": 25,
            "type": "string",
            "description": "Rate name",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Rate last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Rates management."
      },
      "Region": {
        "required": [
          "Code",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique region identifier",
            "nullable": true
          },
          "Code": {
            "maxLength": 5,
            "type": "string",
            "description": "Region code within the application",
            "nullable": true
          },
          "Name": {
            "maxLength": 20,
            "type": "string",
            "description": "Region name",
            "nullable": true
          },
          "CountryId": {
            "maxLength": 128,
            "type": "string",
            "description": "Country unique identifier where the region is located",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Region last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Regions management across the whole application globally."
      },
      "Route": {
        "required": [
          "Code",
          "CompanyId",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique zone identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the route belongs to",
            "nullable": true
          },
          "Code": {
            "maxLength": 10,
            "type": "string",
            "description": "Route code within the application",
            "nullable": true
          },
          "Name": {
            "maxLength": 30,
            "type": "string",
            "description": "Route name",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Route last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Routes management across the whole application globally."
      },
      "SalesDocumentStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - Pending\r\n* `2` - Processed\r\n* `3` - Locked\r\n",
        "format": "int32"
      },
      "TransactionType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - General\r\n* `2` - Import\r\n* `3` - Export\r\n* `4` - ReverseCharge\r\n* `5` - NonTaxable\r\n",
        "format": "int32"
      },
      "SalesDocumentTaxesDetailLine": {
        "required": [
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique sales document detail tax line identifier",
            "nullable": true
          },
          "Base": {
            "type": "number",
            "description": "Tax detail line base amount",
            "format": "double"
          },
          "VATTaxRate": {
            "type": "number",
            "description": "Tax detail line VAT rate",
            "format": "double"
          },
          "VATTAxAmount": {
            "type": "number",
            "description": "Tax detail line total VAT amount",
            "format": "double"
          },
          "SurchargeTaxRate": {
            "type": "number",
            "description": "Tax detail line surcharge tax rate",
            "format": "double"
          },
          "SurchargeTaxAmount": {
            "type": "number",
            "description": "Tax detail line total surcharge amount",
            "format": "double"
          },
          "TotalTaxesAmount": {
            "type": "number",
            "description": "Tax detail line total amount of taxes",
            "format": "double"
          },
          "Timestamp": {
            "type": "string",
            "description": "Sales document tax line last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "TransactionType": {
            "$ref": "#/components/schemas/TransactionType"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Taxes definition lines for sales documents."
      },
      "SalesDocumentSizesColoursDetailLine": {
        "required": [
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique sales document size and colour line identifier",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "description": "Product units in this sales quote sales document size and colour line",
            "format": "double"
          },
          "Price": {
            "type": "number",
            "description": "Sales price in this sales quote document size and colour line",
            "format": "double"
          },
          "ProductSizeId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product size unique identifier in this sales quote document size and colour line. Mandatory if the product uses size",
            "nullable": true
          },
          "ColourId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product colour unique identifier in this sales quote document size and colour line. Mandatory if the product uses colour",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Sales order line last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "detail of sizes and colors in the lines."
      },
      "SalesDeliveryNoteLine": {
        "required": [
          "Id",
          "ProductId",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique sales delivery note line identifier",
            "nullable": true
          },
          "SalesOrderLineId": {
            "maxLength": 128,
            "type": "string",
            "description": "Sales order line unique identifier which this sales delivery note line is related to",
            "nullable": true
          },
          "ProductId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product unique identifier which the document line is related to",
            "nullable": true
          },
          "ProductPackId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product pack unique identifier which this sales delivery note line is related to",
            "nullable": true
          },
          "Position": {
            "type": "integer",
            "description": "Presentation order for this order line among the rest in the sales delivery note",
            "format": "int32"
          },
          "ProductDescription": {
            "maxLength": 50,
            "type": "string",
            "description": "Product description in the sales delivery note",
            "nullable": true
          },
          "ProductLongDescription": {
            "type": "string",
            "description": "Product long description in the sales delivery note",
            "nullable": true
          },
          "ProductSizeId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product size unique identifier. Mandatory if the product uses size and only one size per line",
            "nullable": true
          },
          "ColourId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product colour unique identifier. Mandatory if the product colour size and only one colour per line",
            "nullable": true
          },
          "Consignment": {
            "maxLength": 15,
            "type": "string",
            "description": "Product consignment",
            "nullable": true
          },
          "ExpirationDate": {
            "type": "string",
            "description": "Expiration date",
            "format": "date-time"
          },
          "StoreId": {
            "maxLength": 128,
            "type": "string",
            "description": "Store unique identifier where the product is located. Mandatory if the company uses Stores",
            "nullable": true
          },
          "SalesPersonId": {
            "maxLength": 128,
            "type": "string",
            "description": "Sales person unique identifier whom the sales delivery note line is associated with",
            "nullable": true
          },
          "VATTaxRate": {
            "type": "number",
            "description": "Product VAT tax rate to be applied in this sales delivery note line",
            "format": "double"
          },
          "SurchargeTaxRate": {
            "type": "number",
            "description": "Product surcharge tax rate to be applied in this sales delivery note line",
            "format": "double"
          },
          "Quantity": {
            "type": "number",
            "description": "Sales delivery note line product units",
            "format": "double"
          },
          "QuantityMeasureUnit": {
            "type": "number",
            "description": "Product units of measure unit in this sales delivery notes document line",
            "format": "double"
          },
          "Price": {
            "type": "number",
            "description": "Sales delivery note total line price",
            "format": "double"
          },
          "ProductDiscountRate": {
            "type": "number",
            "description": "Product discount rate to be applied in this sales delivery note line",
            "format": "double"
          },
          "ProductDiscount2Rate": {
            "type": "number",
            "description": "Discount2 rate to be applied associated with the product in this sales delivery note document line",
            "format": "double"
          },
          "ProductDiscount3Rate": {
            "type": "number",
            "description": "Discount3 rate to be applied associated with the product in this sales delivery note document line",
            "format": "double"
          },
          "ProductDiscountAmount": {
            "type": "number",
            "description": "Product discount amount to be applied in this sales delivery note line",
            "format": "double"
          },
          "CommissionRate": {
            "type": "number",
            "description": "Product commission rate in this sales delivery note line",
            "format": "double"
          },
          "CommissionAmount": {
            "type": "number",
            "description": "Product commission amount in this sales delivery note line",
            "format": "double"
          },
          "VATIncluded": {
            "type": "boolean",
            "description": "Indicates whether prices in the sales delivery note line are VAT included or not"
          },
          "TotalNet": {
            "type": "number",
            "description": "Sales delivery note line total net",
            "format": "double"
          },
          "VATTaxAmount": {
            "type": "number",
            "description": "Sales delivery note line total VAT tax amount",
            "format": "double"
          },
          "SurchargeTaxAmount": {
            "type": "number",
            "description": "Sales delivery note line total surcharge tax amount",
            "format": "double"
          },
          "Total": {
            "type": "number",
            "description": "Sales delivery note line total amount",
            "format": "double"
          },
          "Timestamp": {
            "type": "string",
            "description": "Sales delivery note line last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "SalesDocumentSizesColoursDetailLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesDocumentSizesColoursDetailLine"
            },
            "description": "List of sizes and colours in the sales delivery note document. Mandatory if the product uses sizes or colours for a single line",
            "nullable": true
          },
          "MeasureUnit": {
            "$ref": "#/components/schemas/MeasureUnit"
          },
          "ProductSerialNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SerialNumber"
            },
            "description": "Product serial number unique identifier referred in the sales invoice line. Mandatory if the product uses serial number",
            "nullable": true
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sales delivery notes lines definition."
      },
      "AdvancePayment": {
        "required": [
          "Amount",
          "Date",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique advance payment identifier",
            "nullable": true
          },
          "Amount": {
            "type": "number",
            "description": "Total amount payed in advance",
            "format": "double"
          },
          "Date": {
            "type": "string",
            "description": "Payment date (UTC format according to calendar dates representations described in the ISO 8601, following the format YYYY-MM-DD, example 2019-11-23)",
            "format": "date-time"
          },
          "Timestamp": {
            "type": "string",
            "description": "Advance payment last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Advance payments definition."
      },
      "SalesDeliveryNote": {
        "required": [
          "CompanyId",
          "CustomerId",
          "Id",
          "Lines",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique sales delivery note identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the sales delivery note belongs to",
            "nullable": true
          },
          "Serie": {
            "maxLength": 10,
            "type": "string",
            "description": "Sales delivery note serial",
            "nullable": true
          },
          "Number": {
            "type": "integer",
            "description": "Sales delivery note number. if you don't fill in the field, the counter is used",
            "format": "int32"
          },
          "Period": {
            "maxLength": 4,
            "type": "integer",
            "description": "Financial period which the sales delivery note is associated with",
            "format": "int32"
          },
          "IssueDate": {
            "type": "string",
            "description": "Delivery note Issue date (UTC format according to calendar dates representations described in the ISO 8601, following the format YYYY-MM-DD, example 2019-11-23)",
            "format": "date-time"
          },
          "CustomerId": {
            "maxLength": 128,
            "type": "string",
            "description": "Customer unique identifier who placed the sales delivery note",
            "nullable": true
          },
          "CustomerName": {
            "maxLength": 35,
            "type": "string",
            "description": "Customer name who placed the sales delivery note",
            "nullable": true
          },
          "CustomerCommercialName": {
            "maxLength": 40,
            "type": "string",
            "description": "Commercial customer name who placed the sales delivery note",
            "nullable": true
          },
          "CustomerBusinessName": {
            "maxLength": 40,
            "type": "string",
            "description": "Business customer name who placed the sales delivery note",
            "nullable": true
          },
          "InvoiceAddressId": {
            "maxLength": 128,
            "type": "string",
            "description": "Invoice address unique identifier which the sales delivery notes",
            "nullable": true
          },
          "PaymentAddressId": {
            "maxLength": 128,
            "type": "string",
            "description": "Payment address unique identifier which the sales delivery notes",
            "nullable": true
          },
          "CurrencyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Currency unique identifier which the sales delivery note has been placed",
            "nullable": true
          },
          "CurrencyChangeRate": {
            "type": "number",
            "description": "Currency change rate applied when the sales delivery note was placed",
            "format": "double"
          },
          "VATIncluded": {
            "type": "boolean",
            "description": "Indicates whether prices in the sales delivery note are VAT included or not"
          },
          "SalesPersonId": {
            "maxLength": 128,
            "type": "string",
            "description": "Sales person unique identifier whom the sales delivery note is associated with",
            "nullable": true
          },
          "CommissionRate": {
            "type": "number",
            "description": "Sales delivery note commission percent rate",
            "format": "double"
          },
          "CommissionAmount": {
            "type": "number",
            "description": "Sales delivery note commission amount",
            "format": "double"
          },
          "DiscountRate": {
            "type": "number",
            "description": "Sales delivery note discount percent rate",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "description": "Sales delivery note discount amount",
            "format": "double"
          },
          "DiscountPaymentMethodRate": {
            "type": "number",
            "description": "Payment method discount rate related to be applied for this sales delivery note",
            "format": "double"
          },
          "DiscountPaymentMethodAmount": {
            "type": "number",
            "description": "Payment method discount amount related to be applied for this sales delivery note",
            "format": "double"
          },
          "DiscountRappelRate": {
            "type": "number",
            "description": "Rappel discount rate related to be applied for this sales delivery note",
            "format": "double"
          },
          "DiscountRappelAmount": {
            "type": "number",
            "description": "Rappel discount amount related to be applied for this sales delivery note",
            "format": "double"
          },
          "IncomeTaxRateId": {
            "maxLength": 128,
            "type": "string",
            "description": "Income tax rate unique identifier to be applied for this sales delivery note",
            "nullable": true
          },
          "IncomeTaxRate": {
            "type": "number",
            "description": "Sales delivery note Income tax rate",
            "format": "double"
          },
          "IncomeTaxAmount": {
            "type": "number",
            "description": "Sales delivery note income tax amount",
            "format": "double"
          },
          "ExternalSalesOrderNumber": {
            "maxLength": 15,
            "type": "string",
            "description": "Sales order document number, when originally generated from a third party application",
            "nullable": true
          },
          "ProductPriceRateId": {
            "maxLength": 128,
            "type": "string",
            "description": "Base product rate unique identifier to be applied",
            "nullable": true
          },
          "ProductDiscountRateId": {
            "maxLength": 128,
            "type": "string",
            "description": "Base product discount rate unique identifier to be applied",
            "nullable": true
          },
          "TotalCharges": {
            "type": "number",
            "description": "Sales delivery note total charges amount",
            "format": "double"
          },
          "TotalDiscount": {
            "type": "number",
            "description": "Sales delivery note total discount amount",
            "format": "double"
          },
          "TotalNet": {
            "type": "number",
            "description": "Sales delivery note total net",
            "format": "double"
          },
          "TotalTaxes": {
            "type": "number",
            "description": "Sales delivery note total taxes",
            "format": "double"
          },
          "Total": {
            "type": "number",
            "description": "Sales delivery note total",
            "format": "double"
          },
          "Notes": {
            "type": "string",
            "description": "Any note or comments associated with the sales delivery note",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Sales delivery note last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "Status": {
            "$ref": "#/components/schemas/SalesDocumentStatus"
          },
          "TaxType": {
            "$ref": "#/components/schemas/TaxType"
          },
          "Taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesDocumentTaxesDetailLine"
            },
            "description": "Taxes details list summarizing all different tax rates involved in the sales delivery note",
            "nullable": true
          },
          "CustomerAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "DeliveryAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "PaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "Lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesDeliveryNoteLine"
            },
            "description": "Document lines list with all details in the sales delivery note",
            "nullable": true
          },
          "AdvancePayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdvancePayment"
            },
            "description": "Advance payments list paid related with this sales delivery note",
            "nullable": true
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sales delivery notes management."
      },
      "SalesInvoiceType": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - Invoice\r\n* `2` - RefundInvoice\r\n* `3` - SimplifiedInvoice\r\n* `4` - RefundSimplifiedInvoice\r\n",
        "format": "int32"
      },
      "SalesReceiptStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - Pending\r\n* `2` - Paid\r\n* `3` - Refunded\r\n",
        "format": "int32"
      },
      "SalesReceipt": {
        "required": [
          "CompanyId",
          "DueDate",
          "Id",
          "IssueDate",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique sales receipt identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the sales receipt belongs to",
            "nullable": true
          },
          "SalesInvoiceId": {
            "maxLength": 128,
            "type": "string",
            "description": "Sales invoice unique identifier which this sales receipt is related to",
            "nullable": true
          },
          "Order": {
            "type": "integer",
            "description": "Sales receipt counter",
            "format": "int32"
          },
          "IssueDate": {
            "type": "string",
            "description": "Sales receipt issue date (UTC format according to calendar dates representations described in the ISO 8601, following the format YYYY-MM-DD, example 2019-11-23)",
            "format": "date-time"
          },
          "DueDate": {
            "type": "string",
            "description": "Sales receipt due date (UTC format according to calendar dates representations described in the ISO 8601, following the format YYYY-MM-DD, example 2019-11-23)",
            "format": "date-time"
          },
          "CustomerId": {
            "maxLength": 128,
            "type": "string",
            "description": "Customer unique identifier whom the sales receipt belongs to",
            "nullable": true
          },
          "IBAN": {
            "maxLength": 34,
            "type": "string",
            "description": "International Bank Account Number (IBAN) associated with the sales receipt",
            "nullable": true
          },
          "TotalAmount": {
            "type": "number",
            "description": "Sales receipt total amount",
            "format": "double"
          },
          "Description": {
            "maxLength": 40,
            "type": "string",
            "description": "Description or comments associated with the sales receipt",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Sales receipt last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "Status": {
            "$ref": "#/components/schemas/SalesReceiptStatus"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sales receipt management."
      },
      "SalesInvoiceLine": {
        "required": [
          "Id",
          "ProductId",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "The unique identifier of the delivery note lines to be invoiced must be reported",
            "nullable": true
          },
          "ProductId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product unique identifier which the document line is related to",
            "nullable": true
          },
          "ProductPackId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product pack unique identifier which this sales invoice line is related to",
            "nullable": true
          },
          "Position": {
            "type": "integer",
            "description": "Presentation order for this quote line among the rest in the sales invoice document",
            "format": "int32"
          },
          "ProductDescription": {
            "maxLength": 50,
            "type": "string",
            "description": "Product description in the sales invoice document",
            "nullable": true
          },
          "ProductLongDescription": {
            "type": "string",
            "description": "Product long description in the sales invoice document",
            "nullable": true
          },
          "ProductSizeId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product size unique identifier. Mandatory if the product uses size and only one size per line",
            "nullable": true
          },
          "ColourId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product colour unique identifier. Mandatory if the product colour size and only one colour per line",
            "nullable": true
          },
          "Consignment": {
            "maxLength": 15,
            "type": "string",
            "description": "Product consignment",
            "nullable": true
          },
          "ExpirationDate": {
            "type": "string",
            "description": "Expiration date",
            "format": "date-time"
          },
          "StoreId": {
            "maxLength": 128,
            "type": "string",
            "description": "Store unique identifier where the product is located",
            "nullable": true
          },
          "SalesPersonId": {
            "maxLength": 128,
            "type": "string",
            "description": "Sales person unique identifier whom the sales invoice line is associated with",
            "nullable": true
          },
          "VATTaxRate": {
            "type": "number",
            "description": "Sales invoice document line product VAT tax",
            "format": "double"
          },
          "SurchargeTaxRate": {
            "type": "number",
            "description": "Sales invoice document line surcharge tax rate",
            "format": "double"
          },
          "Quantity": {
            "type": "number",
            "description": "Sales invoice document line product units",
            "format": "double"
          },
          "QuantityMeasureUnit": {
            "type": "number",
            "description": "Product units of measure unit in this sales invoice document line",
            "format": "double"
          },
          "Price": {
            "type": "number",
            "description": "Sales invoice document line price",
            "format": "double"
          },
          "ProductDiscountRate": {
            "type": "number",
            "description": "Product discount rate to be applied in this sales invoice document line",
            "format": "double"
          },
          "ProductDiscount2Rate": {
            "type": "number",
            "description": "Discount2 rate to be applied associated with the product in this sales invoice document line",
            "format": "double"
          },
          "ProductDiscount3Rate": {
            "type": "number",
            "description": "Discount3 rate to be applied associated with the product in this sales invoice document line",
            "format": "double"
          },
          "ProductDiscountAmount": {
            "type": "number",
            "description": "Product discount amount to be applied in this sales invoice document line",
            "format": "double"
          },
          "CommissionRate": {
            "type": "number",
            "description": "Product commission rate in this sales quote document line",
            "format": "double"
          },
          "CommissionAmount": {
            "type": "number",
            "description": "Product commission amount in this sales invoice document line",
            "format": "double"
          },
          "VATIncluded": {
            "type": "boolean",
            "description": "Indicates whether prices in the sales invoice document line are VAT included or not"
          },
          "TotalNet": {
            "type": "number",
            "description": "Sales invoice document line total net",
            "format": "double"
          },
          "VATTaxAmount": {
            "type": "number",
            "description": "Sales invoice document line total VAT tax amount",
            "format": "double"
          },
          "SurchargeTaxAmount": {
            "type": "number",
            "description": "Sales invoice document line total surcharge tax amount",
            "format": "double"
          },
          "Total": {
            "type": "number",
            "description": "Sales invoice document line total amount",
            "format": "double"
          },
          "Timestamp": {
            "type": "string",
            "description": "Sales invoice line last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "SalesDocumentSizesColoursDetailLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesDocumentSizesColoursDetailLine"
            },
            "description": "List of sizes and colours in the sales invoice document. Mandatory if the product uses size or colours for a single line",
            "nullable": true
          },
          "MeasureUnit": {
            "$ref": "#/components/schemas/MeasureUnit"
          },
          "ProductSerialNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SerialNumber"
            },
            "description": "Product serial number unique identifier referred in the sales invoice line. Mandatory if the product uses serial number",
            "nullable": true
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sales invoice lines definition."
      },
      "SalesInvoiceCorrectionReasonCode": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - Code1\r\n* `2` - Code2\r\n* `3` - Code3\r\n* `4` - Code4\r\n* `5` - Code5\r\n* `6` - Code6\r\n* `7` - Code7\r\n* `8` - Code8\r\n* `9` - Code9\r\n* `10` - Code10\r\n* `11` - Code11\r\n* `12` - Code12\r\n* `13` - Code13\r\n* `14` - Code14\r\n* `15` - Code15\r\n* `16` - Code16\r\n* `17` - Code80\r\n* `18` - Code81\r\n* `19` - Code82\r\n* `20` - Code83\r\n* `21` - Code84\r\n* `22` - Code85\r\n",
        "format": "int32"
      },
      "SalesInvoiceCorrectionMethod": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - Method1\r\n* `2` - Method2\r\n* `3` - Method3\r\n* `4` - Method4\r\n",
        "format": "int32"
      },
      "SalesInvoiceCorrectiveDetail": {
        "required": [
          "CorrectionMethod",
          "Id",
          "ReasonCode",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique sales invoice correction line identifier",
            "nullable": true
          },
          "ReasonDescription": {
            "maxLength": 100,
            "type": "string",
            "description": "Description of the reason for correction according to the correction reason code",
            "nullable": true
          },
          "CorrectionMethodDescription": {
            "maxLength": 100,
            "type": "string",
            "description": "Correction method description",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Sales receipt last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ReasonCode": {
            "$ref": "#/components/schemas/SalesInvoiceCorrectionReasonCode"
          },
          "CorrectionMethod": {
            "$ref": "#/components/schemas/SalesInvoiceCorrectionMethod"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sales invoice corrective details definition."
      },
      "SalesInvoiceFiscalDetail": {
        "required": [
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique sales invoice fiscal detail line identifier",
            "nullable": true
          },
          "FullAddress": {
            "maxLength": 40,
            "type": "string",
            "description": "Full address",
            "nullable": true
          },
          "Street": {
            "maxLength": 40,
            "type": "string",
            "description": "Address street name",
            "nullable": true
          },
          "Number": {
            "maxLength": 4,
            "type": "string",
            "description": "Address street number",
            "nullable": true
          },
          "Letter": {
            "maxLength": 2,
            "type": "string",
            "description": "Address letter",
            "nullable": true
          },
          "Stair": {
            "maxLength": 2,
            "type": "string",
            "description": "Address stair",
            "nullable": true
          },
          "Floor": {
            "maxLength": 2,
            "type": "string",
            "description": "Address floor",
            "nullable": true
          },
          "Door": {
            "maxLength": 2,
            "type": "string",
            "description": "Address door",
            "nullable": true
          },
          "CountryId": {
            "maxLength": 128,
            "type": "string",
            "description": "Country unique identifier where the address is located",
            "nullable": true
          },
          "RegionId": {
            "maxLength": 128,
            "type": "string",
            "description": "Region unique identifier where the address is located",
            "nullable": true
          },
          "PostalCode": {
            "maxLength": 8,
            "type": "string",
            "description": "Postal code or ZIP code",
            "nullable": true
          },
          "CityId": {
            "maxLength": 128,
            "type": "string",
            "description": "City unique identifier where the address is located",
            "nullable": true
          },
          "Email": {
            "maxLength": 250,
            "type": "string",
            "description": "Email address associated with this physical address",
            "nullable": true
          },
          "Telephone": {
            "maxLength": 15,
            "type": "string",
            "description": "Telephone number",
            "nullable": true
          },
          "Mobile": {
            "maxLength": 15,
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true
          },
          "Fax": {
            "maxLength": 15,
            "type": "string",
            "description": "Fax number associated with this physical address",
            "nullable": true
          },
          "CustomerLegalRepresentativeName": {
            "maxLength": 40,
            "type": "string",
            "description": "Customer legal representative's name",
            "nullable": true
          },
          "CustomerLegalRepresentativeTaxNumber": {
            "maxLength": 13,
            "type": "string",
            "description": "customer Legal representative's tax number",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Sales invoice fiscal detail record last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "StreetType": {
            "$ref": "#/components/schemas/StreetType"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Fiscal detail lines definition for sales invoices."
      },
      "SalesInvoice": {
        "required": [
          "CompanyId",
          "CustomerId",
          "Id",
          "InvoiceType",
          "Lines",
          "TaxNumber",
          "TaxNumberType",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique sales invoice identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the sales invoice belongs to",
            "nullable": true
          },
          "Serie": {
            "maxLength": 10,
            "type": "string",
            "description": "Sales invoice document serial",
            "nullable": true
          },
          "Number": {
            "type": "integer",
            "description": "Sales invoice document number. if you don't fill in the field, the counter is used",
            "format": "int32"
          },
          "Period": {
            "maxLength": 4,
            "type": "integer",
            "description": "Financial period which the sales invoice is associated with",
            "format": "int32"
          },
          "IssueDate": {
            "type": "string",
            "description": "Sales invoice issue date (UTC format according to calendar dates representations described in the ISO 8601, following the format YYYY-MM-DD, example 2019-11-23)",
            "format": "date-time"
          },
          "CustomerId": {
            "maxLength": 128,
            "type": "string",
            "description": "Customer unique identifier who sales invoice belongs to",
            "nullable": true
          },
          "CustomerName": {
            "maxLength": 35,
            "type": "string",
            "description": "Customer name who placed the sales invoice",
            "nullable": true
          },
          "CustomerCommercialName": {
            "maxLength": 40,
            "type": "string",
            "description": "Commercial customer name who placed the sales invoice",
            "nullable": true
          },
          "CustomerBusinessName": {
            "maxLength": 40,
            "type": "string",
            "description": "Business customer name who placed the sales invoice",
            "nullable": true
          },
          "TaxNumber": {
            "maxLength": 13,
            "type": "string",
            "description": "Customer tax number",
            "nullable": true
          },
          "HasBeenPrinted": {
            "type": "boolean",
            "description": "Indicates whether the sales invoice has been printer or not"
          },
          "HasBeenSent": {
            "type": "boolean",
            "description": "Indicates whether the sales invoice has been sent or not"
          },
          "HasBeenSigned": {
            "type": "boolean",
            "description": "Indicates whether the sales invoice has been signed or not"
          },
          "PaymentAddressId": {
            "maxLength": 128,
            "type": "string",
            "description": "Payment address unique identifier which the sales invoice",
            "nullable": true
          },
          "CurrencyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Currency unique identifier which the sales invoice has been issued",
            "nullable": true
          },
          "CurrencyChangeRate": {
            "type": "number",
            "description": "Currency change rate applied when the sales invoice was issued",
            "format": "double"
          },
          "VATIncluded": {
            "type": "boolean",
            "description": "Indicates whether prices in the sales invoice are VAT included or not"
          },
          "SalesPersonId": {
            "maxLength": 128,
            "type": "string",
            "description": "Sales person unique identifier whom the sales invoice has been associated with",
            "nullable": true
          },
          "CommissionRate": {
            "type": "number",
            "description": "Sales invoice commission rate",
            "format": "double"
          },
          "CommissionAmount": {
            "type": "number",
            "description": "Sales invoice commission amount",
            "format": "double"
          },
          "DiscountRate": {
            "type": "number",
            "description": "Sales invoice discount rate",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "description": "Sales invoice discount amount",
            "format": "double"
          },
          "DiscountPaymentMethodRate": {
            "type": "number",
            "description": "Payment method discount rate related to be applied for the sales invoice",
            "format": "double"
          },
          "DiscountPaymentMethodAmount": {
            "type": "number",
            "description": "Payment method discount amount related to be applied for the sales invoice",
            "format": "double"
          },
          "DiscountRappelRate": {
            "type": "number",
            "description": "Rappel discount rate related to be applied for the sales invoice",
            "format": "double"
          },
          "DiscountRappelAmount": {
            "type": "number",
            "description": "Rappel discount amount related to be applied for the sales invoice",
            "format": "double"
          },
          "IncomeTaxRateId": {
            "maxLength": 128,
            "type": "string",
            "description": "Income tax rate unique identifier to be applied for this sales invoice",
            "nullable": true
          },
          "IncomeTaxRate": {
            "type": "number",
            "description": "Sales invoice income tax rate",
            "format": "double"
          },
          "IncomeTaxAmount": {
            "type": "number",
            "description": "Sales invoice income tax amount",
            "format": "double"
          },
          "TotalCharges": {
            "type": "number",
            "description": "Sales invoice total charges amount",
            "format": "double"
          },
          "TotalDiscount": {
            "type": "number",
            "description": "Sales invoice total discount amount",
            "format": "double"
          },
          "TotalNet": {
            "type": "number",
            "description": "Sales invoice total net",
            "format": "double"
          },
          "TotalTaxes": {
            "type": "number",
            "description": "Sales invoice total taxes",
            "format": "double"
          },
          "Total": {
            "type": "number",
            "description": "Sales invoice total",
            "format": "double"
          },
          "Notes": {
            "type": "string",
            "description": "Any note or comments associated with the sales invoice",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Sales invoice last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "TaxNumberType": {
            "$ref": "#/components/schemas/TaxNumberType"
          },
          "InvoiceType": {
            "$ref": "#/components/schemas/SalesInvoiceType"
          },
          "TaxType": {
            "$ref": "#/components/schemas/TaxType"
          },
          "Receipts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesReceipt"
            },
            "description": "Receipts list associated with the payments related with the sales invoices",
            "nullable": true
          },
          "CustomerAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "PaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "Lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesInvoiceLine"
            },
            "description": "Document lines list with all details in the sales invoice document",
            "nullable": true
          },
          "Taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesDocumentTaxesDetailLine"
            },
            "description": "Taxes details list summarizing all different tax rates involved in the sales invoice document",
            "nullable": true
          },
          "CorrectiveDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesInvoiceCorrectiveDetail"
            },
            "description": "Corrective details list associated with the sales invoice document",
            "nullable": true
          },
          "FiscalDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesInvoiceFiscalDetail"
            },
            "description": "Fiscal details list associated with the sales invoice document",
            "nullable": true
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sales invoices management."
      },
      "SalesOrderLine": {
        "required": [
          "Id",
          "ProductId",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique sales order document line identifier",
            "nullable": true
          },
          "ProductId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product unique identifier which the document line is related to",
            "nullable": true
          },
          "ProductPackId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product pack unique identifier which this sales order line is related to",
            "nullable": true
          },
          "Position": {
            "type": "integer",
            "description": "Presentation order for this order line among the rest in the sales order document",
            "format": "int32"
          },
          "ProductDescription": {
            "maxLength": 50,
            "type": "string",
            "description": "Product description in the sales order document",
            "nullable": true
          },
          "ProductLongDescription": {
            "type": "string",
            "description": "Product long description in the sales order document",
            "nullable": true
          },
          "ProductSizeId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product size unique identifier. Mandatory if the product uses size and only one size per line",
            "nullable": true
          },
          "ColourId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product colour unique identifier. Mandatory if the product colour size and only one colour per line",
            "nullable": true
          },
          "Consignment": {
            "maxLength": 15,
            "type": "string",
            "description": "Product consignment",
            "nullable": true
          },
          "ExpirationDate": {
            "type": "string",
            "description": "Expiration date",
            "format": "date-time"
          },
          "StoreId": {
            "maxLength": 128,
            "type": "string",
            "description": "Store unique identifier where the product is located. Mandatory if the company uses Stores",
            "nullable": true
          },
          "SalesPersonId": {
            "maxLength": 128,
            "type": "string",
            "description": "Sales person unique identifier whom the sales delivery note line is associated with",
            "nullable": true
          },
          "VATTaxRate": {
            "type": "number",
            "description": "VAT tax rate to be applied to the product in this sales order document line",
            "format": "double"
          },
          "SurchargeTaxRate": {
            "type": "number",
            "description": "Surcharge tax percent rate to be applied to the product in this sales order document line",
            "format": "double"
          },
          "Quantity": {
            "type": "number",
            "description": "Product units in this sales order document line",
            "format": "double"
          },
          "QuantityMeasureUnit": {
            "type": "number",
            "description": "Product units of measure unit in this sales order document line",
            "format": "double"
          },
          "Price": {
            "type": "number",
            "description": "Sales price for the total product units in this sales order document line",
            "format": "double"
          },
          "ProductDiscountRate": {
            "type": "number",
            "description": "Product discount rate to be applied in this sales order document line",
            "format": "double"
          },
          "ProductDiscount2Rate": {
            "type": "number",
            "description": "Discount2 rate to be applied associated with the product in this sales order document line",
            "format": "double"
          },
          "ProductDiscount3Rate": {
            "type": "number",
            "description": "Discount3 rate to be applied associated with the product in this sales order document line",
            "format": "double"
          },
          "ProductDiscountAmount": {
            "type": "number",
            "description": "Product discount amount in this sales order document line",
            "format": "double"
          },
          "CommissionRate": {
            "type": "number",
            "description": "Product commission rate in this sales order document line",
            "format": "double"
          },
          "CommissionAmount": {
            "type": "number",
            "description": "Product commission amount in this sales order document line",
            "format": "double"
          },
          "VATIncluded": {
            "type": "boolean",
            "description": "Indicates whether prices in the sales order document line are VAT included or not"
          },
          "TotalNet": {
            "type": "number",
            "description": "Sales order document line total net",
            "format": "double"
          },
          "VATTaxAmount": {
            "type": "number",
            "description": "Sales order document line total VAT tax amount",
            "format": "double"
          },
          "SurchargeTaxAmount": {
            "type": "number",
            "description": "Sales order document line total surcharge tax amount",
            "format": "double"
          },
          "Total": {
            "type": "number",
            "description": "Sales order document line total amount",
            "format": "double"
          },
          "Timestamp": {
            "type": "string",
            "description": "Sales order line last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "SalesDocumentSizesColoursDetailLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesDocumentSizesColoursDetailLine"
            },
            "description": "List of sizes and colours in the sales order document. Mandatory if the product uses sizes or colours for a single line",
            "nullable": true
          },
          "MeasureUnit": {
            "$ref": "#/components/schemas/MeasureUnit"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sales order lines definition."
      },
      "SalesOrder": {
        "required": [
          "CompanyId",
          "CustomerId",
          "Id",
          "Lines",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique sales order identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the sales order belongs to",
            "nullable": true
          },
          "Serie": {
            "maxLength": 10,
            "type": "string",
            "description": "Sales order document serial",
            "nullable": true
          },
          "Number": {
            "type": "integer",
            "description": "Sales order document number. if you don't fill in the field, the counter is used",
            "format": "int32"
          },
          "Period": {
            "maxLength": 4,
            "type": "integer",
            "description": "Financial period which the sales order is associated with",
            "format": "int32"
          },
          "IssueDate": {
            "type": "string",
            "description": "Sales order issue date (UTC format according to calendar dates representations described in the ISO 8601, following the format YYYY-MM-DD, example 2019-11-23)",
            "format": "date-time"
          },
          "CustomerId": {
            "maxLength": 128,
            "type": "string",
            "description": "Customer unique identifier who placed the sales order",
            "nullable": true
          },
          "CustomerName": {
            "maxLength": 35,
            "type": "string",
            "description": "Customer name who placed the sales order",
            "nullable": true
          },
          "CustomerBusinessName": {
            "maxLength": 40,
            "type": "string",
            "description": "Commercial customer name who placed the sales order",
            "nullable": true
          },
          "CustomerCommercialName": {
            "maxLength": 40,
            "type": "string",
            "description": "Business customer name who placed the sales order",
            "nullable": true
          },
          "DeliveryDate": {
            "type": "string",
            "description": "Sales order delivery date (UTC format according to calendar dates representations described in the ISO 8601, following the format YYYY-MM-DD, example 2019-11-23)",
            "format": "date-time"
          },
          "DeliveryAddressId": {
            "maxLength": 128,
            "type": "string",
            "description": "Delivery address unique identifier which the sales order",
            "nullable": true
          },
          "InvoiceAddressId": {
            "maxLength": 128,
            "type": "string",
            "description": "Invoice address unique identifier which the sales order",
            "nullable": true
          },
          "PaymentAddressId": {
            "maxLength": 128,
            "type": "string",
            "description": "Payment address unique identifier which the sales order",
            "nullable": true
          },
          "CurrencyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Currency unique identifier which the sales order has been placed",
            "nullable": true
          },
          "CurrencyChangeRate": {
            "type": "number",
            "description": "Currency change rate applied when the sales order was placed",
            "format": "double"
          },
          "VATIncluded": {
            "type": "boolean",
            "description": "Indicates whether prices in the sales order are VAT included or not"
          },
          "SalesPersonId": {
            "maxLength": 128,
            "type": "string",
            "description": "Sales person unique identifier whom the sales order has been placed by",
            "nullable": true
          },
          "CommissionRate": {
            "type": "number",
            "description": "Sales order commission rate",
            "format": "double"
          },
          "CommissionAmount": {
            "type": "number",
            "description": "Sales order commission amount",
            "format": "double"
          },
          "DiscountRate": {
            "type": "number",
            "description": "Sales order discount rate",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "description": "Sales order discount amount",
            "format": "double"
          },
          "DiscountPaymentMethodRate": {
            "type": "number",
            "description": "Payment method discount related to be applied for this sales order",
            "format": "double"
          },
          "DiscountPaymentMethodAmount": {
            "type": "number",
            "description": "Payment method related to be applied for this sales order",
            "format": "double"
          },
          "DiscountRappelRate": {
            "type": "number",
            "description": "Rappel discount rate to be applied for this sales order",
            "format": "double"
          },
          "DiscountRappelAmount": {
            "type": "number",
            "description": "Rappel discount amount to be applied for this sales order",
            "format": "double"
          },
          "IncomeTaxRateId": {
            "maxLength": 128,
            "type": "string",
            "description": "Income tax rate unique identifier to be applied for this sales order",
            "nullable": true
          },
          "IncomeTaxRate": {
            "type": "number",
            "description": "Sales order income tax rate",
            "format": "double"
          },
          "IncomeTaxAmount": {
            "type": "number",
            "description": "Sales order income tax amount",
            "format": "double"
          },
          "ExternalSalesOrderNumber": {
            "maxLength": 15,
            "type": "string",
            "description": "Sales order document number, when originally generated from a third party application",
            "nullable": true
          },
          "ProductPriceRateId": {
            "maxLength": 128,
            "type": "string",
            "description": "Base product price rate unique identifier to be applied",
            "nullable": true
          },
          "ProductDiscountRateId": {
            "maxLength": 128,
            "type": "string",
            "description": "Base product discount rate unique identifier to be applied",
            "nullable": true
          },
          "TotalDiscount": {
            "type": "number",
            "description": "Sales order total discount amount",
            "format": "double"
          },
          "TotalNet": {
            "type": "number",
            "description": "Sales order total net",
            "format": "double"
          },
          "TotalTaxes": {
            "type": "number",
            "description": "Sales order total taxes",
            "format": "double"
          },
          "Total": {
            "type": "number",
            "description": "Sales order total",
            "format": "double"
          },
          "Notes": {
            "type": "string",
            "description": "Any note or comments associated with the sales order",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Sales order document last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "Status": {
            "$ref": "#/components/schemas/SalesDocumentStatus"
          },
          "TaxType": {
            "$ref": "#/components/schemas/TaxType"
          },
          "CustomerAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "PaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "Lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesOrderLine"
            },
            "description": "Document lines list with all details in the sales order document",
            "nullable": true
          },
          "Taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesDocumentTaxesDetailLine"
            },
            "description": "Taxes details list summarizing all different tax rates involved in the sales order document",
            "nullable": true
          },
          "AdvancePayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdvancePayment"
            },
            "description": "Advance payments list paid related with this sales order",
            "nullable": true
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sales orders management."
      },
      "SalesPayment": {
        "required": [
          "CompanyId",
          "Id",
          "ReceiptId",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique sales payment identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the sales payment belongs to",
            "nullable": true
          },
          "ReceiptId": {
            "maxLength": 128,
            "type": "string",
            "description": "Sales invoice unique identifier which this sales receipt is related to",
            "nullable": true
          },
          "IssueDate": {
            "type": "string",
            "description": "Sales payment Issue date (UTC format according to calendar dates representations described in the ISO 8601, following the format YYYY-MM-DD, example 2019-11-23)",
            "format": "date-time"
          },
          "TotalAmount": {
            "type": "number",
            "description": "Sales payment total amount",
            "format": "double"
          },
          "Timestamp": {
            "type": "string",
            "description": "Sales payment last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sales payments management."
      },
      "SalesPerson": {
        "required": [
          "Code",
          "CompanyId",
          "Id",
          "TaxNumber",
          "TaxNumberType",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique sales person identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the sales person belongs to",
            "nullable": true
          },
          "Code": {
            "maxLength": 10,
            "type": "string",
            "description": "Sales person code within the application",
            "nullable": true
          },
          "Active": {
            "type": "boolean",
            "description": "Indicates whether the sales person is marked as active within the application or not"
          },
          "Name": {
            "maxLength": 25,
            "type": "string",
            "description": "Sales person name",
            "nullable": true
          },
          "CommissionRate": {
            "type": "number",
            "description": "Commission rate assigned to this sales person",
            "format": "double"
          },
          "TaxNumber": {
            "maxLength": 13,
            "type": "string",
            "description": "Sales person tax number",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Sales person last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "TaxNumberType": {
            "$ref": "#/components/schemas/TaxNumberType"
          },
          "Address": {
            "$ref": "#/components/schemas/Address"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sales persons management."
      },
      "SalesQuoteLine": {
        "required": [
          "Id",
          "ProductId",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique sales quote document line identifier",
            "nullable": true
          },
          "ProductId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product unique identifier which the document line is related to",
            "nullable": true
          },
          "ProductPackId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product pack unique identifier which this sales quote line is related to",
            "nullable": true
          },
          "Position": {
            "type": "integer",
            "description": "Presentation order for this quote line among the rest in the sales quote document",
            "format": "int32"
          },
          "ProductDescription": {
            "maxLength": 50,
            "type": "string",
            "description": "Product description in the sales quote document",
            "nullable": true
          },
          "ProductLongDescription": {
            "type": "string",
            "description": "Product long description in the sales quote document",
            "nullable": true
          },
          "ProductSizeId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product size unique identifier. Mandatory if the product uses size and only one size per line",
            "nullable": true
          },
          "ColourId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product colour unique identifier. Mandatory if the product colour size and only one colour per line",
            "nullable": true
          },
          "Consignment": {
            "maxLength": 15,
            "type": "string",
            "description": "Product consignment",
            "nullable": true
          },
          "ExpirationDate": {
            "type": "string",
            "description": "Expiration date",
            "format": "date-time"
          },
          "StoreId": {
            "maxLength": 128,
            "type": "string",
            "description": "Store unique identifier where the product is located. Mandatory if the company uses Stores",
            "nullable": true
          },
          "SalesPersonId": {
            "maxLength": 128,
            "type": "string",
            "description": "Sales person unique identifier whom the sales quote line is associated with",
            "nullable": true
          },
          "VATTaxRate": {
            "type": "number",
            "description": "VAT tax rate to be applied to the product in this sales quote document line",
            "format": "double"
          },
          "SurchargeTaxRate": {
            "type": "number",
            "description": "Surcharge tax rate to be applied to the product in this sales quote document line",
            "format": "double"
          },
          "Quantity": {
            "type": "number",
            "description": "Product units in this sales quote document line",
            "format": "double"
          },
          "QuantityMeasureUnit": {
            "type": "number",
            "description": "Product units of measure unit in this sales quote document line",
            "format": "double"
          },
          "Price": {
            "type": "number",
            "description": "Sales price for the total product units in this sales quote document line",
            "format": "double"
          },
          "ProductDiscountRate": {
            "type": "number",
            "description": "Discount rate to be applied associated with the product in this sales quote document line",
            "format": "double"
          },
          "ProductDiscount2Rate": {
            "type": "number",
            "description": "Discount2 rate to be applied associated with the product in this sales quote document line",
            "format": "double"
          },
          "ProductDiscount3Rate": {
            "type": "number",
            "description": "Discount3 rate to be applied associated with the product in this sales quote document line",
            "format": "double"
          },
          "ProductDiscountAmount": {
            "type": "number",
            "description": "Discount amount associated with the product in this sales quote document line",
            "format": "double"
          },
          "CommissionRate": {
            "type": "number",
            "description": "Sales quote document line commission rate",
            "format": "double"
          },
          "CommissionAmount": {
            "type": "number",
            "description": "Sales quote document line commission amount",
            "format": "double"
          },
          "VATIncluded": {
            "type": "boolean",
            "description": "Indicates whether prices in the sales quote document line are VAT included or not"
          },
          "TotalNet": {
            "type": "number",
            "description": "Sales quote document line total net",
            "format": "double"
          },
          "VATTaxAmount": {
            "type": "number",
            "description": "Sales quotes document line total VAT amount",
            "format": "double"
          },
          "SurchargeTaxAmount": {
            "type": "number",
            "description": "Sales quote document line Total surcharge tax amount",
            "format": "double"
          },
          "Total": {
            "type": "number",
            "description": "Sales quote document line total amount",
            "format": "double"
          },
          "Timestamp": {
            "type": "string",
            "description": "Sales quote line last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "SalesDocumentSizesColoursDetailLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesDocumentSizesColoursDetailLine"
            },
            "description": "List of sizes and colours in the sales quote document. Mandatory if the product uses sizes or colours for a single line",
            "nullable": true
          },
          "MeasureUnit": {
            "$ref": "#/components/schemas/MeasureUnit"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sales quote lines definition."
      },
      "SalesQuote": {
        "required": [
          "CompanyId",
          "Id",
          "Lines",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique sales quote identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the sales quote belongs to",
            "nullable": true
          },
          "Serie": {
            "maxLength": 10,
            "type": "string",
            "description": "Sales quote document serial",
            "nullable": true
          },
          "Number": {
            "type": "integer",
            "description": "Sales quote document number.  if you don't fill in the field, the counter is used",
            "format": "int32"
          },
          "Period": {
            "maxLength": 4,
            "type": "integer",
            "description": "Financial period which the sales quote is associated with",
            "format": "int32"
          },
          "IssueDate": {
            "type": "string",
            "description": "Sales quote issue date (UTC format according to calendar dates representations described in the ISO 8601, following the format YYYY-MM-DD, example 2019-11-23)",
            "format": "date-time"
          },
          "CustomerId": {
            "maxLength": 128,
            "type": "string",
            "description": "Customer unique identifier who the sales quote belongs to",
            "nullable": true
          },
          "CustomerName": {
            "maxLength": 35,
            "type": "string",
            "description": "Customer name who placed the sales quotes",
            "nullable": true
          },
          "CustomerCommercialName": {
            "maxLength": 40,
            "type": "string",
            "description": "Commercial customer name who placed the sales quotes",
            "nullable": true
          },
          "CustomerBusinessName": {
            "maxLength": 40,
            "type": "string",
            "description": "Business customer name who placed the sales quotes",
            "nullable": true
          },
          "ApprovalDate": {
            "type": "string",
            "description": "Sales quote approval date (UTC format according to calendar dates representations described in the ISO 8601, following the format YYYY-MM-DD, example 2019-11-23)",
            "format": "date-time"
          },
          "HasBeenApproved": {
            "type": "boolean",
            "description": "Indicates whether the sales quote has been approved or not"
          },
          "DeliveryAddressId": {
            "maxLength": 128,
            "type": "string",
            "description": "Delivery address unique identifier which the sales quotes",
            "nullable": true
          },
          "InvoiceAddressId": {
            "maxLength": 128,
            "type": "string",
            "description": "Invoice address unique identifier which the sales quotes",
            "nullable": true
          },
          "PaymentAddressId": {
            "maxLength": 128,
            "type": "string",
            "description": "Payment address unique identifier which the sales quotes",
            "nullable": true
          },
          "CurrencyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Currency unique identifier which the sales quote has been placed",
            "nullable": true
          },
          "CurrencyChangeRate": {
            "type": "number",
            "description": "Currency change rate to be applied when the sales quote was placed",
            "format": "double"
          },
          "VATIncluded": {
            "type": "boolean",
            "description": "Indicates whether prices in the sales quote are VAT included or not"
          },
          "SalesPersonId": {
            "maxLength": 128,
            "type": "string",
            "description": "Sales person unique identifier whom the sales quote has been placed by",
            "nullable": true
          },
          "CommissionRate": {
            "type": "number",
            "description": "Sales quote commission rate",
            "format": "double"
          },
          "CommissionAmount": {
            "type": "number",
            "description": "Sales quote commission amount",
            "format": "double"
          },
          "DiscountRate": {
            "type": "number",
            "description": "Sales quote discount rate",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "description": "Discount amount to be applied for this sales quote",
            "format": "double"
          },
          "DiscountPaymentMethodRate": {
            "type": "number",
            "description": "Payment method discount rate related to be applied for this sales quote",
            "format": "double"
          },
          "DiscountPaymentMethodAmount": {
            "type": "number",
            "description": "Payment method discount amount related to be applied for this sales quote",
            "format": "double"
          },
          "DiscountRappelRate": {
            "type": "number",
            "description": "Rappel discount rate to be applied for this sales quote",
            "format": "double"
          },
          "DiscountRappelAmount": {
            "type": "number",
            "description": "Rappel discount amount related to be applied for this sales quote",
            "format": "double"
          },
          "IncomeTaxRateId": {
            "maxLength": 128,
            "type": "string",
            "description": "Income tax rate unique identifier to be applied for this sales quote",
            "nullable": true
          },
          "IncomeTaxRate": {
            "type": "number",
            "description": "Sales quote Income tax rate",
            "format": "double"
          },
          "IncomeTaxAmount": {
            "type": "number",
            "description": "Sales quote income tax amount",
            "format": "double"
          },
          "ProductPriceRateId": {
            "maxLength": 128,
            "type": "string",
            "description": "Base product rate unique identifier to be applied",
            "nullable": true
          },
          "ProductDiscountRateId": {
            "maxLength": 128,
            "type": "string",
            "description": "Base product discount rate unique identifier to be applied",
            "nullable": true
          },
          "TotalDiscount": {
            "type": "number",
            "description": "Sales quote total discount",
            "format": "double"
          },
          "TotalNet": {
            "type": "number",
            "description": "Sales quote total net",
            "format": "double"
          },
          "TotalTaxes": {
            "type": "number",
            "description": "Sales quote total taxes",
            "format": "double"
          },
          "Total": {
            "type": "number",
            "description": "Sales quote total",
            "format": "double"
          },
          "Notes": {
            "type": "string",
            "description": "Any note or comments associated with the sales quote",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Sales quote last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "TaxType": {
            "$ref": "#/components/schemas/TaxType"
          },
          "CustomerAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "PaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "Lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesQuoteLine"
            },
            "description": "Document lines list with all details in the sales quote document",
            "nullable": true
          },
          "Taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesDocumentTaxesDetailLine"
            },
            "description": "Taxes details list summarizing all different tax rates involved in the sales quote document",
            "nullable": true
          },
          "AdvancePayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdvancePayment"
            },
            "description": "Advance payments list paid related with this sales quote",
            "nullable": true
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sales quotes management."
      },
      "ProductStockMovementType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - Input\r\n* `2` - Output\r\n* `3` - Transfer\r\n",
        "format": "int32"
      },
      "StockMovement": {
        "required": [
          "CompanyId",
          "Id",
          "Price",
          "ProductId",
          "Quantity",
          "Timestamp",
          "Type"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique product stock movement identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the stock movement is related to",
            "nullable": true
          },
          "StoreId": {
            "maxLength": 128,
            "type": "string",
            "description": "Store unique identifier affected by this stock movement. Mandatory if the company uses Stores",
            "nullable": true
          },
          "StoreLocationId": {
            "maxLength": 128,
            "type": "string",
            "description": "Store location unique identifier related with this stock movement. Mandatory if the stock movement type is transfer",
            "nullable": true
          },
          "DestinationStoreId": {
            "maxLength": 128,
            "type": "string",
            "description": "Destination store unique identifier affected by this stock movement (in case of stock transfer)",
            "nullable": true
          },
          "ProductId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product unique identifier which this stock movement record refers to",
            "nullable": true
          },
          "DateAndTime": {
            "type": "string",
            "description": "Stock movement date and time (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ssZ, example 2019-11-23T15:07:33Z)",
            "format": "date-time"
          },
          "Quantity": {
            "type": "number",
            "description": "Product units involved",
            "format": "double"
          },
          "Price": {
            "type": "number",
            "description": "Stock movement cost",
            "format": "double"
          },
          "Note": {
            "maxLength": 40,
            "type": "string",
            "description": "Any note or comment associated with this stock movement",
            "nullable": true
          },
          "ProductSizeId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product size unique identifier. Mandatory if the product uses size",
            "nullable": true
          },
          "ColourId": {
            "maxLength": 128,
            "type": "string",
            "description": "Product colour unique identifier. Mandatory if the product uses colour",
            "nullable": true
          },
          "Consignment": {
            "maxLength": 15,
            "type": "string",
            "description": "Product consignment",
            "nullable": true
          },
          "ExpirationDate": {
            "type": "string",
            "description": "Expiration date",
            "format": "date-time"
          },
          "Timestamp": {
            "type": "string",
            "description": "Stock movemement record last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "Type": {
            "$ref": "#/components/schemas/ProductStockMovementType"
          },
          "MeasureUnit": {
            "$ref": "#/components/schemas/MeasureUnit"
          },
          "ProductSerialNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SerialNumber"
            },
            "description": "Serial numbers list involved in this stock movement. Mandatory if the product uses serial number",
            "nullable": true
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Stock movements between stores."
      },
      "StoreLocation": {
        "required": [
          "Code",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique store location identifier",
            "nullable": true
          },
          "Code": {
            "maxLength": 15,
            "type": "string",
            "description": "Code of the store location within the application",
            "nullable": true
          },
          "Description": {
            "maxLength": 50,
            "type": "string",
            "description": "Store location description",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Store location last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Store locations management."
      },
      "Store": {
        "required": [
          "Code",
          "CompanyId",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique store identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the store is associated with",
            "nullable": true
          },
          "Code": {
            "maxLength": 4,
            "type": "string",
            "description": "Store code within the application",
            "nullable": true
          },
          "Name": {
            "maxLength": 25,
            "type": "string",
            "description": "Store name",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Store last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "Contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "Locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreLocation"
            },
            "description": "Store locations list",
            "nullable": true
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Stores management."
      },
      "Tracking": {
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Unique tracking identifier",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Tracking.\r\nAPI definition contract for the business entity Tracking."
      },
      "VATTaxRateType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "The enum values are:\r\n\r\n* `0` - Undefined\r\n* `1` - VAT\r\n* `2` - IGIC\r\n",
        "format": "int32"
      },
      "VATTaxRate": {
        "required": [
          "Code",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique VAT tax rate identifier",
            "nullable": true
          },
          "Code": {
            "maxLength": 3,
            "type": "integer",
            "description": "VAX tax rate type code within the application",
            "format": "int32"
          },
          "Name": {
            "maxLength": 30,
            "type": "string",
            "description": "VAT tax rate type name",
            "nullable": true
          },
          "TaxRate": {
            "type": "number",
            "description": "VAT rate",
            "format": "double"
          },
          "SurchargeRate": {
            "type": "number",
            "description": "Surcharge percent rate associated",
            "format": "double"
          },
          "Timestamp": {
            "type": "string",
            "description": "VAT tax rate type last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "Type": {
            "$ref": "#/components/schemas/VATTaxRateType"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "VAT tax rates management."
      },
      "Zone": {
        "required": [
          "Code",
          "CompanyId",
          "Id",
          "Timestamp"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique zone identifier",
            "nullable": true
          },
          "CompanyId": {
            "maxLength": 128,
            "type": "string",
            "description": "Company unique identifier which the zone belongs to",
            "nullable": true
          },
          "Code": {
            "maxLength": 10,
            "type": "integer",
            "description": "Zone code within the application",
            "format": "int32"
          },
          "Name": {
            "maxLength": 25,
            "type": "string",
            "description": "Zone name",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Zone last update timestamp (UTC format according to combined date and time representations described in the ISO 8601, following the format YYYY-MM-DDThh:mm:ss:mmmZ, example 2019-11-23T15:07:33:045Z)",
            "format": "date-time"
          },
          "ExtendedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProperty"
            },
            "description": "Extended properties list (for customization support or future usages)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Zones management across the whole application globally."
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: Authorization: Bearer {token}",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}