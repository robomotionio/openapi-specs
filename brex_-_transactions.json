{
  "openapi": "3.0.1",
  "info": {
    "title": "Transactions API",
    "description": "\nTransactions API lets you view your transactions, accounts, and statements.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "contact": {
      "name": "Admin",
      "url": "https://brex.com",
      "email": "developer-access@brex.com"
    },
    "version": "0.1",
    "x-logo": {
      "url": "https://logo.clearbit.com/brex.com"
    }
  },
  "servers": [
    {
      "url": "https://platform.brexapis.com",
      "description": "Production"
    },
    {
      "url": "https://platform.staging.brexapps.com",
      "description": "Staging (Note: this is not a sandbox. Will not work with customer tokens.)"
    }
  ],
  "security": [
    {
      "OAuth2": []
    }
  ],
  "tags": [
    {
      "name": "Transactions",
      "description": "Endpoints for transaction data"
    },
    {
      "name": "Accounts",
      "description": "Endpoints for account data"
    }
  ],
  "paths": {
    "/v2/accounts/card": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "\nList card accounts\n",
        "description": "\nThis endpoint lists all accounts of card type\n",
        "operationId": "listCardAccounts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "listCardAccounts 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounts.card.readonly"
            ]
          }
        ]
      }
    },
    "/v2/accounts/card/primary/statements": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "\nList statements for the primary card account\n",
        "description": "\nThis endpoint lists all finalized statements for the primary card account.\n",
        "operationId": "listPrimaryCardStatements",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "listPrimaryCardStatements 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_Statement_"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "OAuth2": [
              "statements.card.readonly"
            ]
          }
        ]
      }
    },
    "/v2/accounts/cash": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "\nList cash accounts\n",
        "description": "\nThis endpoint lists all the existing cash accounts with their status.\n",
        "operationId": "listAccounts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "listAccounts 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_CashAccount_"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounts.cash.readonly"
            ]
          }
        ]
      }
    },
    "/v2/transactions/card/primary": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "\nList transactions for the primary card account\n",
        "description": "\nThis endpoint lists all settled transactions for the primary card account.\n",
        "operationId": "listPrimaryCardTransactions",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "listPrimaryCardTransactions 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_CardTransaction_"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "OAuth2": [
              "transactions.card.readonly"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CardAccount": {
        "required": [
          "current_statement_period",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the card account"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status"
              },
              {
                "nullable": true
              }
            ]
          },
          "current_balance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              },
              {
                "nullable": true
              }
            ]
          },
          "available_balance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              },
              {
                "nullable": true
              }
            ]
          },
          "account_limit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              },
              {
                "nullable": true
              }
            ]
          },
          "current_statement_period": {
            "$ref": "#/components/schemas/StatementPeriod"
          }
        }
      },
      "CardTransaction": {
        "required": [
          "amount",
          "description",
          "id",
          "posted_at_date"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "card_id": {
            "type": "string",
            "description": "ID of the card used for the transaction",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the transaction"
          },
          "amount": {
            "$ref": "#/components/schemas/Money"
          },
          "posted_at_date": {
            "type": "string",
            "description": "ISO 8601 date string",
            "format": "date"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              },
              {
                "nullable": true
              }
            ]
          }
        }
      },
      "CashAccount": {
        "required": [
          "account_number",
          "available_balance",
          "current_balance",
          "id",
          "name",
          "routing_number"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the cash account"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status"
              },
              {
                "nullable": true
              }
            ]
          },
          "current_balance": {
            "$ref": "#/components/schemas/Money"
          },
          "available_balance": {
            "$ref": "#/components/schemas/Money"
          },
          "account_number": {
            "type": "string"
          },
          "routing_number": {
            "type": "string"
          }
        }
      },
      "Money": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The amount of money, in the smallest denomination of the currency indicated by currency. For example, when currency is USD, amount is in cents.",
            "format": "int64"
          },
          "currency": {
            "type": "string",
            "description": "The type of currency, in ISO 4217 format. Default to USD if not specified",
            "nullable": true
          }
        },
        "description": "\nMoney fields can be signed or unsigned. Fields are signed (an unsigned value will be interpreted as positive).\n"
      },
      "Page_CardTransaction_": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "next_cursor": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardTransaction"
            }
          }
        }
      },
      "Page_CashAccount_": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "next_cursor": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CashAccount"
            }
          }
        }
      },
      "Page_Statement_": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "next_cursor": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Statement"
            }
          }
        }
      },
      "Statement": {
        "required": [
          "id",
          "period"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "start_balance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              },
              {
                "nullable": true
              }
            ]
          },
          "end_balance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              },
              {
                "nullable": true
              }
            ]
          },
          "period": {
            "$ref": "#/components/schemas/StatementPeriod"
          }
        }
      },
      "StatementPeriod": {
        "required": [
          "end_date",
          "start_date"
        ],
        "type": "object",
        "properties": {
          "start_date": {
            "type": "string",
            "description": "Start date of the statement period",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "description": "End date of the statement period",
            "format": "date"
          }
        }
      },
      "Status": {
        "type": "string",
        "enum": [
          "ACTIVE"
        ]
      },
      "Type": {
        "type": "string",
        "enum": [
          "PURCHASE",
          "REFUND",
          "CHARGEBACK",
          "REWARDS_CREDIT",
          "COLLECTION"
        ]
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "description": "OAuth2 security scheme",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://accounts.brex.com/oauth2/v1/auth",
            "tokenUrl": "https://accounts.brex.com/oauth2/v1/token",
            "scopes": {
              "openid": "openid",
              "offline_access": "offline access",
              "transactions.card.readonly": "View card transaction data",
              "statements.card.readonly": "View card statement data",
              "accounts.card.readonly": "View card account data",
              "accounts.cash.readonly": "View cash account data"
            }
          }
        }
      }
    }
  },
  "x-explorer-enabled": false
}