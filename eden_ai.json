{
  "openapi": "3.0.0",
  "info": {
    "title": "Eden AI API Documentation",
    "description": "<a href=\"https://app.edenai.run/user/login\" target=\"_blank\"><img src=\"/static/images/welcome.png\"></a>.\n# Welcome \nEden AI simplifies the use and integration of AI technologies by providing a unique API connected to the best AI engines and combined with a powerful management platform.\nThe platform covers a wide range of AI technologies:\n* Vision:  <a href=\"https://www.edenai.co/vision\" target=\"_blank\">www.edenai.co/vision</a>.\n* Text & NLP: <a href=\"https://www.edenai.co/text\" target=\"_blank\">www.edenai.co/text</a>.\n* Speech & Audio: <a href=\"https://www.edenai.co/speech\" target=\"_blank\">www.edenai.co/speech</a>.\n* OCR: <a href=\"https://www.edenai.co/ocr\" target=\"_blank\">www.edenai.co/ocr</a>.\n* Machine Translation: <a href=\"https://www.edenai.co/translation\" target=\"_blank\">www.edenai.co/translation</a>.\n* Prediction: <a href=\"https://www.edenai.co/prediction\" target=\"_blank\">www.edenai.co/prediction</a>.\n\nFor all the proposed technologies, we provide a single endpoint: \nthe service provider is only a parameter that can be changed very easily. All the engines available on Eden AI are listed here: www.edenai.co/catalog\n\n# Support & community\n\n### 1- Support\nIf you have any problems, please contact us at this email address: contact@edenai.co. We will be happy to help you in the use of Eden AI. \n\n### 2- Community\n\nYou can interact personally with other people actively using and working with Eden AI and join our  <a href=\"https://join.slack.com/t/edenai/shared_invite/zt-t68c2pr9-4lDKQ_qEqmLiWNptQzB_6w\" target=\"_blank\">Slack community</a>.\n\nWe are always updating our docs, so a good way to always stay up to date is to watch our documentation repo on Github: <a href=\"https://github.com/edenai\" target=\"_blank\">https://github.com/edenai</a>.\n\n### 3- Blog\n\nWe also regularly publish various articles with Eden AI news and technical articles on the different AI engines that exist. You can find these articles here: <a href=\"https://www.edenai.co/blog\" target=\"_blank\">https://www.edenai.co/blog</a>.\n\n\n# Authentication \n## Create account\n![Register](/static/images/register.png)\n\nTo create an account, please go to this link: <a href=\"https://app.edenai.run/user/login\" target=\"_blank\">app.edenai.run/user/login</a>. You can create an account with your email address or by using your account on available platforms (Gmail, Github, etc.). \n\nBy creating an account with your email address, you will receive a confirmation email with a link to click. Check your spam if needed and contact us if you have any problem: contact@edenai.co\n\n![Login](/static/images/login.png)\n## API key \nBy going to your account page on the platform: <a href=\"https://app.edenai.run/admin/account\" target=\"_blank\">https://app.edenai.run/admin/account</a>, you will have access to your API key to start using the different AI engines offered by Eden AI. \n\n![api_key](/static/images/api_key.png)\n# Portal Guide \nEden AI provides a web portal that allows you to do several tasks:\n\n![portal](/static/images/portal.png)\n\n### 1- Benchmark and test\nThe platform allows you to easily compare competing engines without having to code. By uploading your data, you have access to the prediction results of the different engines. This gives you a first overview of the performance of AI engines.  \n![benchmark](/static/images/benchmark.png)\n\n### 2- Cost management\nThe <a href=\"https://app.edenai.run/admin/cost-management\" target=\"_blank\">cost management page</a> also allows you to centralize the costs associated with the different engines with various filters to simplify the analysis. \n\nThis page also allows you to define monthly budget limits not to be exceeded to secure the use of different AI engines. \n\n![cost-management](/static/images/cost_management.png)\n### 3- Account\nThe <a href=\"https://app.edenai.run/admin/account\" target=\"_blank\">account page</a> allows you to change your information and password. It also gives you access to your API key that you can renew if needed. \n\nThis page also allows you to add a credit card and to buy with credits to use all the engines offered by Eden AI. \n\n![account](/static/images/account.png)\n\n\n# API Guide \nEden AI API has different endpoints that refer to different AI services. The connected providers are thus parameters that the user can easily change.\n",
    "contact": {
      "name": "Eden AI support",
      "url": "https://www.edenai.co",
      "email": "contact@edenai.co"
    },
    "x-logo": {
      "url": "https://api.edenai.run/static/images/eden-ai.png",
      "backgroundColor": "#FFFFFF"
    },
    "version": "v1"
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/audio/speech_recognition": {
      "post": {
        "operationId": "Speech Recognition",
        "description": "Speech recognition is technology that can recognize spoken words, which can then be converted to text.\n\n**SUPPORTED LANGUAGE**\n\n|Name|Type|Value|\n|---------------------------|-------------------------------|---------------|\n| **English (US)**|*`string`*|`en-US`|\n| **English (GB)**|*`string`*|`en-GB`|\n| **French**|*`string`*|`fr-FR`|\n| **Spanish**|*`string`*|`es-ES`|\n| **Dutch (Netherlands)**|*`string`*|`nl-NL`|\n| **Japanese**|*`string`*|`ja-JP`|\n| **Russian**|*`string`*|`ru-RU`|\n| **Arabic**|*`string`*|`ar-SA`|\n| **Italian**|*`string`*|`it-IT`|\n| **Korean**|*`string`*|`ko-KR`|\n| **Portuguese**|*`string`*|`pt-PT`|\n| **Turkish**|*`string`*|`tr-TR`|\n| **Indonesian**|*`string`*|`id-ID`|\n| **Malay**|*`string`*|`ms-MY`|\n\n\n\n**AVAILABLE PROVIDERS**\n\n|Name|Value|\n|-------------------------------|---------------|\n| [**IBM Watson**](https://www.edenai.co/catalog/watson-speech-to-text)|`ibm`|\n                                 | [**Google Cloud Services**](https://www.edenai.co/catalog/google-cloud-speech-to-text)|`google`\n                                 | [**Amazon Web Services**](https://www.edenai.co/catalog/amazon-transcribe)|`amazon`|\n                                 | [**Micrososft Azure**](https://www.edenai.co/catalog/azure-speech-to-text)|`microsoft`|\n\n",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "language": {
                    "description": "Language code expected (ex: fr-FR (French), en-US (English), es-ES (Spanish), nl-NL Dutch (Netherlands))",
                    "type": "string",
                    "minLength": 1
                  },
                  "files": {
                    "description": "File to analyse\t(ex: mp3, wav, m4a)",
                    "type": "string",
                    "format": "binary"
                  },
                  "providers": {
                    "description": "Provider to compare (ex: [ 'amazon', 'microsoft', 'ibm','google', 'threescribe])",
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "language",
                  "files",
                  "providers"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "result": [
                        {
                          "solution_name": "String [The full name of provider]",
                          "provider": "String [The input name of provider]",
                          "execution_time": "Float",
                          "result": {
                            "transcribe": "String [Transcription text of input audio file]",
                            "confidence": "Float "
                          },
                          "original_result": "Json with original response of provider",
                          "status": "success"
                        },
                        {
                          "solution_name": "String",
                          "provider": "String",
                          "error": "String",
                          "status": "fail"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Invalid request",
                        "message": "Json with error messages and fields"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Bad Credentials",
                        "message": "Please enter a valid token"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Speech"
        ]
      },
      "parameters": []
    },
    "/audio/text_to_speech": {
      "post": {
        "operationId": "Text To Speech",
        "description": "Text-to-speech (TTS) system converts normal language text into speech.\n\n**SUPPORTED LANGUAGE**\n\n|Name|Type|Value|\n|---------------------------|-------------------------------|---------------|\n| **Arabic**|*`string`*|`ar-XA`|\n| **Chinese**|*`string`*|`cmn-CN`|\n| **Danish**|*`string`*|`da-DK`|\n| **Dutch**|*`string`*|`nl-NL`|\n| **English (US)**|*`string`*|`en-US`|\n| **English (UK)**|*`string`*|`en-GB`|\n| **German**|*`string`*|`de-DE`|\n| **Italy**|*`string`*|`it-IT`|\n| **Japanese**|*`string`*|`ja-JP`|\n| **Portuguese (Brazil)**|*`string`*|`pt-BR`|\n| **Portuguese (Portugal)**|*`string`*|`pt-PT`|\n| **Russian**|*`string`*|`ru-RU`|\n| **Portuguese (Portugal)**|*`string`*|`pt-PT`|\n| **Spanish**|*`string`*|`es-ES`|\n\n\n\n**AVAILABLE PROVIDERS**\n\n|Name|Value|\n|-------------------------------|---------------|\n| [**IBM Watson**](https://www.edenai.co/catalog/watson-text-to-speech)|`ibm`|\n                             | [**Google Cloud Services**](https://www.edenai.co/catalog/google-cloud-text-to-speech-)|`google`|\n                             | [**Amazon Web Services**](https://www.edenai.co/catalog/amazon-polly)|`amazon`|\n                             | [**Micrososft Azure**](https://www.edenai.co/catalog/azure-text-to-speech)|`microsoft`|\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextToSpeechComparator"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "result": [
                        {
                          "solution_name": "String [The full name of provider]",
                          "provider": "String [The input name of provider]",
                          "execution_time": "Float",
                          "result": {
                            "audio_path": "String [path to output audio]",
                            "text": "String [input text to convert to audio]",
                            "voice_type": "Integer"
                          },
                          "status": "success"
                        },
                        {
                          "solution_name": "String",
                          "provider": "String",
                          "error": "String",
                          "status": "fail"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Invalid request",
                        "message": "Json with error messages and fields"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Bad Credentials",
                        "message": "Please enter a valid token"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Speech"
        ]
      },
      "parameters": []
    },
    "/ocr/ocr": {
      "post": {
        "operationId": "OCR",
        "description": "Optical Character Recognition or optical character reader (OCR) is the electronic or mechanical conversion of images of typed, handwritten or printed text into machine-encoded text, whether from a scanned document, a photo of a document.\n\n\n**SUPPORTED LANGUAGE**\n\n\n|    Name    \t\t\t\t|Type                           |Value                  |\n|---------------------------|-------------------------------|-----------------------|\n | **Arabic**\t    \t\t|*`string`*\t\t\t\t\t\t|`ar-XA`                 |\n| **Chinese - Simplified**\t|*`string`*\t\t\t\t\t\t|`zh-CN`                 |\n| **Chinese - Traditional**|*`string`*\t\t\t\t\t\t|`zh-TW`                 |\n| **Czech**\t    \t\t|*`string`*\t\t\t\t\t\t|`cz-CZ`                 |\n| **Danish**\t    \t\t|*`string`*\t\t\t\t\t\t|`da-DK`                 |\n| **Dutch**\t    \t\t|*`string`*\t\t\t\t\t\t|`nl-NL`                 |\n| **English**\t    \t\t|*`string`*\t\t\t\t\t\t|`en-US`                 |\n| **Finnish**\t    \t\t|*`string`*\t\t\t\t\t\t|`fn-FN`                 |\n| **French**\t    \t\t|*`string`*\t\t\t\t\t\t|`fr-FR`                 |\n| **German**\t    \t\t|*`string`*\t\t\t\t\t\t|`de-DE`                 |\n| **Greek**\t    \t\t|*`string`*\t\t\t\t\t\t|`gr-GR`                 |\n| **Hungarian**\t    \t|*`string`*\t\t\t\t\t\t|`hu-HU`                 |\n| **Italian**\t    \t\t|*`string`*\t\t\t\t\t\t|`it-IT`                 |\n| **Japanese**\t    \t\t|*`string`*\t\t\t\t\t\t|`ja-JP`\t        \t |\n| **Korean**\t    \t\t|*`string`*\t\t\t\t\t\t|`ko-KR`                 |\n| **Polish**\t    \t\t|*`string`*\t\t\t\t\t\t|`pl-PO`\t\t\t     |\n| **Portuguese**\t    \t|*`string`*\t\t\t\t\t\t|`pt-PT`\t\t\t     |\n| **Russian**\t    \t\t|*`string`*\t\t\t\t\t\t|`ru-RU` \t\t         |\n| **Swedish**\t    \t\t|*`string`*\t\t\t\t\t\t|`sw-SW`                 |\n| **Spanish**              |*`string`*\t\t\t\t\t\t|`es-ES`                 |\n| **Turkish**\t    \t\t|*`string`*\t\t\t\t\t\t|`tr-TR`                 |\n\n\n**AVAILABLE PROVIDERS**\n\n|Name|Value|\n|-------------------------------|---------------|\n| [**OCR Space**](http://www.edenai.co/catalog/ocr-space)|`ocrspace`|\n     | [**Google Cloud Services**](https://www.edenai.co/catalog/google-cloud-vision-(ocr))|`google`|\n     | [**Amazon Web Services**](https://www.edenai.co/catalog/amazon-textract)|`amazon`|\n     | [**Micrososft Azure**](https://www.edenai.co/catalog/azure-computer-vision-(ocr))|`microsoft`|\n\n",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "description": "File to analyse (ex: pdf, jpg, jpeg, png, tiff)",
                    "type": "string",
                    "format": "binary"
                  },
                  "providers": {
                    "description": "Providers to compare (ex: [ 'amazon', 'microsoft', 'ibm', 'google'])",
                    "type": "string",
                    "minLength": 1
                  },
                  "language": {
                    "description": "Language code expected (ex: fr-FR)",
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "files",
                  "providers",
                  "language"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "results": [
                        {
                          "solution_name": "String [The full name of provider]",
                          "provider": "String [The input name of provider]",
                          "execution_time": "Float",
                          "result": "String [Extracted text from input file]",
                          "original_result": "Json with original response of provider",
                          "number_of_pages": "Integer",
                          "status": "success"
                        },
                        {
                          "solution_name": "String",
                          "provider": "String",
                          "error": "String",
                          "status": "fail"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Invalid request",
                        "message": "Json with error messages and fields"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Bad Credentials",
                        "message": "Please enter a valid token"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "OCR"
        ]
      },
      "parameters": []
    },
    "/ocr/ocr_invoice": {
      "post": {
        "operationId": "OCR Invoice",
        "description": "The OCR Invoice API enables customers to take invoices in a variety of formats and return structured data to automate the invoice processing.\n\n**SUPPORTED LANGUAGE**\n\n|Name|Type|Value|\n|---------------------------|-------------------------------|---------------|\n| **English (US)**|*`string`*|`en-US`|\n| **French**|*`string`*|`fr-FR`|\n| **Spanish**|*`string`*|`es-ES`|\n\n\n\n**AVAILABLE PROVIDERS**\n\n|Name|Details|\n|-------------------------------|---------------|\n|[ **Mindee**](https://www.edenai.co/catalog/mindee)|`mindee`|\n                         | [**Micrososft Azure**](https://www.edenai.co/catalog/azure-computer-vision-(ocr))|`microsoft`|\n\n",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "description": "File Image to analyse (ex: pdf, jpg, jpeg, png)",
                    "type": "string",
                    "format": "binary"
                  },
                  "providers": {
                    "description": "Provider to compare (ex: [ 'mindee', 'microsoft'])",
                    "type": "string",
                    "minLength": 1
                  },
                  "language": {
                    "description": "Language code of invoice (ex: fr-FR (French), en-US (English), es-ES (Spanish))",
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "files",
                  "providers",
                  "language"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "results": [
                        {
                          "solution_name": "String [The full name of provider]",
                          "provider": "String [The input name of provider]",
                          "execution_time": "Float",
                          "result": [
                            {
                              "customer_information": "Json with extracted information about the customer",
                              "merchant_information": "Json with extracted information about the merchant",
                              "invoice_total": "Float",
                              "invoice_subtotal": "Float",
                              "date": "String [ISO date format]",
                              "due_date": "String [ISO date format]",
                              "invoice_number": "String",
                              "taxes": "",
                              "locale": {
                                "currency": "String [ISO currency format]",
                                "language": "String [ISO language format]"
                              },
                              "item_lines": [
                                {
                                  "amount": "Float",
                                  "description": "String",
                                  "quantity": "Integer",
                                  "unit_price": "Float"
                                }
                              ]
                            }
                          ],
                          "original_result": "Json with original response of provider",
                          "number_of_pages": "Integer",
                          "status": "success"
                        },
                        {
                          "solution_name": "String",
                          "provider": "String",
                          "error": "String",
                          "status": "fail"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Invalid request",
                        "message": "Json with error messages and fields"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Bad Credentials",
                        "message": "Please enter a valid token"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "OCR"
        ]
      },
      "parameters": []
    },
    "/text/keyword_extraction": {
      "post": {
        "operationId": "Keyword Extraction",
        "description": "Keyword extraction (also known as keyword detection or keyword analysis) is a text analysis technique that consists of automatically extracting the most important words and expressions in a text.\n\n**SUPPORTED LANGUAGE**\n\n|Name|Type|Value|\n|---------------------------|------------------------------|---------------|\n| **English (US)**|*`string`*|`en-US`|\n| **French**|*`string`*|`fr-FR`|\n| **Spanish**|*`string`*|`es-ES`|\n\n\n\n**AVAILABLE PROVIDERS**\n\n|Name|Value|\n|-------------------------------|---------------|\n| [**IBM Watson**](https://www.edenai.co/catalog/watson-natural-language-understanding)|`ibm`|\n                        |[**Amazon Web Services**](https://www.edenai.co/catalog/amazon-comprehend)|`amazon`|\n                        |[**Micrososft Azure**](https://www.edenai.co/catalog/azure-text-analytics)|`microsoft`|\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeywordExtractionComparator"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "result": [
                        {
                          "solution_name": "String [The full name of provider]",
                          "provider": "String [The input name of provider]",
                          "execution_time": "Float",
                          "result": {
                            "text": "String [Input text]",
                            "keywords": "Array of recognized keywords in the given text",
                            "importances": "Array of importance of each keyword in the text"
                          },
                          "original_result": "Json with original response of provider",
                          "status": "success"
                        },
                        {
                          "solution_name": "String",
                          "provider": "String",
                          "error": "String",
                          "status": "fail"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Invalid request",
                        "message": "Json with error messages and fields"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Bad Credentials",
                        "message": "Please enter a valid token"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Text"
        ]
      },
      "parameters": []
    },
    "/text/named_entity_recognition": {
      "post": {
        "operationId": "Named Entity Recognition",
        "description": "Named Entity Recognition (also called entity identification or entity extraction) is an information extraction technique that automatically identifies named entities in a text and classifies them into predefined categories.\n\n**SUPPORTED LANGUAGE**\n\n|Name|Type|Value|\n|---------------------------|-------------------------------|---------------|\n| **English (US)**|*`string`*|`en-US`|\n| **French**|*`string`*|`fr-FR`|\n| **Spanish**|*`string`*|`es-ES`|\n\n\n\n**AVAILABLE PROVIDERS**\n\n|Name|Value|\n|-------------------------------|---------------|\n| [**IBM Watson**](https://www.edenai.co/catalog/watson-natural-language-understanding)|`ibm`|\n                        |[**Google Cloud Services**](https://www.edenai.co/catalog/google-cloud-natural-language)|`google`|\n                        |[**Amazon Web Services**](https://www.edenai.co/catalog/amazon-comprehend)|`amazon`|\n                        |[**Lettria**](https://www.edenai.co/catalog/Lettria)|`lettria`|\n                        |[**Micrososft Azure**](https://www.edenai.co/catalog/azure-text-analytics)|`microsoft`|\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NamedEntityRecognitionComparator"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "result": [
                        {
                          "solution_name": "String [The full name of provider]",
                          "provider": "String [The input name of provider]",
                          "execution_time": "Float",
                          "result": {
                            "text": "String [Input text]",
                            "entities": "Array of recognized entities in the given text",
                            "importances": "Array of importance of each entity in the text",
                            "categories": "Array of categories of each entity in the text",
                            "urls": "Array of locations of each entity in the text",
                            "classification": "Json of entities classified by their category "
                          },
                          "original_result": "Json with original response of provider",
                          "status": "success"
                        },
                        {
                          "solution_name": "String",
                          "provider": "String",
                          "error": "String",
                          "status": "fail"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Invalid request",
                        "message": "Json with error messages and fields"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Bad Credentials",
                        "message": "Please enter a valid token"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Text"
        ]
      },
      "parameters": []
    },
    "/text/sentiment_analysis": {
      "post": {
        "operationId": "Sentiment Analysis",
        "description": "Sentiment analysis API extracts sentiment in a given string of text. Sentiment analysis, also called 'opinion mining', uses natural language processing, text analysis and computational linguistics to identify and detect subjective information from the input text.\n\n**SUPPORTED LANGUAGE**\n\n|Name|Type|Value|\n|---------------------------|-------------------------------|---------------|\n| **English (US)**|*`string`*|`en-US`|\n| **French**|*`string`*|`fr-FR`|\n| **Spanish**|*`string`*|`es-ES`|\n\n\n\n**AVAILABLE PROVIDERS**\n\n|Name|Value|\n|-------------------------------|---------------|\n| [**IBM Watson**](https://www.edenai.co/catalog/watson-natural-language-understanding)|`ibm`|\n                        |[**Google Cloud Services**](https://www.edenai.co/catalog/google-cloud-natural-language)|`google`|\n                        |[**Amazon Web Services**](https://www.edenai.co/catalog/amazon-comprehend)|`amazon`|\n                        |[**Lettria**](https://www.edenai.co/catalog/Lettria)|`lettria`|\n                        |[**Micrososft Azure**](https://www.edenai.co/catalog/azure-text-analytics)|`microsoft`|\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SentimentAnalysisComparator"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "result": [
                        {
                          "solution_name": "String [The full name of provider]",
                          "provider": "String [The input name of provider]",
                          "execution_time": "Float",
                          "result": {
                            "text": "String [Input text]",
                            "sentiments": "Array of recognized sentiments in the given text",
                            "sentiment_rate": "Array of rates of each sentiment in the text"
                          },
                          "original_result": "Json with original response of provider",
                          "status": "success"
                        },
                        {
                          "solution_name": "String",
                          "provider": "String",
                          "error": "String",
                          "status": "fail"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Invalid request",
                        "message": "Json with error messages and fields"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Bad Credentials",
                        "message": "Please enter a valid token"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Text"
        ]
      },
      "parameters": []
    },
    "/text/syntax_analysis": {
      "post": {
        "operationId": "Syntax Analysis",
        "description": "Syntax analysis consists principaly in highlighting the structure of a text.\n\n**SUPPORTED LANGUAGE**\n\n|Name|Type|Value|\n|---------------------------|-------------------------------|---------------|\n| **English (US)**|*`string`*|`en-US`|\n| **French**|*`string`*|`fr-FR`|\n| **Spanish**|*`string`*|`es-ES`|\n\n\n\n**AVAILABLE PROVIDERS**\n\n|Name|Value|\n|-------------------------------|---------------|\n| [**IBM Watson**](https://www.edenai.co/catalog/watson-natural-language-understanding)|`ibm`|\n                        |[**Google Cloud Services**](https://www.edenai.co/catalog/google-cloud-natural-language)|`google`|\n                        |[**Amazon Web Services**](https://www.edenai.co/catalog/amazon-comprehend)|`amazon`|\n                        |[**Lettria**](https://www.edenai.co/catalog/Lettria)|`lettria`|\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyntaxAnalysisComparator"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "result": [
                        {
                          "solution_name": "String [The full name of provider]",
                          "provider": "String [The input name of provider]",
                          "execution_time": "Float",
                          "result": {
                            "text": "String [Input text]",
                            "keywords": "Array of words in the given text",
                            "importances": "Array of scores of provider on the analysis of each word in the text",
                            "tags": "Grammatical tags of each word in the text",
                            "lemmas": "Array of lemmas of each word in the text",
                            "others": "Array of other analysis provided for each word"
                          },
                          "original_result": "Json with original response of provider",
                          "status": "success"
                        },
                        {
                          "solution_name": "String",
                          "provider": "String",
                          "error": "String",
                          "status": "fail"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Invalid request",
                        "message": "Json with error messages and fields"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Bad Credentials",
                        "message": "Please enter a valid token"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Text"
        ]
      },
      "parameters": []
    },
    "/translation/automatic_translation": {
      "post": {
        "operationId": "Automatic Translation",
        "description": "Machine translation refers to the translation of a text into another language using rules, statics or ml technics.\n\n**SUPPORTED LANGUAGE**\n\n|Name|Type|Value|\n|---------------------------|-------------------------------|---------------|\n | **Afrikaans**             | *`string`* | `af-AF`         |\n | **Albanian**              | *`string`* | `sq-SQ`         |\n | **Amharic**               | *`string`* | `am-AM`         |\n | **Arabic**                | *`string`* | `ar-XA`         |\n | **Armenian**              | *`string`* | `hy-HY`         |\n | **Azerbaijani**           | *`string`* | `az-AZ`         |\n | **Basque**                | *`string`* | `eu-BA`         |\n | **Belarusian**            | *`string`* | `be-BE`         |\n | **Bengali**               | *`string`* | `bn-BN`         |\n | **Bosnian**               | *`string`* | `bs-BS`         |\n | **Bulgarian**             | *`string`* | `bg-BG`         |\n | **Catalan**               | *`string`* | `ca-ES`         |\n | **Cebuano**               | *`string`* | `ceb-CB`        |\n | **Chinese-Simplified**    | *`string`* | `zh-CN`         |\n | **Chinese-Traditional**   | *`string`* | `zh-TW`         |\n | **Corsican**              | *`string`* | `co-CO`         |\n | **Croatian**              | *`string`* | `hr-HR`         |\n | **Czech**                 | *`string`* | `cz-CZ`         |\n | **Danish**                | *`string`* | `da-DK`         |\n | **Dutch**                 | *`string`* | `nl-NL`         |\n | **English**               | *`string`* | `en-US`         |\n | **Esperanto**             | *`string`* | `eo-EO`         |\n | **Estonian**              | *`string`* | `et-ET`         |\n | **Finnish**               | *`string`* | `fn-FN`         |\n | **French**                | *`string`* | `fr-FR`         |\n | **French-Canadian**       | *`string`* | `fr-CA`      |\n | **Frisian**               | *`string`* | `fy-FY`         |\n | **Galician**              | *`string`* | `gl-GL`         |\n | **Georgian**              | *`string`* | `ka-KA`         |\n | **German**                | *`string`* | `de-DE`         |\n | **Greek**                 | *`string`* | `gr-GR`         |\n | **Gujarati**              | *`string`* | `gu-GU`         |\n | **Haitian-Creole**        | *`string`* | `ht-HT`         |\n | **Hausa**                 | *`string`* | `ha-HA`         |\n | **Hawaiian**              | *`string`* | `haw-HA`        |\n | **Hebrew**                | *`string`* | `he-HE`         |\n | **Hindi**                 | *`string`* | `hi-HI`         |\n | **Hmong**                 | *`string`* | `hmn_HM`        |\n | **Hungarian**             | *`string`* | `hu-HU`         |\n | **Icelandic**             | *`string`* | `is-IS`         |\n | **Igbo**                  | *`string`* | `ig-IG`         |\n | **Indonesian**            | *`string`* | `id-ID`         |\n | **Irish**                 | *`string`* | `ga-IR`         |\n | **Italian**               | *`string`* | `it-IT`         |\n | **Japanese**              | *`string`* | `ja-JP`         |\n | **Javanese**              | *`string`* | `jv-JV`         |\n | **Kannada**               | *`string`* | `kn-KN`         |\n | **Kazakh**                | *`string`* | `kk-KK`         |\n | **Khmer**                 | *`string`* | `km-KM`         |\n | **Korean**                | *`string`* | `ko-KR`         |\n | **Kurdish**               | *`string`* | `ku-KU`         |\n | **Kyrgyz**                | *`string`* | `ky-KY`         |\n | **Lao**                   | *`string`* | `lo-LO`         |\n | **Latin**                 | *`string`* | `la-LA`         |\n | **Latvian**               | *`string`* | `lv-LV`         |\n | **Lithuanian**            | *`string`* | `lt-LT`         |\n | **Luxembourgish**         | *`string`* | `lb-LB`         |\n | **Macedonian**            | *`string`* | `mk-MK`         |\n | **Malagasy**              | *`string`* | `mg-MG`         |\n | **Malay**                 | *`string`* | `ms-MY`         |\n | **Malayalam**             | *`string`* | `ml-ML`         |\n | **Maltese**               | *`string`* | `mt-MT`         |\n | **Maori**                 | *`string`* | `mi-MI`         |\n | **Marathi**               | *`string`* | `mr-MR`         |\n | **Mongolian**             | *`string`* | `mn-MN`         |\n | **Myanmar-Burmese**       | *`string`* | `my-MY`         |\n | **Nepali**                | *`string`* | `ne-NE`         |\n | **Norwegian**             | *`string`* | `no-NO`         |\n | **Nyanja Chichewa**       | *`string`* | `ny-NY`         |\n | **Pashto**                | *`string`* | `ps-PS`         |\n | **Persian**               | *`string`* | `fa-FA`         |\n | **Polish**                | *`string`* | `pl-PO`         |\n | **Portuguese**            | *`string`* | `pt-PT`         |\n | **Punjabi**               | *`string`* | `pa-PA`         |\n | **Romanian**              | *`string`* | `ro-RO`         |\n | **Russian**               | *`string`* | `ru-RU`         |\n | **Samoan**                | *`string`* | `sm-SM`         |\n | **Scots Gaelic**          | *`string`* | `gd-GD`         |\n | **Serbian**               | *`string`* | `sr-SR`         |\n | **Sesotho**               | *`string`* | `st-ST`         |\n | **Shona**                 | *`string`* | `sn-SN`         |\n | **Sindhi**                | *`string`* | `sd-SD`         |\n | **Sinhala-Sinhalese**     | *`string`* | `si-SI`         |\n | **Slovak**                | *`string`* | `sk-SK`         |\n | **Slovenian**             | *`string`* | `sl-SL`         |\n | **Somali**                | *`string`* | `so-SO`         |\n | **Spanish**               | *`string`* | `es-ES`         |\n | **Sundanese**             | *`string`* | `su-SU`         |\n | **Swahili**               | *`string`* | `sh-SH`         |\n | **Swedish**               | *`string`* | `sw-SW`         |\n | **Tagalog-Filipino**      | *`string`* | `tl-TL`         |\n | **Tajik**                 | *`string`* | `tg-TG`         |\n | **Tamil**                 | *`string`* | `ta-TA`         |\n | **Telugu**                | *`string`* | `te-TE`         |\n | **Thai**                  | *`string`* | `th-TH`         |\n | **Turkish**               | *`string`* | `tr-TR`         |\n | **Ukrainian**             | *`string`* | `uk-UK`         |\n | **Urdu**                  | *`string`* | `ur-UR`         |\n | **Uzbek**                 | *`string`* | `uz-UZ`         |\n | **Vietnamese**            | *`string`* | `vi-VI`         |\n | **Welsh**                 | *`string`* | `cy-CY`         |\n | **Xhosa**                 | *`string`* | `xh-XH`         |\n | **Yiddish**               | *`string`* | `yi-YI`         |\n | **Yoruba**                | *`string`* | `yo-YO`         |\n\n\n\n**AVAILABLE PROVIDERS**\n\n|Name|Value|\n|-------------------------------|---------------|\n| [**IBM Watson**](https://www.edenai.co/catalog/watson-language-translator)|`ibm`|\n                        |[**Google Cloud Services**](https://www.edenai.co/catalog/google-cloud-translation)|`google`|\n                        |[**Amazon Web Services**](https://www.edenai.co/catalog/amazon-translate)|`amazon`|\n                        |[**Micrososft Azure**](https://www.edenai.co/catalog/azure-translator)|`microsoft`|\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomaticTranslation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "result": [
                        {
                          "solution_name": "String [The full name of provider]",
                          "provider": "String [The input name of provider]",
                          "execution_time": "Float",
                          "result": {
                            "source_language": "String",
                            "target_language": "String",
                            "translated_text": "String"
                          },
                          "original_result": "Json with original response of provider",
                          "status": "success"
                        },
                        {
                          "solution_name": "String",
                          "provider": "String",
                          "error": "String",
                          "status": "fail"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Invalid request",
                        "message": "Json with error messages and fields"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Bad Credentials",
                        "message": "Please enter a valid token"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Translation"
        ]
      },
      "parameters": []
    },
    "/translation/language_detection": {
      "post": {
        "operationId": "Language Detection",
        "description": "Language Detection or language guessing is the algorithm of determining which natural language given content is in.\n\n**SUPPORTED LANGUAGE**\n\n|Name|Type|Value|\n|---------------------------|-------------------------------|---------------|\n| **English (US)**|*`string`*|`en-US`|\n| **French**|*`string`*|`fr-FR`|\n| **Spanish**|*`string`*|`es-ES`|\n\n\n\n**AVAILABLE PROVIDERS**\n\n|Name|Value|\n|-------------------------------|---------------|\n| [**IBM Watson**](https://www.edenai.co/catalog/watson-language-translator)|`ibm`|\n                                    |[**Google Cloud Services**](https://www.edenai.co/catalog/google-cloud-translation)|`google`|\n                                    |[**Amazon Web Services**](https://www.edenai.co/catalog/amazon-translate)|`amazon`|\n                                    |[**Lettria**](https://www.edenai.co/catalog/Lettria)|`lettria`|\n                                           |[**Micrososft Azure**](https://www.edenai.co/catalog/azure-translator)|`microsoft`|\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetectLanguage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "result": [
                        {
                          "solution_name": "String [The full name of provider]",
                          "provider": "String [The input name of provider]",
                          "execution_time": "Float",
                          "result": {
                            "languages": "Array of detected languages",
                            "confidences": "Array of confidence values for each detected language",
                            "text": "String [The input text]"
                          },
                          "original_result": "Json with original response of provider",
                          "status": "success"
                        },
                        {
                          "solution_name": "String",
                          "provider": "String",
                          "error": "String",
                          "status": "fail"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Invalid request",
                        "message": "Json with error messages and fields"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Bad Credentials",
                        "message": "Please enter a valid token"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Translation"
        ]
      },
      "parameters": []
    },
    "/vision/explicit_content_detection": {
      "post": {
        "operationId": "Explicit Content Detection",
        "description": "Explicit Content Detection detects adult only content in videos, who is generally inappropriate for people under the age of 18 and includes nudity, sexual activity and pornography ...\n\n**AVAILABLE PROVIDERS**\n\n|Name|Value|\n|-------------------------------|---------------|\n| [**IBM Watson**](http://www.edenai.co/catalog/watson-visual-recognition/)|`ibm`|\n                |[**Google Cloud Services**](https://www.edenai.co/catalog/google-cloud-vision)|`google`|\n                |[**Amazon Web Services**](https://www.edenai.co/catalog/amazon-rekognition)|`amazon`|\n                |[**Micrososft Azure**](https://www.edenai.co/catalog/azure-computer-vision)|`microsoft`|\n\n",
        "requestBody": {
          "$ref": "#/components/requestBodies/Explicit_Content_Detection"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "result": [
                        {
                          "solution_name": "String [The full name of provider]",
                          "provider": "String [The input name of provider]",
                          "execution_time": "Float",
                          "result": {
                            "image_path": "String [Input file name]",
                            "labels": [],
                            "likelihood": []
                          },
                          "original_result": "Json with original response of provider",
                          "status": "success"
                        },
                        {
                          "solution_name": "String",
                          "provider": "String",
                          "error": "String",
                          "status": "fail"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Invalid request",
                        "message": "Json with error messages and fields"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Bad Credentials",
                        "message": "Please enter a valid token"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Vision"
        ]
      },
      "parameters": []
    },
    "/vision/face_detection": {
      "post": {
        "operationId": "Face Detection",
        "description": "Face Detection is a computer technology being used in a variety of applications that identifies human faces in digital images.\n\n**AVAILABLE PROVIDERS**\n\n|Name|Value|\n|-------------------------------|---------------|\n| [**Google Cloud Services**](https://www.edenai.co/catalog/google-cloud-vision)|`google`|\n                |[**Amazon Web Services**](https://www.edenai.co/catalog/amazon-rekognition)|`amazon`|\n                |[**Micrososft Azure**](https://www.edenai.co/catalog/azure-api-face)|`microsoft`|\n\n",
        "requestBody": {
          "$ref": "#/components/requestBodies/Explicit_Content_Detection"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "result": [
                        {
                          "solution_name": "String [The full name of provider]",
                          "provider": "String [The input name of provider]",
                          "execution_time": "Float",
                          "result": {
                            "image_path": "String [Input file name]",
                            "attributes_label": [],
                            "attributes_value": [],
                            "confidences": [],
                            "landmarks": [],
                            "emotions": [],
                            "poses": [],
                            "x_mins": [],
                            "x_maxs": [],
                            "y_mins": [],
                            "y_maxs": []
                          },
                          "original_result": "Json with original response of provider",
                          "status": "success"
                        },
                        {
                          "solution_name": "String",
                          "provider": "String",
                          "error": "String",
                          "status": "fail"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Invalid request",
                        "message": "Json with error messages and fields"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Bad Credentials",
                        "message": "Please enter a valid token"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Vision"
        ]
      },
      "parameters": []
    },
    "/vision/object_detection": {
      "post": {
        "operationId": "Object Detection",
        "description": "Object Detection is a computer vision technique that allows us to identify and locate objects in an image or video\n\n**AVAILABLE PROVIDERS**\n\n|Name|Value|\n|-------------------------------|---------------|\n| [**IBM Watson**](http://www.edenai.co/catalog/watson-visual-recognition/)|`ibm`|\n                |[**Google Cloud Services**](https://www.edenai.co/catalog/google-cloud-vision-(ocr))|`google`|\n                |[**Amazon Web Services**](https://www.edenai.co/catalog/amazon-textract)|`amazon`|\n                |[**Micrososft Azure**](https://www.edenai.co/catalog/azure-computer-vision-(ocr))|`microsoft`|\n\n",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "description": "File Image to analyse (ex: pdf, jpg, jpeg, png, tiff)",
                    "type": "string",
                    "format": "binary"
                  },
                  "providers": {
                    "description": "Provider to compare (ex: [ 'amazon', 'microsoft', 'ibm','google'])",
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "files",
                  "providers"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "result": [
                        {
                          "solution_name": "String [The full name of provider]",
                          "provider": "String [The input name of provider]",
                          "execution_time": "Float",
                          "result": {
                            "filename": "String [Input text]",
                            "labels": [],
                            "confidences": [],
                            "x_mins": [],
                            "y_mins": [],
                            "y_maxs": []
                          },
                          "original_result": "Json with original response of provider",
                          "status": "success"
                        },
                        {
                          "solution_name": "String",
                          "provider": "String",
                          "error": "String",
                          "status": "fail"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Invalid request",
                        "message": "Json with error messages and fields"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Bad Credentials",
                        "message": "Please enter a valid token"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "type": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Vision"
        ]
      },
      "parameters": []
    }
  },
  "servers": [
    {
      "url": "https://api.edenai.run/v1/pretrained"
    }
  ],
  "components": {
    "requestBodies": {
      "Explicit_Content_Detection": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "files": {
                  "type": "string",
                  "format": "binary"
                },
                "providers": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "files",
                "providers"
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "TextToSpeechComparator": {
        "required": [
          "text",
          "language",
          "option",
          "providers"
        ],
        "type": "object",
        "properties": {
          "text": {
            "title": "Text",
            "description": "Text to transform",
            "type": "string",
            "maxLength": 300,
            "minLength": 1
          },
          "language": {
            "title": "Language",
            "description": "Language code expected (ex: fr-FR (French), en-US (English), es-ES (Spanish))",
            "type": "string",
            "minLength": 1
          },
          "option": {
            "title": "Option",
            "description": "Voice gender selected (ex: FEMALE ou MALE)",
            "type": "string",
            "minLength": 1
          },
          "providers": {
            "title": "Providers",
            "description": "Provider to compare (ex: [ 'amazon', 'microsoft', 'ibm','google'])",
            "type": "string",
            "minLength": 1
          }
        }
      },
      "KeywordExtractionComparator": {
        "required": [
          "language",
          "text",
          "providers"
        ],
        "type": "object",
        "properties": {
          "language": {
            "title": "Language",
            "description": "Language code of text (ex: fr-FR (French), en-US (English), es-ES (Spanish))",
            "type": "string",
            "minLength": 1
          },
          "text": {
            "title": "Text",
            "description": "Text to analyze",
            "type": "string",
            "maxLength": 1000,
            "minLength": 1
          },
          "providers": {
            "title": "Providers",
            "description": "Provider to compare (ex: [ 'amazon', 'microsoft', 'ibm'])",
            "type": "string",
            "minLength": 1
          }
        }
      },
      "NamedEntityRecognitionComparator": {
        "required": [
          "language",
          "text",
          "providers"
        ],
        "type": "object",
        "properties": {
          "language": {
            "title": "Language",
            "description": "Language code of text (ex: fr-FR (French), en-US (English), es-ES (Spanish))",
            "type": "string",
            "minLength": 1
          },
          "text": {
            "title": "Text",
            "description": "Text to analyze",
            "type": "string",
            "maxLength": 1000,
            "minLength": 1
          },
          "providers": {
            "title": "Providers",
            "description": "Provider to compare (ex: [ 'amazon', 'microsoft', 'ibm','google'])",
            "type": "string",
            "minLength": 1
          }
        }
      },
      "SentimentAnalysisComparator": {
        "required": [
          "language",
          "text",
          "providers"
        ],
        "type": "object",
        "properties": {
          "language": {
            "title": "Language",
            "description": "Language code of text (ex: fr-FR (French), en-US (English), es-ES (Spanish))",
            "type": "string",
            "minLength": 1
          },
          "text": {
            "title": "Text",
            "description": "Text to analyze",
            "type": "string",
            "maxLength": 1000,
            "minLength": 1
          },
          "providers": {
            "title": "Providers",
            "description": "Provider to compare (ex: [ 'amazon', 'microsoft', 'ibm', 'google'])",
            "type": "string",
            "minLength": 1
          }
        }
      },
      "SyntaxAnalysisComparator": {
        "required": [
          "language",
          "text",
          "providers"
        ],
        "type": "object",
        "properties": {
          "language": {
            "title": "Language",
            "description": "Language code of text (ex: fr-FR (French), en-US (English), es-ES (Spanish))",
            "type": "string",
            "minLength": 1
          },
          "text": {
            "title": "Text",
            "description": "Text to analyze",
            "type": "string",
            "maxLength": 1000,
            "minLength": 1
          },
          "providers": {
            "title": "Providers",
            "description": "Provider to compare (ex: [ 'amazon', 'microsoft', 'ibm','google'])",
            "type": "string",
            "minLength": 1
          }
        }
      },
      "AutomaticTranslation": {
        "required": [
          "text_to_translate",
          "source_language",
          "target_language",
          "providers"
        ],
        "type": "object",
        "properties": {
          "text_to_translate": {
            "title": "Text to translate",
            "description": "Text to translate",
            "type": "string",
            "maxLength": 3000,
            "minLength": 1
          },
          "source_language": {
            "title": "Source language",
            "description": "Language code of text (ex: fr (French), en (English), es (Spanish))",
            "type": "string",
            "minLength": 1
          },
          "target_language": {
            "title": "Target language",
            "description": "Language code of text (ex: fr (French), en (English), es (Spanish))",
            "type": "string",
            "minLength": 1
          },
          "providers": {
            "title": "Providers",
            "description": "Provider to compare (ex: [ 'amazon', 'microsoft', 'ibm', 'google'])",
            "type": "string",
            "minLength": 1
          }
        }
      },
      "DetectLanguage": {
        "required": [
          "text",
          "providers"
        ],
        "type": "object",
        "properties": {
          "text": {
            "title": "Text",
            "description": "Text to analyze",
            "type": "string",
            "maxLength": 3000,
            "minLength": 1
          },
          "providers": {
            "title": "Providers",
            "description": "Provider to compare (ex: [ 'amazon', 'microsoft', 'ibm','google'])",
            "type": "string",
            "minLength": 1
          }
        }
      }
    }
  }
}